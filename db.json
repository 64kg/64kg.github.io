{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"source/attach/3ign3.png","path":"attach/3ign3.png","modified":0,"renderable":0},{"_id":"source/attach/71ldl.png","path":"attach/71ldl.png","modified":0,"renderable":0},{"_id":"source/attach/ChemReview.pdf","path":"attach/ChemReview.pdf","modified":0,"renderable":0},{"_id":"source/attach/bcq26.png","path":"attach/bcq26.png","modified":0,"renderable":0},{"_id":"source/attach/openvpn.sh","path":"attach/openvpn.sh","modified":0,"renderable":0},{"_id":"source/attach/qot79.png","path":"attach/qot79.png","modified":0,"renderable":0},{"_id":"source/attach/ssr.sh","path":"attach/ssr.sh","modified":0,"renderable":0},{"_id":"source/attach/stjcc.png","path":"attach/stjcc.png","modified":0,"renderable":0},{"_id":"source/attach/t1mp0.png","path":"attach/t1mp0.png","modified":0,"renderable":0},{"_id":"source/attach/ylu4g.png","path":"attach/ylu4g.png","modified":0,"renderable":0},{"_id":"source/attach/g81lo.png","path":"attach/g81lo.png","modified":1,"renderable":0},{"_id":"source/attach/bvm92.png","path":"attach/bvm92.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/about.md","hash":"34defa0d2b5143a495c056c5b149b965d5342cc0","modified":1648197001079},{"_id":"source/categories.md","hash":"76e433cdee35e4acddf2fc022eb0ad53d2dcccb6","modified":1648196980167},{"_id":"source/tags.md","hash":"563070632d5e6ef6afc127e8d10ff4e70233fdfc","modified":1648197141648},{"_id":"source/_posts/_hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1647959493650},{"_id":"source/_posts/bypass-gfw.md","hash":"fd423ef649a23597fa4ec8032ee859dd43872633","modified":1648200317962},{"_id":"source/_posts/contextual-vqe.md","hash":"be4de400de95f053e7b7cfdc23f0dc997d80bcce","modified":1648200400375},{"_id":"source/_posts/intrv-algebra.md","hash":"a401d9fdec9675ffaa867f812aac8090b20e50df","modified":1648216646420},{"_id":"source/_posts/linux-cmd-tools.md","hash":"715b539199b144ee9fb0773566d7adea66379f0f","modified":1648200437238},{"_id":"source/_posts/pytorch-usage.md","hash":"e4a1b532ed1f1e81bc8f63739d06672a286b7cfa","modified":1648200458528},{"_id":"source/_posts/quant-paper-collection.md","hash":"67002ae799468d69bd3ee25984623e65c8022858","modified":1648200479230},{"_id":"source/_posts/quant-sim.md","hash":"f9a829cbe4cc78092d4ca03f317ad76395ae476c","modified":1648200498768},{"_id":"source/_posts/rand-sample.md","hash":"c820e8ce6acee5850b3120c47815e032779542e0","modified":1648200527898},{"_id":"source/_posts/rayleigh-quotient.md","hash":"b5246e68d0bd8875c3624dd81dd93099aee440d4","modified":1648200544988},{"_id":"source/_posts/resource-collection.md","hash":"8f049018f6313a10bc68f43d7b90072e025a4c97","modified":1648200567734},{"_id":"source/_posts/setup-site.md","hash":"1ccd3ea3fdf822be075a807adfead440b2a5e7c2","modified":1648825271554},{"_id":"source/_posts/vue-app.md","hash":"ca42d62854ca739a1c868a5134599d86f9d3ec92","modified":1648200653192},{"_id":"source/attach/3ign3.png","hash":"42f27520ca3cf1e215d9a67f1b28b8a0737818b8","modified":1648198070992},{"_id":"source/attach/qot79.png","hash":"6535bdbfda9ee469a2a021ecd2cd6f98d57b89e5","modified":1648198070012},{"_id":"source/attach/openvpn.sh","hash":"5a9e7dee37c58591613f9646537a608ebd98d1ed","modified":1648198069168},{"_id":"source/attach/ssr.sh","hash":"208eea67f73aed6693f220f5acbbda2c7d7c22a7","modified":1648198069360},{"_id":"source/attach/stjcc.png","hash":"a88a77eb77c40ca81074ba7b6e5d6df04c21ab69","modified":1648198069848},{"_id":"source/attach/ylu4g.png","hash":"6e42b1dd751f60b0f29a88ea2019639664bbf974","modified":1648198068540},{"_id":"source/attach/bcq26.png","hash":"ecc846c9f5f34b3b240b9897824fea8b85c3fb56","modified":1648198070520},{"_id":"source/attach/71ldl.png","hash":"791fbb576908a4a6a55dc5d7d20f264d2a8f412e","modified":1648198071920},{"_id":"source/attach/t1mp0.png","hash":"ebc9d40597e18a673154dcb0566f596f0be5f3ba","modified":1648198070396},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/README.md","hash":"fab15a85d9d8d90ecd8879525b9b74fb1c197978","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/package.json","hash":"196c358209e374cc6abfb76030b394a3f05ef7df","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"b218746129e16d405b450da1c66d029ac1a94ba1","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"7ac5700b08830381131a212c8cda65d73375b438","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"b5e2a35eb6fff56b6e32ce479e63b6fc5e44d5cb","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"b813da5aed9d73b809133db4dfb08f90ec56afd9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"6387357ac2dd498e8b8d630d27050a59180d7e8f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"8c2b6361f2de17561c1a3eede2bf47b4e2ba6ce5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"519239e35c3bda7b62b00ff5d34644f45b16fe6a","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"6c40aa438c658eb7f0cd0f6a759f18b43e7e8f93","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"87edab5a3eb7577a409c01df3f1631de40f8956f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"c12f8a7497596441503f2541d2f746f2ee7dd594","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"b65899433ce2ebee572a34fc0bd9e712d205f90d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"02bafc6ee86263790603861e356596f0c916e392","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"d41eeb262978e34de4679d8971a9e7ac5d90ecbc","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"1ce12eda88fa5df7e76ec7b78b8463fc6618410c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"ab8bb12e4d55640b1ac4252514468ce37ebcb0b0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"3abdcb715562414063e0fb3eeb6244ce59c477e0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"a2ae21ec522c9afd2a8c70f660a586ed0d8b97dc","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"9a07f2d979fc8fe0c5e07d48304187b9b03ea7ff","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"32d31cb5a155681c19f5ad0bb56dcb08429f93ef","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"76bba5d7916e9930e68215a0fce3a7d81c44510f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"48497e2156a10155dc42311633a110c9685692c9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"2b43e2d576a308289880befc27580dbb2aa34439","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"0ba2bf0266f1fcb8edbd961869f8521b29685c56","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"aff4613756456be26415febc668860fdab8d33c5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"e447160d342b1f93df5214b6a733441039ced439","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"8561e4125b227e5134cb058e2a76fb2e5233ca29","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"ca2ccf3cf1874c45712f192ad45dea96fbd9920d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"bde2c7356d9362972bde41cc206d5816f8ed714d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"57eca76cfbbe9a65bc2a77f1deebf003ed335673","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"3d8591bb92df77ceb9d5b07bc76da1ca89e5bd76","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"45477a04cf2b3c077061c8c3ada216c1ae288e0e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"09ffc0b1175e9c11b9329cf8b398123418d7b0eb","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"d82c24136bbd3443b85f07f5579845833b594684","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"c8b59b404f5d2a0b3b5cd1a6c9a10af5f30e43b5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"672dce0632af589b7fe47fa45c2094fa013885f7","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"299664182f502447c07301461db99bfd6993fdac","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"7fa8701c86485b2fe7324e017101a32417902397","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"135b87d151055eefdbc711d9e704b112b3214a84","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"9a836d2bcc3defe4bd1ee51f5f4eb7006ebdd41b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"163c7441d777bee87042d475e6ce0fde199add28","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"bab653bcf226311381e8411a0492202f1bf1fce9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"fe1868f47681e00a33a96199302be85377282f63","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"b5c7782368889fa9fd93807d28ff2daf270e3703","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"b741ab96e73370711c63a6581159f2ea8b5bfa1b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"45c485f82258d246f37deb66884bd2643323ef3a","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"3dc4628efa6debd6490fc0ebddff2424a7b319d8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"8b9407e5cfd0571ef8de7df19022b268f962fa2f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"650ed4ad6df1b6ff04647e7b6d568304e4d3ed2e","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"759e582d34d08e3386c55d87a835a9523608619f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"cee43480eba028c37d51cb620c2d81486aa24e01","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"ee94a1a27090ad24e3ed579093088d97ff96d77d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"3103b81fc76b59e1e2c161e2c484625c770ed66f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"d0805a763176b3c0003967401644f41dfe3bc9e8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"ea351936d71e0b6259febac3d7d56d1be6927bf9","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"fc1a7bac6493f24aa50665574f37f3dd954f210c","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"b6677dc2a2368084ab82bb4f145ac79e5966c150","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"c2326ee3e8b724d99c24a818ddee32813ea5bf89","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"070737d101e7cd58e997e8c7af09958268c43a21","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"41ed817e1eb64078074e245e771446ee041e5790","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"979486a41a81f2a9fd8b0b87c4f87d6416c68c7d","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"f2328caa94645836e06fb39a6a9c9a84ed68a8b5","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"d27fbf7799695295dd5860a161a13ac4d90c5ba4","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1648191394662},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"9b34143aec49e390e18f380026a45096f7477722","modified":1648191394662},{"_id":"source/attach/ChemReview.pdf","hash":"d670988c5c559d23ec7834292297a6d698631250","modified":1648198076068},{"_id":"source/_posts/barren-plateau.md","hash":"cf92d075dfaae192eff87e9ecd93dda70541c592","modified":1648283937501},{"_id":"source/_posts/ubuntu-log-md.md","hash":"1309a7a80a790c335ef942f9c900ce5840826acc","modified":1651653937884}],"Category":[{"name":"Tech","_id":"cl16fwqi300042sfff14qe02x"},{"name":"Science","_id":"cl16fwqia000a2sffa0d268k3"}],"Data":[],"Page":[{"title":"About","date":"2022-03-25T08:29:12.000Z","type":"about","_content":"","source":"about.md","raw":"---\ntitle: About\ndate: 2022-03-25 16:29:12\ntype: \"about\"\n---\n","updated":"2022-03-25T08:30:01.079Z","path":"about.html","comments":1,"layout":"page","_id":"cl16fwqhv00002sff070e1hj3","content":"\n","site":{"data":{}},"excerpt":"","more":"\n"},{"title":"Categories","date":"2022-03-25T08:25:22.000Z","type":"categories","_content":"","source":"categories.md","raw":"---\ntitle: Categories\ndate: 2022-03-25 16:25:22\ntype: \"categories\"\n---\n","updated":"2022-03-25T08:29:40.167Z","path":"categories.html","comments":1,"layout":"page","_id":"cl16fwqi100022sff1tpb4tbz","content":"\n","site":{"data":{}},"excerpt":"","more":"\n"},{"title":"Tags","date":"2022-03-25T08:25:06.000Z","type":"tags","_content":"","source":"tags.md","raw":"---\ntitle: Tags\ndate: 2022-03-25 16:25:06\ntype: \"tags\"\n---\n","updated":"2022-03-25T08:32:21.648Z","path":"tags.html","comments":1,"layout":"page","_id":"cl16fwqi500062sff3konbqkk","content":"\n","site":{"data":{}},"excerpt":"","more":"\n"}],"Post":[{"title":"Bypassing GFW","date":"2021-08-15T07:07:00.000Z","updated":"2021-09-05T12:06:00.000Z","_content":"\nContiniously recording methods, tools and scripts for the purpose of bypass GFW.\n\n<!-- more -->\n\n# VPN\n\n## OpenVPN\n\n[OpenVPN install script](/attach/openvpn.sh)\n\n# Proxy\n\n## SS/SSR\n\n[SSR install script](/attach/ssr.sh)\n\n## Clash\n\n[~~Kr328/clash-tun-for-linux~~](https://github.com/Kr328/clash-tun-for-linux)\n\n👆 not stable\n\n### Ubuntu\n\nDownload premium release from [Dreamacro/clash/releases/tag/premium](https://github.com/Dreamacro/clash/releases/tag/premium).\n\n[边缘@订阅转换API](https://bianyuan.xyz/)\n\n[Clash web ui](https://github.com/haishanh/yacd)\n\nSystemd service file: (add the `ExecStart` below, copy to `/usr/lib/systemd/system` and enable it)\n```\n[Unit]\nDescription=A rule based proxy tunnel with tun support\nAfter=network-online.target network.target\n\n[Service]\nType=simple\nUser=nobody\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=\n\n[Install]\nWantedBy=multi-user.target\n```\n\nCommon configs:\n```yaml\nport: 7890\nsocks-port: 7891\nmode: rule\nlog-level: info\nallow-lan: true\nexternal-controller: :9090\nexternal-ui: ../ui\n```\n\n","source":"_posts/bypass-gfw.md","raw":"---\ntitle: Bypassing GFW\ndate: 2021-08-15 15:07:00\nupdated: 2021-09-05 20:06:00\ncategories:\n- Tech\ntags:\n- Software\n---\n\nContiniously recording methods, tools and scripts for the purpose of bypass GFW.\n\n<!-- more -->\n\n# VPN\n\n## OpenVPN\n\n[OpenVPN install script](/attach/openvpn.sh)\n\n# Proxy\n\n## SS/SSR\n\n[SSR install script](/attach/ssr.sh)\n\n## Clash\n\n[~~Kr328/clash-tun-for-linux~~](https://github.com/Kr328/clash-tun-for-linux)\n\n👆 not stable\n\n### Ubuntu\n\nDownload premium release from [Dreamacro/clash/releases/tag/premium](https://github.com/Dreamacro/clash/releases/tag/premium).\n\n[边缘@订阅转换API](https://bianyuan.xyz/)\n\n[Clash web ui](https://github.com/haishanh/yacd)\n\nSystemd service file: (add the `ExecStart` below, copy to `/usr/lib/systemd/system` and enable it)\n```\n[Unit]\nDescription=A rule based proxy tunnel with tun support\nAfter=network-online.target network.target\n\n[Service]\nType=simple\nUser=nobody\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=\n\n[Install]\nWantedBy=multi-user.target\n```\n\nCommon configs:\n```yaml\nport: 7890\nsocks-port: 7891\nmode: rule\nlog-level: info\nallow-lan: true\nexternal-controller: :9090\nexternal-ui: ../ui\n```\n\n","slug":"bypass-gfw","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqhy00012sff4h0od4rq","content":"<p>Continiously recording methods, tools and scripts for the purpose of bypass GFW.</p>\n<span id=\"more\"></span>\n<h1 id=\"vpn\">VPN</h1>\n<h2 id=\"openvpn\">OpenVPN</h2>\n<p><a href=\"/attach/openvpn.sh\">OpenVPN install script</a></p>\n<h1 id=\"proxy\">Proxy</h1>\n<h2 id=\"ssssr\">SS/SSR</h2>\n<p><a href=\"/attach/ssr.sh\">SSR install script</a></p>\n<h2 id=\"clash\">Clash</h2>\n<p><a href=\"https://github.com/Kr328/clash-tun-for-linux\"><del>Kr328/clash-tun-for-linux</del></a></p>\n<p>👆 not stable</p>\n<h3 id=\"ubuntu\">Ubuntu</h3>\n<p>Download premium release from <a href=\"https://github.com/Dreamacro/clash/releases/tag/premium\">Dreamacro/clash/releases/tag/premium</a>.</p>\n<p><a href=\"https://bianyuan.xyz/\">边缘@订阅转换API</a></p>\n<p><a href=\"https://github.com/haishanh/yacd\">Clash web ui</a></p>\n<p>Systemd service file: (add the <code>ExecStart</code> below, copy to <code>/usr/lib/systemd/system</code> and enable it) <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=A rule based proxy tunnel with tun support</span><br><span class=\"line\">After=network-online.target network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=nobody</span><br><span class=\"line\">CapabilityBoundingSet=CAP_NET_BIND_SERVICE</span><br><span class=\"line\">AmbientCapabilities=CAP_NET_BIND_SERVICE</span><br><span class=\"line\">ExecStart=</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p>\n<p>Common configs: <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">port:</span> <span class=\"number\">7890</span></span><br><span class=\"line\"><span class=\"attr\">socks-port:</span> <span class=\"number\">7891</span></span><br><span class=\"line\"><span class=\"attr\">mode:</span> <span class=\"string\">rule</span></span><br><span class=\"line\"><span class=\"attr\">log-level:</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"attr\">allow-lan:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">external-controller:</span> <span class=\"string\">:9090</span></span><br><span class=\"line\"><span class=\"attr\">external-ui:</span> <span class=\"string\">../ui</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>Continiously recording methods, tools and scripts for the purpose of bypass GFW.</p>","more":"<h1 id=\"vpn\">VPN</h1>\n<h2 id=\"openvpn\">OpenVPN</h2>\n<p><a href=\"/attach/openvpn.sh\">OpenVPN install script</a></p>\n<h1 id=\"proxy\">Proxy</h1>\n<h2 id=\"ssssr\">SS/SSR</h2>\n<p><a href=\"/attach/ssr.sh\">SSR install script</a></p>\n<h2 id=\"clash\">Clash</h2>\n<p><a href=\"https://github.com/Kr328/clash-tun-for-linux\"><del>Kr328/clash-tun-for-linux</del></a></p>\n<p>👆 not stable</p>\n<h3 id=\"ubuntu\">Ubuntu</h3>\n<p>Download premium release from <a href=\"https://github.com/Dreamacro/clash/releases/tag/premium\">Dreamacro/clash/releases/tag/premium</a>.</p>\n<p><a href=\"https://bianyuan.xyz/\">边缘@订阅转换API</a></p>\n<p><a href=\"https://github.com/haishanh/yacd\">Clash web ui</a></p>\n<p>Systemd service file: (add the <code>ExecStart</code> below, copy to <code>/usr/lib/systemd/system</code> and enable it) <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=A rule based proxy tunnel with tun support</span><br><span class=\"line\">After=network-online.target network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=nobody</span><br><span class=\"line\">CapabilityBoundingSet=CAP_NET_BIND_SERVICE</span><br><span class=\"line\">AmbientCapabilities=CAP_NET_BIND_SERVICE</span><br><span class=\"line\">ExecStart=</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p>\n<p>Common configs: <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">port:</span> <span class=\"number\">7890</span></span><br><span class=\"line\"><span class=\"attr\">socks-port:</span> <span class=\"number\">7891</span></span><br><span class=\"line\"><span class=\"attr\">mode:</span> <span class=\"string\">rule</span></span><br><span class=\"line\"><span class=\"attr\">log-level:</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"attr\">allow-lan:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">external-controller:</span> <span class=\"string\">:9090</span></span><br><span class=\"line\"><span class=\"attr\">external-ui:</span> <span class=\"string\">../ui</span></span><br></pre></td></tr></table></figure></p>"},{"title":"Contextual subspace VQE","date":"2021-10-16T09:40:00.000Z","updated":"2021-10-17T11:34:00.000Z","_content":"\nSummary of contextual subspace VQE, how it divide a Hamiltonian into classical and non-classical parts, how to evaluate the classical part, and how to reduce qubit requirements for the non-classical part. This note also contains some of my own thoughts on it.\n\n<!-- more -->\n\n# Introduction\n\nThis is a sequential work of William M. Kirby, Peter J. Love, et al. [[1]](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501)[[2]](https://arxiv.org/abs/2002.05693)[[3]](https://quantum-journal.org/papers/q-2021-05-14-456/).\n\n# Mermin–Peres magic square\n\n$$\n\\begin{bmatrix}\nIZ & ZI & ZZ\\\\\nXI & IX & XX\\\\\n-XZ & -ZX & YY\n\\end{bmatrix}\n$$\n\n# Measurement contextuality\n\nThis section is a summary of [[1]](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501).\n\n$\\mathcal{S}$: set of observables (paulis)\n\n$\\mathcal{Z}$: observables (in $\\mathcal{S}$) which commute universally in $\\mathcal{S}$\n\n$\\overline{\\mathcal{S}}$: closure under inference\n\n**Theorem**. $\\mathcal{S}$ is **noncontextual** iff there is a *consistent* valuation, iff the *compability graph* of $\\mathcal{S} \\backslash \\mathcal{Z}$ consists of disjoint cliques, i.e., $\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}$\n\nE.g., $\\mathcal{S} =\\{IZ,ZI,IX,XZ\\}$, compability graph:![enter image description here](/attach/stjcc.png)\n\n# Noncontextual Hamiltonian\n\nThis section is a summary of [[2]](https://arxiv.org/abs/2002.05693).\n\n$\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}$.\n\n-   At least *one*, but not necessarily *all*, valuation is consistent.\n\n(E.g., $\\mathcal{S} =\\{IX,XI,XX\\}$)\n\n-   Claim: number of consistent valuations is a power of 2.\n\n(One minimum generator set: $\\mathcal{G} \\cup \\mathcal{A}$, where $\\mathcal{A}$ consists of exactly one element $A_{i}$ from each $\\mathcal{C}_{i}$, and $\\mathcal{G}$ is a minimum generator set of $\\mathcal{Z} \\cup \\{A_{i} C_{i} |1\\leqslant i\\leqslant N,C_{i} \\in \\mathcal{C}_{i}\\}$)\n\n-   *Ontos* vs *epistēmē*.\n\n-   Not necessarily all distribution of valuations (epistemic state) is possible (correponds to a valid ontic state).\n\n(E.g., $\\mathcal{S} =\\{X,Z\\}$)\n\n-   A valid set of epistemic states: $E:=\\left\\{(\\vec{q} ,\\vec{r}) \\in \\{\\pm 1\\}^{|G|} \\times \\mathbb{R}^{N} ||\\vec{r} |=1\\right\\}$, each $(\\vec{q} ,\\vec{r})$ defines a joint distribution:\n\n$$P_{(\\vec{q} ,\\vec{r})}( g_{1} ,\\cdots ,a_{1} ,\\cdots ) =\\prod \\delta _{g_{i} ,q_{i}}\\prod \\frac{1}{2} |a_{i} +r_{i} |$$\n($\\langle G_{i} \\rangle =q_{i} ,\\langle A\\rangle =+1$, where\n$A( r) :=\\sum r_{i} A_{i}$)\n\n-   $E$ contains every eigenstate of the original $H$.\n\n# Contextual subspace VQE\n\nThis section is a summary of [[3]](https://quantum-journal.org/papers/q-2021-05-14-456/).\n\n$\\mathcal{S} =\\mathcal{S}_{nc} \\cup \\mathcal{S}_{c}$.\n\n-   Eigenstates of $H$ are not necessarily contained in $E$.\n\n-   Howerver, by searching in ground epistemic state of $\\mathcal{S}_{nc}$ (a subspace of the Hilbert space), one reduces qubits.\n\n(Rotate $G_{i}$s into single qubit $Z$ gates and $A$ into a single qubit Pauli gate, thus fixing some qubits and restricting $\\mathcal{S}_{c}$ to fewer qubits. Do VQE on restricted $\\mathcal{S}_{c}$, the approximation ground energy is $E_{c} +E_{nc}$)\n\n-   Reduce $\\mathcal{S}_{nc}$ to introduce more quantum correction (thus achieve higher accuracy), until a full VQE is recovered.\n\n![enter image description here](/attach/t1mp0.png)\n\n![enter image description here](/attach/3ign3.png)\n\n# How contextual can a Hamiltonian be\n\nA Hamiltonian can be arbitrarily contextual, i.e., the proportion of a non-contextual subset can be arbitrarily small.\n\n**Claim 1:** Every graph can be the compatibility graph of a set of Pauli strings.\n\nEncode a graph into Pauli strings by induction. Initially set the encoding of every vertex to be an $I$-string of length $n$ (number of vertices). Pick a vertex, set the first operator of its encoding to be $X$. For every other vertex, set the first operator to be $Z$ iff there's no edge between them.\n\n**Claim 2:** Disjoint-cliques subgraph (DCS) can be arbitrarily small, compared to the original graph.\n\nConstruct an interval graph as follows. For fixed positive integer $d$,\n$$V=\\bigcup _{k=0}^{d-1}\\left\\{\\left(\\frac{i}{2^{k}} ,\\frac{i+1}{2^{k}}\\right) |0\\leqslant i< 2^{k}\\right\\}$$\nFor example,\n![enter image description here](/attach/qot79.png)\nIt can be shown that $n=|V|=d2^{d-1}$, yet the maximum DCS has size $2^{d} -1$.","source":"_posts/contextual-vqe.md","raw":"---\ntitle: Contextual subspace VQE\ndate: 2021-10-16 17:40:00\nupdated: 2021-10-17 19:34:00\ncategories:\n- Science\ntags:\n- Quantum\n- Paper\n- Note\n---\n\nSummary of contextual subspace VQE, how it divide a Hamiltonian into classical and non-classical parts, how to evaluate the classical part, and how to reduce qubit requirements for the non-classical part. This note also contains some of my own thoughts on it.\n\n<!-- more -->\n\n# Introduction\n\nThis is a sequential work of William M. Kirby, Peter J. Love, et al. [[1]](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501)[[2]](https://arxiv.org/abs/2002.05693)[[3]](https://quantum-journal.org/papers/q-2021-05-14-456/).\n\n# Mermin–Peres magic square\n\n$$\n\\begin{bmatrix}\nIZ & ZI & ZZ\\\\\nXI & IX & XX\\\\\n-XZ & -ZX & YY\n\\end{bmatrix}\n$$\n\n# Measurement contextuality\n\nThis section is a summary of [[1]](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501).\n\n$\\mathcal{S}$: set of observables (paulis)\n\n$\\mathcal{Z}$: observables (in $\\mathcal{S}$) which commute universally in $\\mathcal{S}$\n\n$\\overline{\\mathcal{S}}$: closure under inference\n\n**Theorem**. $\\mathcal{S}$ is **noncontextual** iff there is a *consistent* valuation, iff the *compability graph* of $\\mathcal{S} \\backslash \\mathcal{Z}$ consists of disjoint cliques, i.e., $\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}$\n\nE.g., $\\mathcal{S} =\\{IZ,ZI,IX,XZ\\}$, compability graph:![enter image description here](/attach/stjcc.png)\n\n# Noncontextual Hamiltonian\n\nThis section is a summary of [[2]](https://arxiv.org/abs/2002.05693).\n\n$\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}$.\n\n-   At least *one*, but not necessarily *all*, valuation is consistent.\n\n(E.g., $\\mathcal{S} =\\{IX,XI,XX\\}$)\n\n-   Claim: number of consistent valuations is a power of 2.\n\n(One minimum generator set: $\\mathcal{G} \\cup \\mathcal{A}$, where $\\mathcal{A}$ consists of exactly one element $A_{i}$ from each $\\mathcal{C}_{i}$, and $\\mathcal{G}$ is a minimum generator set of $\\mathcal{Z} \\cup \\{A_{i} C_{i} |1\\leqslant i\\leqslant N,C_{i} \\in \\mathcal{C}_{i}\\}$)\n\n-   *Ontos* vs *epistēmē*.\n\n-   Not necessarily all distribution of valuations (epistemic state) is possible (correponds to a valid ontic state).\n\n(E.g., $\\mathcal{S} =\\{X,Z\\}$)\n\n-   A valid set of epistemic states: $E:=\\left\\{(\\vec{q} ,\\vec{r}) \\in \\{\\pm 1\\}^{|G|} \\times \\mathbb{R}^{N} ||\\vec{r} |=1\\right\\}$, each $(\\vec{q} ,\\vec{r})$ defines a joint distribution:\n\n$$P_{(\\vec{q} ,\\vec{r})}( g_{1} ,\\cdots ,a_{1} ,\\cdots ) =\\prod \\delta _{g_{i} ,q_{i}}\\prod \\frac{1}{2} |a_{i} +r_{i} |$$\n($\\langle G_{i} \\rangle =q_{i} ,\\langle A\\rangle =+1$, where\n$A( r) :=\\sum r_{i} A_{i}$)\n\n-   $E$ contains every eigenstate of the original $H$.\n\n# Contextual subspace VQE\n\nThis section is a summary of [[3]](https://quantum-journal.org/papers/q-2021-05-14-456/).\n\n$\\mathcal{S} =\\mathcal{S}_{nc} \\cup \\mathcal{S}_{c}$.\n\n-   Eigenstates of $H$ are not necessarily contained in $E$.\n\n-   Howerver, by searching in ground epistemic state of $\\mathcal{S}_{nc}$ (a subspace of the Hilbert space), one reduces qubits.\n\n(Rotate $G_{i}$s into single qubit $Z$ gates and $A$ into a single qubit Pauli gate, thus fixing some qubits and restricting $\\mathcal{S}_{c}$ to fewer qubits. Do VQE on restricted $\\mathcal{S}_{c}$, the approximation ground energy is $E_{c} +E_{nc}$)\n\n-   Reduce $\\mathcal{S}_{nc}$ to introduce more quantum correction (thus achieve higher accuracy), until a full VQE is recovered.\n\n![enter image description here](/attach/t1mp0.png)\n\n![enter image description here](/attach/3ign3.png)\n\n# How contextual can a Hamiltonian be\n\nA Hamiltonian can be arbitrarily contextual, i.e., the proportion of a non-contextual subset can be arbitrarily small.\n\n**Claim 1:** Every graph can be the compatibility graph of a set of Pauli strings.\n\nEncode a graph into Pauli strings by induction. Initially set the encoding of every vertex to be an $I$-string of length $n$ (number of vertices). Pick a vertex, set the first operator of its encoding to be $X$. For every other vertex, set the first operator to be $Z$ iff there's no edge between them.\n\n**Claim 2:** Disjoint-cliques subgraph (DCS) can be arbitrarily small, compared to the original graph.\n\nConstruct an interval graph as follows. For fixed positive integer $d$,\n$$V=\\bigcup _{k=0}^{d-1}\\left\\{\\left(\\frac{i}{2^{k}} ,\\frac{i+1}{2^{k}}\\right) |0\\leqslant i< 2^{k}\\right\\}$$\nFor example,\n![enter image description here](/attach/qot79.png)\nIt can be shown that $n=|V|=d2^{d-1}$, yet the maximum DCS has size $2^{d} -1$.","slug":"contextual-vqe","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqi100032sff2869abfp","content":"<p>Summary of contextual subspace VQE, how it divide a Hamiltonian into classical and non-classical parts, how to evaluate the classical part, and how to reduce qubit requirements for the non-classical part. This note also contains some of my own thoughts on it.</p>\n<span id=\"more\"></span>\n<h1 id=\"introduction\">Introduction</h1>\n<p>This is a sequential work of William M. Kirby, Peter J. Love, et al. <a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501\">[1]</a><a href=\"https://arxiv.org/abs/2002.05693\">[2]</a><a href=\"https://quantum-journal.org/papers/q-2021-05-14-456/\">[3]</a>.</p>\n<h1 id=\"merminperes-magic-square\">Mermin–Peres magic square</h1>\n<p><span class=\"math display\">\\[\n\\begin{bmatrix}\nIZ &amp; ZI &amp; ZZ\\\\\nXI &amp; IX &amp; XX\\\\\n-XZ &amp; -ZX &amp; YY\n\\end{bmatrix}\n\\]</span></p>\n<h1 id=\"measurement-contextuality\">Measurement contextuality</h1>\n<p>This section is a summary of <a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501\">[1]</a>.</p>\n<p><span class=\"math inline\">\\(\\mathcal{S}\\)</span>: set of observables (paulis)</p>\n<p><span class=\"math inline\">\\(\\mathcal{Z}\\)</span>: observables (in <span class=\"math inline\">\\(\\mathcal{S}\\)</span>) which commute universally in <span class=\"math inline\">\\(\\mathcal{S}\\)</span></p>\n<p><span class=\"math inline\">\\(\\overline{\\mathcal{S}}\\)</span>: closure under inference</p>\n<p><strong>Theorem</strong>. <span class=\"math inline\">\\(\\mathcal{S}\\)</span> is <strong>noncontextual</strong> iff there is a <em>consistent</em> valuation, iff the <em>compability graph</em> of <span class=\"math inline\">\\(\\mathcal{S} \\backslash \\mathcal{Z}\\)</span> consists of disjoint cliques, i.e., <span class=\"math inline\">\\(\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}\\)</span></p>\n<p>E.g., <span class=\"math inline\">\\(\\mathcal{S} =\\{IZ,ZI,IX,XZ\\}\\)</span>, compability graph:<img src=\"/attach/stjcc.png\" alt=\"enter image description here\" /></p>\n<h1 id=\"noncontextual-hamiltonian\">Noncontextual Hamiltonian</h1>\n<p>This section is a summary of <a href=\"https://arxiv.org/abs/2002.05693\">[2]</a>.</p>\n<p><span class=\"math inline\">\\(\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}\\)</span>.</p>\n<ul>\n<li>At least <em>one</em>, but not necessarily <em>all</em>, valuation is consistent.</li>\n</ul>\n<p>(E.g., <span class=\"math inline\">\\(\\mathcal{S} =\\{IX,XI,XX\\}\\)</span>)</p>\n<ul>\n<li>Claim: number of consistent valuations is a power of 2.</li>\n</ul>\n<p>(One minimum generator set: <span class=\"math inline\">\\(\\mathcal{G} \\cup \\mathcal{A}\\)</span>, where <span class=\"math inline\">\\(\\mathcal{A}\\)</span> consists of exactly one element <span class=\"math inline\">\\(A_{i}\\)</span> from each <span class=\"math inline\">\\(\\mathcal{C}_{i}\\)</span>, and <span class=\"math inline\">\\(\\mathcal{G}\\)</span> is a minimum generator set of <span class=\"math inline\">\\(\\mathcal{Z} \\cup \\{A_{i} C_{i} |1\\leqslant i\\leqslant N,C_{i} \\in \\mathcal{C}_{i}\\}\\)</span>)</p>\n<ul>\n<li><p><em>Ontos</em> vs <em>epistēmē</em>.</p></li>\n<li><p>Not necessarily all distribution of valuations (epistemic state) is possible (correponds to a valid ontic state).</p></li>\n</ul>\n<p>(E.g., <span class=\"math inline\">\\(\\mathcal{S} =\\{X,Z\\}\\)</span>)</p>\n<ul>\n<li>A valid set of epistemic states: <span class=\"math inline\">\\(E:=\\left\\{(\\vec{q} ,\\vec{r}) \\in \\{\\pm 1\\}^{|G|} \\times \\mathbb{R}^{N} ||\\vec{r} |=1\\right\\}\\)</span>, each <span class=\"math inline\">\\((\\vec{q} ,\\vec{r})\\)</span> defines a joint distribution:</li>\n</ul>\n<p><span class=\"math display\">\\[P_{(\\vec{q} ,\\vec{r})}( g_{1} ,\\cdots ,a_{1} ,\\cdots ) =\\prod \\delta _{g_{i} ,q_{i}}\\prod \\frac{1}{2} |a_{i} +r_{i} |\\]</span> (<span class=\"math inline\">\\(\\langle G_{i} \\rangle =q_{i} ,\\langle A\\rangle =+1\\)</span>, where <span class=\"math inline\">\\(A( r) :=\\sum r_{i} A_{i}\\)</span>)</p>\n<ul>\n<li><span class=\"math inline\">\\(E\\)</span> contains every eigenstate of the original <span class=\"math inline\">\\(H\\)</span>.</li>\n</ul>\n<h1 id=\"contextual-subspace-vqe\">Contextual subspace VQE</h1>\n<p>This section is a summary of <a href=\"https://quantum-journal.org/papers/q-2021-05-14-456/\">[3]</a>.</p>\n<p><span class=\"math inline\">\\(\\mathcal{S} =\\mathcal{S}_{nc} \\cup \\mathcal{S}_{c}\\)</span>.</p>\n<ul>\n<li><p>Eigenstates of <span class=\"math inline\">\\(H\\)</span> are not necessarily contained in <span class=\"math inline\">\\(E\\)</span>.</p></li>\n<li><p>Howerver, by searching in ground epistemic state of <span class=\"math inline\">\\(\\mathcal{S}_{nc}\\)</span> (a subspace of the Hilbert space), one reduces qubits.</p></li>\n</ul>\n<p>(Rotate <span class=\"math inline\">\\(G_{i}\\)</span>s into single qubit <span class=\"math inline\">\\(Z\\)</span> gates and <span class=\"math inline\">\\(A\\)</span> into a single qubit Pauli gate, thus fixing some qubits and restricting <span class=\"math inline\">\\(\\mathcal{S}_{c}\\)</span> to fewer qubits. Do VQE on restricted <span class=\"math inline\">\\(\\mathcal{S}_{c}\\)</span>, the approximation ground energy is <span class=\"math inline\">\\(E_{c} +E_{nc}\\)</span>)</p>\n<ul>\n<li>Reduce <span class=\"math inline\">\\(\\mathcal{S}_{nc}\\)</span> to introduce more quantum correction (thus achieve higher accuracy), until a full VQE is recovered.</li>\n</ul>\n<figure>\n<img src=\"/attach/t1mp0.png\" alt=\"enter image description here\" /><figcaption>enter image description here</figcaption>\n</figure>\n<figure>\n<img src=\"/attach/3ign3.png\" alt=\"enter image description here\" /><figcaption>enter image description here</figcaption>\n</figure>\n<h1 id=\"how-contextual-can-a-hamiltonian-be\">How contextual can a Hamiltonian be</h1>\n<p>A Hamiltonian can be arbitrarily contextual, i.e., the proportion of a non-contextual subset can be arbitrarily small.</p>\n<p><strong>Claim 1:</strong> Every graph can be the compatibility graph of a set of Pauli strings.</p>\n<p>Encode a graph into Pauli strings by induction. Initially set the encoding of every vertex to be an <span class=\"math inline\">\\(I\\)</span>-string of length <span class=\"math inline\">\\(n\\)</span> (number of vertices). Pick a vertex, set the first operator of its encoding to be <span class=\"math inline\">\\(X\\)</span>. For every other vertex, set the first operator to be <span class=\"math inline\">\\(Z\\)</span> iff there's no edge between them.</p>\n<p><strong>Claim 2:</strong> Disjoint-cliques subgraph (DCS) can be arbitrarily small, compared to the original graph.</p>\n<p>Construct an interval graph as follows. For fixed positive integer <span class=\"math inline\">\\(d\\)</span>, <span class=\"math display\">\\[V=\\bigcup _{k=0}^{d-1}\\left\\{\\left(\\frac{i}{2^{k}} ,\\frac{i+1}{2^{k}}\\right) |0\\leqslant i&lt; 2^{k}\\right\\}\\]</span> For example, <img src=\"/attach/qot79.png\" alt=\"enter image description here\" /> It can be shown that <span class=\"math inline\">\\(n=|V|=d2^{d-1}\\)</span>, yet the maximum DCS has size <span class=\"math inline\">\\(2^{d} -1\\)</span>.</p>\n","site":{"data":{}},"excerpt":"<p>Summary of contextual subspace VQE, how it divide a Hamiltonian into classical and non-classical parts, how to evaluate the classical part, and how to reduce qubit requirements for the non-classical part. This note also contains some of my own thoughts on it.</p>","more":"<h1 id=\"introduction\">Introduction</h1>\n<p>This is a sequential work of William M. Kirby, Peter J. Love, et al. <a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501\">[1]</a><a href=\"https://arxiv.org/abs/2002.05693\">[2]</a><a href=\"https://quantum-journal.org/papers/q-2021-05-14-456/\">[3]</a>.</p>\n<h1 id=\"merminperes-magic-square\">Mermin–Peres magic square</h1>\n<p><span class=\"math display\">\\[\n\\begin{bmatrix}\nIZ &amp; ZI &amp; ZZ\\\\\nXI &amp; IX &amp; XX\\\\\n-XZ &amp; -ZX &amp; YY\n\\end{bmatrix}\n\\]</span></p>\n<h1 id=\"measurement-contextuality\">Measurement contextuality</h1>\n<p>This section is a summary of <a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501\">[1]</a>.</p>\n<p><span class=\"math inline\">\\(\\mathcal{S}\\)</span>: set of observables (paulis)</p>\n<p><span class=\"math inline\">\\(\\mathcal{Z}\\)</span>: observables (in <span class=\"math inline\">\\(\\mathcal{S}\\)</span>) which commute universally in <span class=\"math inline\">\\(\\mathcal{S}\\)</span></p>\n<p><span class=\"math inline\">\\(\\overline{\\mathcal{S}}\\)</span>: closure under inference</p>\n<p><strong>Theorem</strong>. <span class=\"math inline\">\\(\\mathcal{S}\\)</span> is <strong>noncontextual</strong> iff there is a <em>consistent</em> valuation, iff the <em>compability graph</em> of <span class=\"math inline\">\\(\\mathcal{S} \\backslash \\mathcal{Z}\\)</span> consists of disjoint cliques, i.e., <span class=\"math inline\">\\(\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}\\)</span></p>\n<p>E.g., <span class=\"math inline\">\\(\\mathcal{S} =\\{IZ,ZI,IX,XZ\\}\\)</span>, compability graph:<img src=\"/attach/stjcc.png\" alt=\"enter image description here\" /></p>\n<h1 id=\"noncontextual-hamiltonian\">Noncontextual Hamiltonian</h1>\n<p>This section is a summary of <a href=\"https://arxiv.org/abs/2002.05693\">[2]</a>.</p>\n<p><span class=\"math inline\">\\(\\mathcal{S} =\\mathcal{Z} \\cup \\mathcal{C}_{1} \\cup \\cdots \\cup \\mathcal{C}_{N}\\)</span>.</p>\n<ul>\n<li>At least <em>one</em>, but not necessarily <em>all</em>, valuation is consistent.</li>\n</ul>\n<p>(E.g., <span class=\"math inline\">\\(\\mathcal{S} =\\{IX,XI,XX\\}\\)</span>)</p>\n<ul>\n<li>Claim: number of consistent valuations is a power of 2.</li>\n</ul>\n<p>(One minimum generator set: <span class=\"math inline\">\\(\\mathcal{G} \\cup \\mathcal{A}\\)</span>, where <span class=\"math inline\">\\(\\mathcal{A}\\)</span> consists of exactly one element <span class=\"math inline\">\\(A_{i}\\)</span> from each <span class=\"math inline\">\\(\\mathcal{C}_{i}\\)</span>, and <span class=\"math inline\">\\(\\mathcal{G}\\)</span> is a minimum generator set of <span class=\"math inline\">\\(\\mathcal{Z} \\cup \\{A_{i} C_{i} |1\\leqslant i\\leqslant N,C_{i} \\in \\mathcal{C}_{i}\\}\\)</span>)</p>\n<ul>\n<li><p><em>Ontos</em> vs <em>epistēmē</em>.</p></li>\n<li><p>Not necessarily all distribution of valuations (epistemic state) is possible (correponds to a valid ontic state).</p></li>\n</ul>\n<p>(E.g., <span class=\"math inline\">\\(\\mathcal{S} =\\{X,Z\\}\\)</span>)</p>\n<ul>\n<li>A valid set of epistemic states: <span class=\"math inline\">\\(E:=\\left\\{(\\vec{q} ,\\vec{r}) \\in \\{\\pm 1\\}^{|G|} \\times \\mathbb{R}^{N} ||\\vec{r} |=1\\right\\}\\)</span>, each <span class=\"math inline\">\\((\\vec{q} ,\\vec{r})\\)</span> defines a joint distribution:</li>\n</ul>\n<p><span class=\"math display\">\\[P_{(\\vec{q} ,\\vec{r})}( g_{1} ,\\cdots ,a_{1} ,\\cdots ) =\\prod \\delta _{g_{i} ,q_{i}}\\prod \\frac{1}{2} |a_{i} +r_{i} |\\]</span> (<span class=\"math inline\">\\(\\langle G_{i} \\rangle =q_{i} ,\\langle A\\rangle =+1\\)</span>, where <span class=\"math inline\">\\(A( r) :=\\sum r_{i} A_{i}\\)</span>)</p>\n<ul>\n<li><span class=\"math inline\">\\(E\\)</span> contains every eigenstate of the original <span class=\"math inline\">\\(H\\)</span>.</li>\n</ul>\n<h1 id=\"contextual-subspace-vqe\">Contextual subspace VQE</h1>\n<p>This section is a summary of <a href=\"https://quantum-journal.org/papers/q-2021-05-14-456/\">[3]</a>.</p>\n<p><span class=\"math inline\">\\(\\mathcal{S} =\\mathcal{S}_{nc} \\cup \\mathcal{S}_{c}\\)</span>.</p>\n<ul>\n<li><p>Eigenstates of <span class=\"math inline\">\\(H\\)</span> are not necessarily contained in <span class=\"math inline\">\\(E\\)</span>.</p></li>\n<li><p>Howerver, by searching in ground epistemic state of <span class=\"math inline\">\\(\\mathcal{S}_{nc}\\)</span> (a subspace of the Hilbert space), one reduces qubits.</p></li>\n</ul>\n<p>(Rotate <span class=\"math inline\">\\(G_{i}\\)</span>s into single qubit <span class=\"math inline\">\\(Z\\)</span> gates and <span class=\"math inline\">\\(A\\)</span> into a single qubit Pauli gate, thus fixing some qubits and restricting <span class=\"math inline\">\\(\\mathcal{S}_{c}\\)</span> to fewer qubits. Do VQE on restricted <span class=\"math inline\">\\(\\mathcal{S}_{c}\\)</span>, the approximation ground energy is <span class=\"math inline\">\\(E_{c} +E_{nc}\\)</span>)</p>\n<ul>\n<li>Reduce <span class=\"math inline\">\\(\\mathcal{S}_{nc}\\)</span> to introduce more quantum correction (thus achieve higher accuracy), until a full VQE is recovered.</li>\n</ul>\n<figure>\n<img src=\"/attach/t1mp0.png\" alt=\"enter image description here\" /><figcaption>enter image description here</figcaption>\n</figure>\n<figure>\n<img src=\"/attach/3ign3.png\" alt=\"enter image description here\" /><figcaption>enter image description here</figcaption>\n</figure>\n<h1 id=\"how-contextual-can-a-hamiltonian-be\">How contextual can a Hamiltonian be</h1>\n<p>A Hamiltonian can be arbitrarily contextual, i.e., the proportion of a non-contextual subset can be arbitrarily small.</p>\n<p><strong>Claim 1:</strong> Every graph can be the compatibility graph of a set of Pauli strings.</p>\n<p>Encode a graph into Pauli strings by induction. Initially set the encoding of every vertex to be an <span class=\"math inline\">\\(I\\)</span>-string of length <span class=\"math inline\">\\(n\\)</span> (number of vertices). Pick a vertex, set the first operator of its encoding to be <span class=\"math inline\">\\(X\\)</span>. For every other vertex, set the first operator to be <span class=\"math inline\">\\(Z\\)</span> iff there's no edge between them.</p>\n<p><strong>Claim 2:</strong> Disjoint-cliques subgraph (DCS) can be arbitrarily small, compared to the original graph.</p>\n<p>Construct an interval graph as follows. For fixed positive integer <span class=\"math inline\">\\(d\\)</span>, <span class=\"math display\">\\[V=\\bigcup _{k=0}^{d-1}\\left\\{\\left(\\frac{i}{2^{k}} ,\\frac{i+1}{2^{k}}\\right) |0\\leqslant i&lt; 2^{k}\\right\\}\\]</span> For example, <img src=\"/attach/qot79.png\" alt=\"enter image description here\" /> It can be shown that <span class=\"math inline\">\\(n=|V|=d2^{d-1}\\)</span>, yet the maximum DCS has size <span class=\"math inline\">\\(2^{d} -1\\)</span>.</p>"},{"title":"The Algebra of Independent Nonnegative Integer Random Variables (IntRV)","date":"2022-03-25T12:32:13.000Z","_content":"\nI introduce a algebra for manipulating independent nonnegative integer random variables, which I\ncall \"IntRV\". These random variables are of particular interest in discrete mathematics and computer\nscience. In fact, the reason why I use this abbrevation \"IntRV\" is for the convenience of programming\n(for example implementing a class under the name \"IntRV\"). I will give an example where this algebra\nexhibits great power.\n\n<!-- more -->\n\n# Definition\n\nDespite the name \"algebra\", what I introduce in the following do not exactly meet the definition\nof algebra in mathematics.\n\nWe are working with independent nonnegative integer random variables, or IntRV, over $\\mathbb{R}_+$.\nAs the name suggests, IntRV are random variables that can take the value of a nonnegative integer.\nMoreover, every two IntRV should be independent. The trivial cases are constant IntRV, which includes\n$0,1,2,\\dots$.\n\nThere are many operators in IntRV's algebra. I categorize all of them by the number of operants.\nIn the following, $a,b,c,\\ldots$ represents nonnegative real numbers, $p,q$ represents real number\nbetween 0 and 1, $X,Y,Z,\\dots$ represents IntRV.\n\n- Unary operators:\n  - Scalar multiplication: $cX$\n  - Mixing with 0: $p\\rightarrow X$\n  - Maximum power: $\\max^nX$\n  - Power: $X^n$\n- Binary operators:\n  - Add: $X+Y$\n  - Mutiplication: $X\\cdotp Y$\n  - Mixing: $X\\oplus Y$\n  - Maximum: $\\max(X,Y)$\n\nWe detail them one by one.\n\n## Scalar multiplication\n\n","source":"_posts/intrv-algebra.md","raw":"---\ntitle: The Algebra of Independent Nonnegative Integer Random Variables (IntRV)\ndate: 2022-03-25 20:32:13\ncategories:\n- Science\ntags:\n- Math\n- Note\n---\n\nI introduce a algebra for manipulating independent nonnegative integer random variables, which I\ncall \"IntRV\". These random variables are of particular interest in discrete mathematics and computer\nscience. In fact, the reason why I use this abbrevation \"IntRV\" is for the convenience of programming\n(for example implementing a class under the name \"IntRV\"). I will give an example where this algebra\nexhibits great power.\n\n<!-- more -->\n\n# Definition\n\nDespite the name \"algebra\", what I introduce in the following do not exactly meet the definition\nof algebra in mathematics.\n\nWe are working with independent nonnegative integer random variables, or IntRV, over $\\mathbb{R}_+$.\nAs the name suggests, IntRV are random variables that can take the value of a nonnegative integer.\nMoreover, every two IntRV should be independent. The trivial cases are constant IntRV, which includes\n$0,1,2,\\dots$.\n\nThere are many operators in IntRV's algebra. I categorize all of them by the number of operants.\nIn the following, $a,b,c,\\ldots$ represents nonnegative real numbers, $p,q$ represents real number\nbetween 0 and 1, $X,Y,Z,\\dots$ represents IntRV.\n\n- Unary operators:\n  - Scalar multiplication: $cX$\n  - Mixing with 0: $p\\rightarrow X$\n  - Maximum power: $\\max^nX$\n  - Power: $X^n$\n- Binary operators:\n  - Add: $X+Y$\n  - Mutiplication: $X\\cdotp Y$\n  - Mixing: $X\\oplus Y$\n  - Maximum: $\\max(X,Y)$\n\nWe detail them one by one.\n\n## Scalar multiplication\n\n","slug":"intrv-algebra","published":1,"updated":"2022-03-25T13:57:26.420Z","_id":"cl16fwqi600072sffbwfofwfy","comments":1,"layout":"post","photos":[],"link":"","content":"<p>I introduce a algebra for manipulating independent nonnegative integer random variables, which I call \"IntRV\". These random variables are of particular interest in discrete mathematics and computer science. In fact, the reason why I use this abbrevation \"IntRV\" is for the convenience of programming (for example implementing a class under the name \"IntRV\"). I will give an example where this algebra exhibits great power.</p>\n<span id=\"more\"></span>\n<h1 id=\"definition\">Definition</h1>\n<p>Despite the name \"algebra\", what I introduce in the following do not exactly meet the definition of algebra in mathematics.</p>\n<p>We are working with independent nonnegative integer random variables, or IntRV, over <span class=\"math inline\">\\(\\mathbb{R}_+\\)</span>. As the name suggests, IntRV are random variables that can take the value of a nonnegative integer. Moreover, every two IntRV should be independent. The trivial cases are constant IntRV, which includes <span class=\"math inline\">\\(0,1,2,\\dots\\)</span>.</p>\n<p>There are many operators in IntRV's algebra. I categorize all of them by the number of operants. In the following, <span class=\"math inline\">\\(a,b,c,\\ldots\\)</span> represents nonnegative real numbers, <span class=\"math inline\">\\(p,q\\)</span> represents real number between 0 and 1, <span class=\"math inline\">\\(X,Y,Z,\\dots\\)</span> represents IntRV.</p>\n<ul>\n<li>Unary operators:\n<ul>\n<li>Scalar multiplication: <span class=\"math inline\">\\(cX\\)</span></li>\n<li>Mixing with 0: <span class=\"math inline\">\\(p\\rightarrow X\\)</span></li>\n<li>Maximum power: <span class=\"math inline\">\\(\\max^nX\\)</span></li>\n<li>Power: <span class=\"math inline\">\\(X^n\\)</span></li>\n</ul></li>\n<li>Binary operators:\n<ul>\n<li>Add: <span class=\"math inline\">\\(X+Y\\)</span></li>\n<li>Mutiplication: <span class=\"math inline\">\\(X\\cdotp Y\\)</span></li>\n<li>Mixing: <span class=\"math inline\">\\(X\\oplus Y\\)</span></li>\n<li>Maximum: <span class=\"math inline\">\\(\\max(X,Y)\\)</span></li>\n</ul></li>\n</ul>\n<p>We detail them one by one.</p>\n<h2 id=\"scalar-multiplication\">Scalar multiplication</h2>\n","site":{"data":{}},"excerpt":"<p>I introduce a algebra for manipulating independent nonnegative integer random variables, which I call \"IntRV\". These random variables are of particular interest in discrete mathematics and computer science. In fact, the reason why I use this abbrevation \"IntRV\" is for the convenience of programming (for example implementing a class under the name \"IntRV\"). I will give an example where this algebra exhibits great power.</p>","more":"<h1 id=\"definition\">Definition</h1>\n<p>Despite the name \"algebra\", what I introduce in the following do not exactly meet the definition of algebra in mathematics.</p>\n<p>We are working with independent nonnegative integer random variables, or IntRV, over <span class=\"math inline\">\\(\\mathbb{R}_+\\)</span>. As the name suggests, IntRV are random variables that can take the value of a nonnegative integer. Moreover, every two IntRV should be independent. The trivial cases are constant IntRV, which includes <span class=\"math inline\">\\(0,1,2,\\dots\\)</span>.</p>\n<p>There are many operators in IntRV's algebra. I categorize all of them by the number of operants. In the following, <span class=\"math inline\">\\(a,b,c,\\ldots\\)</span> represents nonnegative real numbers, <span class=\"math inline\">\\(p,q\\)</span> represents real number between 0 and 1, <span class=\"math inline\">\\(X,Y,Z,\\dots\\)</span> represents IntRV.</p>\n<ul>\n<li>Unary operators:\n<ul>\n<li>Scalar multiplication: <span class=\"math inline\">\\(cX\\)</span></li>\n<li>Mixing with 0: <span class=\"math inline\">\\(p\\rightarrow X\\)</span></li>\n<li>Maximum power: <span class=\"math inline\">\\(\\max^nX\\)</span></li>\n<li>Power: <span class=\"math inline\">\\(X^n\\)</span></li>\n</ul></li>\n<li>Binary operators:\n<ul>\n<li>Add: <span class=\"math inline\">\\(X+Y\\)</span></li>\n<li>Mutiplication: <span class=\"math inline\">\\(X\\cdotp Y\\)</span></li>\n<li>Mixing: <span class=\"math inline\">\\(X\\oplus Y\\)</span></li>\n<li>Maximum: <span class=\"math inline\">\\(\\max(X,Y)\\)</span></li>\n</ul></li>\n</ul>\n<p>We detail them one by one.</p>\n<h2 id=\"scalar-multiplication\">Scalar multiplication</h2>"},{"title":"Linux command line tools","date":"2021-10-23T12:31:00.000Z","updated":"2022-02-15T11:41:00.000Z","_content":"\nA note on usage of several linux CLI tools. These tools includes pdf tools, image tools, etc.\n\n<!-- more -->\n\n# PDF tools\n\n## poppler-utils\n\nInstall by `apt install poppler-utils`.\n\nPoppler is a PDF rendering library based on Xpdf PDF viewer.\nThis package contains command line utilities (based on Poppler) for getting information of PDF documents, convert them to other formats, or manipulate them:\n\n- pdfdetach -- lists or extracts embedded files (attachments)\n- pdffonts -- font analyzer\n- pdfimages -- image extractor\n- pdfinfo -- document information\n- pdfseparate -- page extraction tool\n- pdfsig -- verifies digital signatures\n- pdftocairo -- PDF to PNG/JPEG/PDF/PS/EPS/SVG converter using Cairo\n- pdftohtml -- PDF to HTML converter\n- pdftoppm -- PDF to PPM/PNG/JPEG image converter\n- pdftops -- PDF to PostScript (PS) converter\n- pdftotext -- text extraction\n- pdfunite -- document merging tool\n\n## pdftk\n\nInstall by `apt install pdftk`.\n\nDump meta data:\n```bash\npdftk src.pdf dump_data output meta.txt\n```\n\nUpdate meta data:\n```bash\npdftk src.pdf update_info meta.txt output dest.pdf\n```\n\n## Example: add missing bookmarks\n\nSuppose \"src.pdf\" (*a editable pdf*) is a book that has table of contents, but has no bookmarks (so that you can do quick jumping).\n\nFirst, extract the text version of table of contents (say, page 6 to page 12) out as \"toc.txt\":\n```bash\npdftotext -f 6 -l 12 src.pdf toc.txt\n```\n\nSecond, parse \"toc.txt\" by hand (which is the most time consuming part) to produce \"meta-bookmarks.txt\". The format of \"meta-bookmarks.txt\" is something like:\n```\nBookmarkBegin\nBookmarkTitle: Title One\nBookmarkLevel: 1\nBookmarkPageNumber: 1\nBookmarkBegin\nBookmarkTitle: Title Two\nBookmarkLevel: 1\nBookmarkPageNumber: 2\n...\n```\n\nFinally insert the above meta data into the pdf, and save as \"dest.pdf\":\n```bash\npdftk src.pdf dump_data output meta.txt\ncat meta.txt meta-bookmarks.txt > meta-update.txt\npdftk src.pdf update_info meta-update.txt output dest.pdf\n```\n\n# Image tools\n\n## imagemagick\n\nInstall by `apt install imagemagick`.\n\n### Reduce image file size\n\nOne obvious way is resize the dimension\n```bash\n# fit into a 800px square, DPI is mantained\nconvert -resize 800x800 in.png out.png\n# halve the size\nconvert -resize 50%x50% in.png out.png\n```\n\nTo reduce file size without changing dimension, it depends on the format of image. PNG is not a lossy format, so you have to reduce colors or depth:\n```bash\n# reduce colors to 254\nconvert -colors 254 in.png out.png\n# reduce depth to 5\nconvert -depth 5 in.png out.png\n```\nJPEG has a settable \"quality\" factor, thus you can convert any image to JPEG before resizing.\n```bash\nconvert -quality 50% in.any out.jpg\n```","source":"_posts/linux-cmd-tools.md","raw":"---\ntitle: Linux command line tools\ndate: 2021-10-23 20:31:00\nupdated: 2022-02-15 19:41:00\ncategories:\n- Tech\ntags:\n- Linux\n- Software\n---\n\nA note on usage of several linux CLI tools. These tools includes pdf tools, image tools, etc.\n\n<!-- more -->\n\n# PDF tools\n\n## poppler-utils\n\nInstall by `apt install poppler-utils`.\n\nPoppler is a PDF rendering library based on Xpdf PDF viewer.\nThis package contains command line utilities (based on Poppler) for getting information of PDF documents, convert them to other formats, or manipulate them:\n\n- pdfdetach -- lists or extracts embedded files (attachments)\n- pdffonts -- font analyzer\n- pdfimages -- image extractor\n- pdfinfo -- document information\n- pdfseparate -- page extraction tool\n- pdfsig -- verifies digital signatures\n- pdftocairo -- PDF to PNG/JPEG/PDF/PS/EPS/SVG converter using Cairo\n- pdftohtml -- PDF to HTML converter\n- pdftoppm -- PDF to PPM/PNG/JPEG image converter\n- pdftops -- PDF to PostScript (PS) converter\n- pdftotext -- text extraction\n- pdfunite -- document merging tool\n\n## pdftk\n\nInstall by `apt install pdftk`.\n\nDump meta data:\n```bash\npdftk src.pdf dump_data output meta.txt\n```\n\nUpdate meta data:\n```bash\npdftk src.pdf update_info meta.txt output dest.pdf\n```\n\n## Example: add missing bookmarks\n\nSuppose \"src.pdf\" (*a editable pdf*) is a book that has table of contents, but has no bookmarks (so that you can do quick jumping).\n\nFirst, extract the text version of table of contents (say, page 6 to page 12) out as \"toc.txt\":\n```bash\npdftotext -f 6 -l 12 src.pdf toc.txt\n```\n\nSecond, parse \"toc.txt\" by hand (which is the most time consuming part) to produce \"meta-bookmarks.txt\". The format of \"meta-bookmarks.txt\" is something like:\n```\nBookmarkBegin\nBookmarkTitle: Title One\nBookmarkLevel: 1\nBookmarkPageNumber: 1\nBookmarkBegin\nBookmarkTitle: Title Two\nBookmarkLevel: 1\nBookmarkPageNumber: 2\n...\n```\n\nFinally insert the above meta data into the pdf, and save as \"dest.pdf\":\n```bash\npdftk src.pdf dump_data output meta.txt\ncat meta.txt meta-bookmarks.txt > meta-update.txt\npdftk src.pdf update_info meta-update.txt output dest.pdf\n```\n\n# Image tools\n\n## imagemagick\n\nInstall by `apt install imagemagick`.\n\n### Reduce image file size\n\nOne obvious way is resize the dimension\n```bash\n# fit into a 800px square, DPI is mantained\nconvert -resize 800x800 in.png out.png\n# halve the size\nconvert -resize 50%x50% in.png out.png\n```\n\nTo reduce file size without changing dimension, it depends on the format of image. PNG is not a lossy format, so you have to reduce colors or depth:\n```bash\n# reduce colors to 254\nconvert -colors 254 in.png out.png\n# reduce depth to 5\nconvert -depth 5 in.png out.png\n```\nJPEG has a settable \"quality\" factor, thus you can convert any image to JPEG before resizing.\n```bash\nconvert -quality 50% in.any out.jpg\n```","slug":"linux-cmd-tools","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqi800082sff5lx88u3x","content":"<p>A note on usage of several linux CLI tools. These tools includes pdf tools, image tools, etc.</p>\n<span id=\"more\"></span>\n<h1 id=\"pdf-tools\">PDF tools</h1>\n<h2 id=\"poppler-utils\">poppler-utils</h2>\n<p>Install by <code>apt install poppler-utils</code>.</p>\n<p>Poppler is a PDF rendering library based on Xpdf PDF viewer. This package contains command line utilities (based on Poppler) for getting information of PDF documents, convert them to other formats, or manipulate them:</p>\n<ul>\n<li>pdfdetach -- lists or extracts embedded files (attachments)</li>\n<li>pdffonts -- font analyzer</li>\n<li>pdfimages -- image extractor</li>\n<li>pdfinfo -- document information</li>\n<li>pdfseparate -- page extraction tool</li>\n<li>pdfsig -- verifies digital signatures</li>\n<li>pdftocairo -- PDF to PNG/JPEG/PDF/PS/EPS/SVG converter using Cairo</li>\n<li>pdftohtml -- PDF to HTML converter</li>\n<li>pdftoppm -- PDF to PPM/PNG/JPEG image converter</li>\n<li>pdftops -- PDF to PostScript (PS) converter</li>\n<li>pdftotext -- text extraction</li>\n<li>pdfunite -- document merging tool</li>\n</ul>\n<h2 id=\"pdftk\">pdftk</h2>\n<p>Install by <code>apt install pdftk</code>.</p>\n<p>Dump meta data: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftk src.pdf dump_data output meta.txt</span><br></pre></td></tr></table></figure></p>\n<p>Update meta data: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftk src.pdf update_info meta.txt output dest.pdf</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"example-add-missing-bookmarks\">Example: add missing bookmarks</h2>\n<p>Suppose \"src.pdf\" (<em>a editable pdf</em>) is a book that has table of contents, but has no bookmarks (so that you can do quick jumping).</p>\n<p>First, extract the text version of table of contents (say, page 6 to page 12) out as \"toc.txt\": <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftotext -f 6 -l 12 src.pdf toc.txt</span><br></pre></td></tr></table></figure></p>\n<p>Second, parse \"toc.txt\" by hand (which is the most time consuming part) to produce \"meta-bookmarks.txt\". The format of \"meta-bookmarks.txt\" is something like: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">BookmarkBegin</span><br><span class=\"line\">BookmarkTitle: Title One</span><br><span class=\"line\">BookmarkLevel: 1</span><br><span class=\"line\">BookmarkPageNumber: 1</span><br><span class=\"line\">BookmarkBegin</span><br><span class=\"line\">BookmarkTitle: Title Two</span><br><span class=\"line\">BookmarkLevel: 1</span><br><span class=\"line\">BookmarkPageNumber: 2</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<p>Finally insert the above meta data into the pdf, and save as \"dest.pdf\": <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftk src.pdf dump_data output meta.txt</span><br><span class=\"line\"><span class=\"built_in\">cat</span> meta.txt meta-bookmarks.txt &gt; meta-update.txt</span><br><span class=\"line\">pdftk src.pdf update_info meta-update.txt output dest.pdf</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"image-tools\">Image tools</h1>\n<h2 id=\"imagemagick\">imagemagick</h2>\n<p>Install by <code>apt install imagemagick</code>.</p>\n<h3 id=\"reduce-image-file-size\">Reduce image file size</h3>\n<p>One obvious way is resize the dimension <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># fit into a 800px square, DPI is mantained</span></span><br><span class=\"line\">convert -resize 800x800 in.png out.png</span><br><span class=\"line\"><span class=\"comment\"># halve the size</span></span><br><span class=\"line\">convert -resize 50%x50% in.png out.png</span><br></pre></td></tr></table></figure></p>\n<p>To reduce file size without changing dimension, it depends on the format of image. PNG is not a lossy format, so you have to reduce colors or depth: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># reduce colors to 254</span></span><br><span class=\"line\">convert -colors 254 in.png out.png</span><br><span class=\"line\"><span class=\"comment\"># reduce depth to 5</span></span><br><span class=\"line\">convert -depth 5 in.png out.png</span><br></pre></td></tr></table></figure> JPEG has a settable \"quality\" factor, thus you can convert any image to JPEG before resizing. <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">convert -quality 50% in.any out.jpg</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>A note on usage of several linux CLI tools. These tools includes pdf tools, image tools, etc.</p>","more":"<h1 id=\"pdf-tools\">PDF tools</h1>\n<h2 id=\"poppler-utils\">poppler-utils</h2>\n<p>Install by <code>apt install poppler-utils</code>.</p>\n<p>Poppler is a PDF rendering library based on Xpdf PDF viewer. This package contains command line utilities (based on Poppler) for getting information of PDF documents, convert them to other formats, or manipulate them:</p>\n<ul>\n<li>pdfdetach -- lists or extracts embedded files (attachments)</li>\n<li>pdffonts -- font analyzer</li>\n<li>pdfimages -- image extractor</li>\n<li>pdfinfo -- document information</li>\n<li>pdfseparate -- page extraction tool</li>\n<li>pdfsig -- verifies digital signatures</li>\n<li>pdftocairo -- PDF to PNG/JPEG/PDF/PS/EPS/SVG converter using Cairo</li>\n<li>pdftohtml -- PDF to HTML converter</li>\n<li>pdftoppm -- PDF to PPM/PNG/JPEG image converter</li>\n<li>pdftops -- PDF to PostScript (PS) converter</li>\n<li>pdftotext -- text extraction</li>\n<li>pdfunite -- document merging tool</li>\n</ul>\n<h2 id=\"pdftk\">pdftk</h2>\n<p>Install by <code>apt install pdftk</code>.</p>\n<p>Dump meta data: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftk src.pdf dump_data output meta.txt</span><br></pre></td></tr></table></figure></p>\n<p>Update meta data: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftk src.pdf update_info meta.txt output dest.pdf</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"example-add-missing-bookmarks\">Example: add missing bookmarks</h2>\n<p>Suppose \"src.pdf\" (<em>a editable pdf</em>) is a book that has table of contents, but has no bookmarks (so that you can do quick jumping).</p>\n<p>First, extract the text version of table of contents (say, page 6 to page 12) out as \"toc.txt\": <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftotext -f 6 -l 12 src.pdf toc.txt</span><br></pre></td></tr></table></figure></p>\n<p>Second, parse \"toc.txt\" by hand (which is the most time consuming part) to produce \"meta-bookmarks.txt\". The format of \"meta-bookmarks.txt\" is something like: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">BookmarkBegin</span><br><span class=\"line\">BookmarkTitle: Title One</span><br><span class=\"line\">BookmarkLevel: 1</span><br><span class=\"line\">BookmarkPageNumber: 1</span><br><span class=\"line\">BookmarkBegin</span><br><span class=\"line\">BookmarkTitle: Title Two</span><br><span class=\"line\">BookmarkLevel: 1</span><br><span class=\"line\">BookmarkPageNumber: 2</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<p>Finally insert the above meta data into the pdf, and save as \"dest.pdf\": <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdftk src.pdf dump_data output meta.txt</span><br><span class=\"line\"><span class=\"built_in\">cat</span> meta.txt meta-bookmarks.txt &gt; meta-update.txt</span><br><span class=\"line\">pdftk src.pdf update_info meta-update.txt output dest.pdf</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"image-tools\">Image tools</h1>\n<h2 id=\"imagemagick\">imagemagick</h2>\n<p>Install by <code>apt install imagemagick</code>.</p>\n<h3 id=\"reduce-image-file-size\">Reduce image file size</h3>\n<p>One obvious way is resize the dimension <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># fit into a 800px square, DPI is mantained</span></span><br><span class=\"line\">convert -resize 800x800 in.png out.png</span><br><span class=\"line\"><span class=\"comment\"># halve the size</span></span><br><span class=\"line\">convert -resize 50%x50% in.png out.png</span><br></pre></td></tr></table></figure></p>\n<p>To reduce file size without changing dimension, it depends on the format of image. PNG is not a lossy format, so you have to reduce colors or depth: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># reduce colors to 254</span></span><br><span class=\"line\">convert -colors 254 in.png out.png</span><br><span class=\"line\"><span class=\"comment\"># reduce depth to 5</span></span><br><span class=\"line\">convert -depth 5 in.png out.png</span><br></pre></td></tr></table></figure> JPEG has a settable \"quality\" factor, thus you can convert any image to JPEG before resizing. <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">convert -quality 50% in.any out.jpg</span><br></pre></td></tr></table></figure></p>"},{"title":"Pytorch usage","date":"2022-03-25T07:55:16.000Z","_content":"\nUsage of PyTorch\n\n<!-- more -->\n\n# Installation\n\nFollow the instruction on [official website](https://pytorch.org/get-started/locally/).\n\nIn my case, the command is\n```sh\nmkdir pytorch && cd pytorch\npipenv install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113\n```\n\nIt downloads ~2.6GB of resources.","source":"_posts/pytorch-usage.md","raw":"---\ntitle: Pytorch usage\ndate: 2022-03-25 15:55:16\ncategories:\n- Tech\ntags:\n- ML\n- Python\n- Software\n---\n\nUsage of PyTorch\n\n<!-- more -->\n\n# Installation\n\nFollow the instruction on [official website](https://pytorch.org/get-started/locally/).\n\nIn my case, the command is\n```sh\nmkdir pytorch && cd pytorch\npipenv install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113\n```\n\nIt downloads ~2.6GB of resources.","slug":"pytorch-usage","published":1,"updated":"2022-03-25T09:27:38.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqi900092sff31yc9j4t","content":"<p>Usage of PyTorch</p>\n<span id=\"more\"></span>\n<h1 id=\"installation\">Installation</h1>\n<p>Follow the instruction on <a href=\"https://pytorch.org/get-started/locally/\">official website</a>.</p>\n<p>In my case, the command is <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> pytorch &amp;&amp; <span class=\"built_in\">cd</span> pytorch</span><br><span class=\"line\">pipenv install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113</span><br></pre></td></tr></table></figure></p>\n<p>It downloads ~2.6GB of resources.</p>\n","site":{"data":{}},"excerpt":"<p>Usage of PyTorch</p>","more":"<h1 id=\"installation\">Installation</h1>\n<p>Follow the instruction on <a href=\"https://pytorch.org/get-started/locally/\">official website</a>.</p>\n<p>In my case, the command is <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> pytorch &amp;&amp; <span class=\"built_in\">cd</span> pytorch</span><br><span class=\"line\">pipenv install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113</span><br></pre></td></tr></table></figure></p>\n<p>It downloads ~2.6GB of resources.</p>"},{"title":"Collection of quantum papers","date":"2021-09-01T06:17:00.000Z","updated":"2022-01-17T13:45:00.000Z","_content":"\nCollection of quantum related papers I've read.\n\n<!-- more -->\n\n# VQA\n\n## 2021\n\n[Variational quantum algorithms](https://arxiv.org/abs/2012.09265)\n\nM. Cerezo, et al. | Nature Reviews Physics\n\nReview on variational quantum algorithms. Very useful.\n\n[An efficient quantum algorithm for the time evolution of parameterized circuits](https://doi.org/10.22331/q-2021-07-28-512)\n\nStefano Barison, et al. | Quantum\n\nModel VQS gradient update rule as an optimization problem.\n\n[Cost Function Dependent Barren Plateaus in Shallow Parametrized Quantum Circuits](https://www.nature.com/articles/s41467-021-21728-w)\n\nM. Cerezo, et al. | Nature Communications\n\nCost function based analysis of Barren plateaus.\n\n[Qubit-excitation-based adaptive variational quantum eigensolver](https://www.nature.com/articles/s42005-021-00730-0)\n\nYordan S. Yordanov, et al. | Nature Communication Physics\n\nAdaptation to Qubit-ADAPT-VQE, QEB-ADAPT-VQE, converge fast comparably with fermion-ADAPT-VQE while maintaining shallow CNOT depth.\n\n[Variational quantum algorithm with information sharing](https://doi.org/10.1038/s41534-021-00452-9)\n\nChris N. Self, et al. | NPJ Quantum Inf.\n\nScheme for parallel Bayesian optimzation of varational problem (VQE etc.) with similar parameters. Information sharing between similar problems helps reducing iterations in need (~10-50 its, compared to ~100-1000 for gradient descent methods).\n\n[Qubit-ADAPT-VQE: An Adaptive Algorithm for Constructing Hardware-Efficient Ansätze on a Quantum Processor](https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.2.020310)\n\nTang, H. L. et al. | PRX Quantum\n\nAn improved version of [ADAPT-VQE](https://www.nature.com/articles/s41467-019-10988-2), where operator pool is reduced two $2n-2$ Pauli strings (Hamiltonian satisfies time-reversal symmetry). This was proved by showing that the operator sets $\\{Z_kY_{k+1},Y_k\\}_{1\\leq k<n}$ is complete (for real Hamiltonian and real states).\n\n[Contextual Subspace Variational Quantum Eigensolver](https://quantum-journal.org/papers/q-2021-05-14-456/)\n\nWilliam M. Kirby, Andrew Tranter, and Peter J. Love | Quantum\n\nContextual subspace variational quantum eigensolver (CS-VQE), a hybrid quantum-classical algorithm for approximating the ground state energy of a Hamiltonian. The approximation to the ground state energy is obtained as the sum of two contributions.\n\n## 2020\n\n[Entanglement Devised Barren Plateau Mitigation](https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.3.033090)\n\nTaylor L. Patti et al. | Physical Review Research\n\nIt suggests that Barren plateaus may be connected with spread of entanglement (which shall be further checked) and provides several mitigation strategies based on that. Three insights it provides are important: low variance of gradients doesn't equal pool training performance, loss function relating to eigenvector of an observable often trains better (despite low variance), introduction of Langevin noise helps avoid Barren plateaus is both surprising and worth further study.\n\n[Classical Simulation of Noncontextual Pauli Hamiltonians](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501)\n\nWilliam M. Kirby and Peter J. Love | PhysRevLett\n\nContextuality is an indicator of non-classicality, and a resource for various quantum procedures. In this paper, we present an efficiently computable test to determine whether or not the objective function for a VQE procedure is contextual.\n\n[Classical Simulation of Noncontextual Pauli Hamiltonians](https://doi.org/10.1103/PhysRevA.102.032418)\n\nWilliam M. Kirby and Peter J. Love | Physical Review A\n\nNoncontextual Pauli Hamiltonians decompose into sets of Pauli terms to which joint values may be assigned without contradiction. We construct a quasi-quantized model for noncontextual Pauli Hamiltonians. Using this model, we give an algorithm to classically simulate noncontextual VQE. We also use the model to show that the noncontextual Hamiltonian problem is NP-complete.\n\n[Is the Trotterized UCCSD Ansatz Chemically Well-Defined?](https://arxiv.org/abs/1910.10329)\n\nHarper R. Grimsley et al. | arXiv\n\nOperator ordering in trotterization of UCCSD has a significant effect (large energy differences between orderings) when there is a significant\namount of electron correlation.\n\n## 2019\n\n[An adaptive variational algorithm for exact molecular simulations on a quantum computer](https://www.nature.com/articles/s41467-019-10988-2)\n\nGrimsley H. R. et al. | Nat. Commun.\n\nThe fermion ADAPT-VQE algorithm. The ansatz is constructed by starting from Hartree-Fock state, and adding fermionic operators that produces largest energy gradient.![adapt-vqe](/attach/71ldl.png)\n\n# Quantum chemistry\n\n## 2020\n[Quantum computational chemistry](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003)\n\nSam McArdle et al. | Rev. Mod. Phys.\n\nThis review provides a comprehensive introduction to both computational chemistry and quantum computing, bridging the current knowledge gap.","source":"_posts/quant-paper-collection.md","raw":"---\ntitle: Collection of quantum papers\ndate: 2021-09-01 14:17:00\nupdated: 2022-01-17 21:45:00\ncategories:\n- Science\ntags:\n- Quantum\n- Collection\n- Paper\n---\n\nCollection of quantum related papers I've read.\n\n<!-- more -->\n\n# VQA\n\n## 2021\n\n[Variational quantum algorithms](https://arxiv.org/abs/2012.09265)\n\nM. Cerezo, et al. | Nature Reviews Physics\n\nReview on variational quantum algorithms. Very useful.\n\n[An efficient quantum algorithm for the time evolution of parameterized circuits](https://doi.org/10.22331/q-2021-07-28-512)\n\nStefano Barison, et al. | Quantum\n\nModel VQS gradient update rule as an optimization problem.\n\n[Cost Function Dependent Barren Plateaus in Shallow Parametrized Quantum Circuits](https://www.nature.com/articles/s41467-021-21728-w)\n\nM. Cerezo, et al. | Nature Communications\n\nCost function based analysis of Barren plateaus.\n\n[Qubit-excitation-based adaptive variational quantum eigensolver](https://www.nature.com/articles/s42005-021-00730-0)\n\nYordan S. Yordanov, et al. | Nature Communication Physics\n\nAdaptation to Qubit-ADAPT-VQE, QEB-ADAPT-VQE, converge fast comparably with fermion-ADAPT-VQE while maintaining shallow CNOT depth.\n\n[Variational quantum algorithm with information sharing](https://doi.org/10.1038/s41534-021-00452-9)\n\nChris N. Self, et al. | NPJ Quantum Inf.\n\nScheme for parallel Bayesian optimzation of varational problem (VQE etc.) with similar parameters. Information sharing between similar problems helps reducing iterations in need (~10-50 its, compared to ~100-1000 for gradient descent methods).\n\n[Qubit-ADAPT-VQE: An Adaptive Algorithm for Constructing Hardware-Efficient Ansätze on a Quantum Processor](https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.2.020310)\n\nTang, H. L. et al. | PRX Quantum\n\nAn improved version of [ADAPT-VQE](https://www.nature.com/articles/s41467-019-10988-2), where operator pool is reduced two $2n-2$ Pauli strings (Hamiltonian satisfies time-reversal symmetry). This was proved by showing that the operator sets $\\{Z_kY_{k+1},Y_k\\}_{1\\leq k<n}$ is complete (for real Hamiltonian and real states).\n\n[Contextual Subspace Variational Quantum Eigensolver](https://quantum-journal.org/papers/q-2021-05-14-456/)\n\nWilliam M. Kirby, Andrew Tranter, and Peter J. Love | Quantum\n\nContextual subspace variational quantum eigensolver (CS-VQE), a hybrid quantum-classical algorithm for approximating the ground state energy of a Hamiltonian. The approximation to the ground state energy is obtained as the sum of two contributions.\n\n## 2020\n\n[Entanglement Devised Barren Plateau Mitigation](https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.3.033090)\n\nTaylor L. Patti et al. | Physical Review Research\n\nIt suggests that Barren plateaus may be connected with spread of entanglement (which shall be further checked) and provides several mitigation strategies based on that. Three insights it provides are important: low variance of gradients doesn't equal pool training performance, loss function relating to eigenvector of an observable often trains better (despite low variance), introduction of Langevin noise helps avoid Barren plateaus is both surprising and worth further study.\n\n[Classical Simulation of Noncontextual Pauli Hamiltonians](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501)\n\nWilliam M. Kirby and Peter J. Love | PhysRevLett\n\nContextuality is an indicator of non-classicality, and a resource for various quantum procedures. In this paper, we present an efficiently computable test to determine whether or not the objective function for a VQE procedure is contextual.\n\n[Classical Simulation of Noncontextual Pauli Hamiltonians](https://doi.org/10.1103/PhysRevA.102.032418)\n\nWilliam M. Kirby and Peter J. Love | Physical Review A\n\nNoncontextual Pauli Hamiltonians decompose into sets of Pauli terms to which joint values may be assigned without contradiction. We construct a quasi-quantized model for noncontextual Pauli Hamiltonians. Using this model, we give an algorithm to classically simulate noncontextual VQE. We also use the model to show that the noncontextual Hamiltonian problem is NP-complete.\n\n[Is the Trotterized UCCSD Ansatz Chemically Well-Defined?](https://arxiv.org/abs/1910.10329)\n\nHarper R. Grimsley et al. | arXiv\n\nOperator ordering in trotterization of UCCSD has a significant effect (large energy differences between orderings) when there is a significant\namount of electron correlation.\n\n## 2019\n\n[An adaptive variational algorithm for exact molecular simulations on a quantum computer](https://www.nature.com/articles/s41467-019-10988-2)\n\nGrimsley H. R. et al. | Nat. Commun.\n\nThe fermion ADAPT-VQE algorithm. The ansatz is constructed by starting from Hartree-Fock state, and adding fermionic operators that produces largest energy gradient.![adapt-vqe](/attach/71ldl.png)\n\n# Quantum chemistry\n\n## 2020\n[Quantum computational chemistry](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003)\n\nSam McArdle et al. | Rev. Mod. Phys.\n\nThis review provides a comprehensive introduction to both computational chemistry and quantum computing, bridging the current knowledge gap.","slug":"quant-paper-collection","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqib000d2sff8hengg3v","content":"<p>Collection of quantum related papers I've read.</p>\n<span id=\"more\"></span>\n<h1 id=\"vqa\">VQA</h1>\n<h2 id=\"section\">2021</h2>\n<p><a href=\"https://arxiv.org/abs/2012.09265\">Variational quantum algorithms</a></p>\n<p>M. Cerezo, et al. | Nature Reviews Physics</p>\n<p>Review on variational quantum algorithms. Very useful.</p>\n<p><a href=\"https://doi.org/10.22331/q-2021-07-28-512\">An efficient quantum algorithm for the time evolution of parameterized circuits</a></p>\n<p>Stefano Barison, et al. | Quantum</p>\n<p>Model VQS gradient update rule as an optimization problem.</p>\n<p><a href=\"https://www.nature.com/articles/s41467-021-21728-w\">Cost Function Dependent Barren Plateaus in Shallow Parametrized Quantum Circuits</a></p>\n<p>M. Cerezo, et al. | Nature Communications</p>\n<p>Cost function based analysis of Barren plateaus.</p>\n<p><a href=\"https://www.nature.com/articles/s42005-021-00730-0\">Qubit-excitation-based adaptive variational quantum eigensolver</a></p>\n<p>Yordan S. Yordanov, et al. | Nature Communication Physics</p>\n<p>Adaptation to Qubit-ADAPT-VQE, QEB-ADAPT-VQE, converge fast comparably with fermion-ADAPT-VQE while maintaining shallow CNOT depth.</p>\n<p><a href=\"https://doi.org/10.1038/s41534-021-00452-9\">Variational quantum algorithm with information sharing</a></p>\n<p>Chris N. Self, et al. | NPJ Quantum Inf.</p>\n<p>Scheme for parallel Bayesian optimzation of varational problem (VQE etc.) with similar parameters. Information sharing between similar problems helps reducing iterations in need (~10-50 its, compared to ~100-1000 for gradient descent methods).</p>\n<p><a href=\"https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.2.020310\">Qubit-ADAPT-VQE: An Adaptive Algorithm for Constructing Hardware-Efficient Ansätze on a Quantum Processor</a></p>\n<p>Tang, H. L. et al. | PRX Quantum</p>\n<p>An improved version of <a href=\"https://www.nature.com/articles/s41467-019-10988-2\">ADAPT-VQE</a>, where operator pool is reduced two <span class=\"math inline\">\\(2n-2\\)</span> Pauli strings (Hamiltonian satisfies time-reversal symmetry). This was proved by showing that the operator sets <span class=\"math inline\">\\(\\{Z_kY_{k+1},Y_k\\}_{1\\leq k&lt;n}\\)</span> is complete (for real Hamiltonian and real states).</p>\n<p><a href=\"https://quantum-journal.org/papers/q-2021-05-14-456/\">Contextual Subspace Variational Quantum Eigensolver</a></p>\n<p>William M. Kirby, Andrew Tranter, and Peter J. Love | Quantum</p>\n<p>Contextual subspace variational quantum eigensolver (CS-VQE), a hybrid quantum-classical algorithm for approximating the ground state energy of a Hamiltonian. The approximation to the ground state energy is obtained as the sum of two contributions.</p>\n<h2 id=\"section-1\">2020</h2>\n<p><a href=\"https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.3.033090\">Entanglement Devised Barren Plateau Mitigation</a></p>\n<p>Taylor L. Patti et al. | Physical Review Research</p>\n<p>It suggests that Barren plateaus may be connected with spread of entanglement (which shall be further checked) and provides several mitigation strategies based on that. Three insights it provides are important: low variance of gradients doesn't equal pool training performance, loss function relating to eigenvector of an observable often trains better (despite low variance), introduction of Langevin noise helps avoid Barren plateaus is both surprising and worth further study.</p>\n<p><a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501\">Classical Simulation of Noncontextual Pauli Hamiltonians</a></p>\n<p>William M. Kirby and Peter J. Love | PhysRevLett</p>\n<p>Contextuality is an indicator of non-classicality, and a resource for various quantum procedures. In this paper, we present an efficiently computable test to determine whether or not the objective function for a VQE procedure is contextual.</p>\n<p><a href=\"https://doi.org/10.1103/PhysRevA.102.032418\">Classical Simulation of Noncontextual Pauli Hamiltonians</a></p>\n<p>William M. Kirby and Peter J. Love | Physical Review A</p>\n<p>Noncontextual Pauli Hamiltonians decompose into sets of Pauli terms to which joint values may be assigned without contradiction. We construct a quasi-quantized model for noncontextual Pauli Hamiltonians. Using this model, we give an algorithm to classically simulate noncontextual VQE. We also use the model to show that the noncontextual Hamiltonian problem is NP-complete.</p>\n<p><a href=\"https://arxiv.org/abs/1910.10329\">Is the Trotterized UCCSD Ansatz Chemically Well-Defined?</a></p>\n<p>Harper R. Grimsley et al. | arXiv</p>\n<p>Operator ordering in trotterization of UCCSD has a significant effect (large energy differences between orderings) when there is a significant amount of electron correlation.</p>\n<h2 id=\"section-2\">2019</h2>\n<p><a href=\"https://www.nature.com/articles/s41467-019-10988-2\">An adaptive variational algorithm for exact molecular simulations on a quantum computer</a></p>\n<p>Grimsley H. R. et al. | Nat. Commun.</p>\n<p>The fermion ADAPT-VQE algorithm. The ansatz is constructed by starting from Hartree-Fock state, and adding fermionic operators that produces largest energy gradient.<img src=\"/attach/71ldl.png\" alt=\"adapt-vqe\" /></p>\n<h1 id=\"quantum-chemistry\">Quantum chemistry</h1>\n<h2 id=\"section-3\">2020</h2>\n<p><a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003\">Quantum computational chemistry</a></p>\n<p>Sam McArdle et al. | Rev. Mod. Phys.</p>\n<p>This review provides a comprehensive introduction to both computational chemistry and quantum computing, bridging the current knowledge gap.</p>\n","site":{"data":{}},"excerpt":"<p>Collection of quantum related papers I've read.</p>","more":"<h1 id=\"vqa\">VQA</h1>\n<h2 id=\"section\">2021</h2>\n<p><a href=\"https://arxiv.org/abs/2012.09265\">Variational quantum algorithms</a></p>\n<p>M. Cerezo, et al. | Nature Reviews Physics</p>\n<p>Review on variational quantum algorithms. Very useful.</p>\n<p><a href=\"https://doi.org/10.22331/q-2021-07-28-512\">An efficient quantum algorithm for the time evolution of parameterized circuits</a></p>\n<p>Stefano Barison, et al. | Quantum</p>\n<p>Model VQS gradient update rule as an optimization problem.</p>\n<p><a href=\"https://www.nature.com/articles/s41467-021-21728-w\">Cost Function Dependent Barren Plateaus in Shallow Parametrized Quantum Circuits</a></p>\n<p>M. Cerezo, et al. | Nature Communications</p>\n<p>Cost function based analysis of Barren plateaus.</p>\n<p><a href=\"https://www.nature.com/articles/s42005-021-00730-0\">Qubit-excitation-based adaptive variational quantum eigensolver</a></p>\n<p>Yordan S. Yordanov, et al. | Nature Communication Physics</p>\n<p>Adaptation to Qubit-ADAPT-VQE, QEB-ADAPT-VQE, converge fast comparably with fermion-ADAPT-VQE while maintaining shallow CNOT depth.</p>\n<p><a href=\"https://doi.org/10.1038/s41534-021-00452-9\">Variational quantum algorithm with information sharing</a></p>\n<p>Chris N. Self, et al. | NPJ Quantum Inf.</p>\n<p>Scheme for parallel Bayesian optimzation of varational problem (VQE etc.) with similar parameters. Information sharing between similar problems helps reducing iterations in need (~10-50 its, compared to ~100-1000 for gradient descent methods).</p>\n<p><a href=\"https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.2.020310\">Qubit-ADAPT-VQE: An Adaptive Algorithm for Constructing Hardware-Efficient Ansätze on a Quantum Processor</a></p>\n<p>Tang, H. L. et al. | PRX Quantum</p>\n<p>An improved version of <a href=\"https://www.nature.com/articles/s41467-019-10988-2\">ADAPT-VQE</a>, where operator pool is reduced two <span class=\"math inline\">\\(2n-2\\)</span> Pauli strings (Hamiltonian satisfies time-reversal symmetry). This was proved by showing that the operator sets <span class=\"math inline\">\\(\\{Z_kY_{k+1},Y_k\\}_{1\\leq k&lt;n}\\)</span> is complete (for real Hamiltonian and real states).</p>\n<p><a href=\"https://quantum-journal.org/papers/q-2021-05-14-456/\">Contextual Subspace Variational Quantum Eigensolver</a></p>\n<p>William M. Kirby, Andrew Tranter, and Peter J. Love | Quantum</p>\n<p>Contextual subspace variational quantum eigensolver (CS-VQE), a hybrid quantum-classical algorithm for approximating the ground state energy of a Hamiltonian. The approximation to the ground state energy is obtained as the sum of two contributions.</p>\n<h2 id=\"section-1\">2020</h2>\n<p><a href=\"https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.3.033090\">Entanglement Devised Barren Plateau Mitigation</a></p>\n<p>Taylor L. Patti et al. | Physical Review Research</p>\n<p>It suggests that Barren plateaus may be connected with spread of entanglement (which shall be further checked) and provides several mitigation strategies based on that. Three insights it provides are important: low variance of gradients doesn't equal pool training performance, loss function relating to eigenvector of an observable often trains better (despite low variance), introduction of Langevin noise helps avoid Barren plateaus is both surprising and worth further study.</p>\n<p><a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.123.200501\">Classical Simulation of Noncontextual Pauli Hamiltonians</a></p>\n<p>William M. Kirby and Peter J. Love | PhysRevLett</p>\n<p>Contextuality is an indicator of non-classicality, and a resource for various quantum procedures. In this paper, we present an efficiently computable test to determine whether or not the objective function for a VQE procedure is contextual.</p>\n<p><a href=\"https://doi.org/10.1103/PhysRevA.102.032418\">Classical Simulation of Noncontextual Pauli Hamiltonians</a></p>\n<p>William M. Kirby and Peter J. Love | Physical Review A</p>\n<p>Noncontextual Pauli Hamiltonians decompose into sets of Pauli terms to which joint values may be assigned without contradiction. We construct a quasi-quantized model for noncontextual Pauli Hamiltonians. Using this model, we give an algorithm to classically simulate noncontextual VQE. We also use the model to show that the noncontextual Hamiltonian problem is NP-complete.</p>\n<p><a href=\"https://arxiv.org/abs/1910.10329\">Is the Trotterized UCCSD Ansatz Chemically Well-Defined?</a></p>\n<p>Harper R. Grimsley et al. | arXiv</p>\n<p>Operator ordering in trotterization of UCCSD has a significant effect (large energy differences between orderings) when there is a significant amount of electron correlation.</p>\n<h2 id=\"section-2\">2019</h2>\n<p><a href=\"https://www.nature.com/articles/s41467-019-10988-2\">An adaptive variational algorithm for exact molecular simulations on a quantum computer</a></p>\n<p>Grimsley H. R. et al. | Nat. Commun.</p>\n<p>The fermion ADAPT-VQE algorithm. The ansatz is constructed by starting from Hartree-Fock state, and adding fermionic operators that produces largest energy gradient.<img src=\"/attach/71ldl.png\" alt=\"adapt-vqe\" /></p>\n<h1 id=\"quantum-chemistry\">Quantum chemistry</h1>\n<h2 id=\"section-3\">2020</h2>\n<p><a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003\">Quantum computational chemistry</a></p>\n<p>Sam McArdle et al. | Rev. Mod. Phys.</p>\n<p>This review provides a comprehensive introduction to both computational chemistry and quantum computing, bridging the current knowledge gap.</p>"},{"title":"Quantum simulation","date":"2021-08-07T03:28:00.000Z","updated":"2021-08-30T02:43:00.000Z","_content":"\nSimulating quantum mechanics by quantum computer has gained much attention. This review summarized several digital quantum simulation approaches, including product formula, quantum walk, varational principles and algebraic methods.\n\n<!-- more -->\n\n# Introduction\n\nSimulating quantum mechanics, e.g. solving the Schrödinger equation on time-independent Hamiltonian $H$:\n$$\ni\\hbar \\frac{d}{dt} |\\psi \\rangle =H|\\psi \\rangle \n$$\nis known to be a computationally hard problem due to *exponential explosion* back in 1980s. Approximation methods such as Monte Carlo algorithm ([Suzuki, 1993](https://www.worldscientific.com/worldscibooks/10.1142/2262)) only works on well-behaved problems, which discourages practical usage.\n\nThe notion of simulating qauntum mechanics by *quantum computer* was envisioned by Feynman ([1982](https://link.springer.com/article/10.1007/BF02650179)). In fact, quantum computer was shown to have universal capability ([Lloyd, 1996](https://science.sciencemag.org/content/273/5278/1073)). However, as for simulating a problem-specific machine (e.g., a simple system with partial control that mimics a larger system in an analog way) rather than a universal quantum computer may be sufficient. Therefore practical qauntum simulation may come to reality way before a univeral quantum computer.\n\nRecently quantum simulation has gained more and more attention due to its potential applications in, e.g., condensed-matter physics, high-energy physics, atomic physics, quantum chemistry, and cosmology, as well as due to the advances in the coherent manipulation of quantum systems that promise practical quantum simulation in near future.\n\n# Digital & Analog simulation\n\nOne approach to simulate quantum system is based on the well-known circuit model, which is usually referred to as *digital quantum simulation*. Digital quantum simulation consists of 3 steps:\n1. initial state preperation: encode the wave function using computational basis;\n2. evolution unitary implementation: by application of a sequence of single- or two qubits gates;\n3. final measurement: decode and extract information.\n\nNote that the advantage of quantum simulator over classical can only be exhibited when each of the three steps is realized efficiently, i.e., using polynomial resources. Actually these are not easy tasks.\n\nAnother approach is *analog quantum simulation*, where one quantum system mimics another. This can be done if there exists a mapping $f$ between the system and the simulator:\n\n$$\n\\begin{aligned}\n|\\psi _{sim}( 0) \\rangle  & =f|\\psi _{sys}( 0) \\rangle \\\\\n|\\psi _{sys}( t) \\rangle  & =f^{-1} |\\psi _{sim}( t) \\rangle \\\\\nH_{sim} & =fH_{sys} f^{-1} .\n\\end{aligned}\n$$\n\nSee Georgescu et al. ([2014](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153))'s review for more on this topic.\n\nThe following sections summarize several methods for implementing evoluntion unitary in digital quantum simulation.\n\n\n# Product formula\n\nThe product formula approach is to approximate $e^{-iHt}$ in two steps:\n1. Hamiltonian decompostion: decompose $H = \\sum_{l=1}^{L}H_l$, where each $H_l$ is easy to simulate;\n2. Hamiltonian recombination: combine $e^{-iH_lt}$s to get an approximation of $e^{-iHt}$.\n\nThe algorithm of this type has circuit complexity $ploy(t,1/\\varepsilon)$.\n\nTODO: improvements: https://arxiv.org/abs/1907.11679\n\n## Hamiltonian decomposition\n\n**Local Hamiltonian**. A large class of Hamiltonians (e.g., Hubbard, Ising and Heisenberg model) can be decomposed as a sum of local interactions, as considered by Lloyd ([1996](https://science.sciencemag.org/content/273/5278/1073)). Each local interaction acts non-trivially on a small subsystem and can thus be simulated more easily. For example, in many physical model the Hamiltonian can be written as a sum of Pauli strings, and a $k$-local Pauli string can be simulated using $2k$ $CNOT$s, a $Rz$ that acts on an ancilla qubit, and several other primitive single qubit gates (see, e.g., [Georgescu's review](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153)).\n\n**Sparse Hamiltonian**. Simulating local Hamiltonians was later generalized by  Aharonov et al. ([2003](https://dl.acm.org/doi/10.1145/780542.780546)) into simulating spase Hamiltonians. In this setting, the Hamiltonian $H$ is accessed by an oracle, e.g., an oracle $f$ that on inputing a row index $i$ and an positive interger $j$, outputs the column index and the value of the $j$-th non-zero element in the $i$-th row. In a quantum circuit, this oracle is realized by a unitary $U_f$ such that $U_f|i,j,0\\rangle = |i,j,f(i,j)\\rangle$.\n\nTo decompose sparse Hamiltonians, it is common to consider the *graph of the Hamiltonian*. A Hamiltonian can be thought of as an adjacency matrix of a graph. The undirected graph formed by connecting two vertices if and only if the edge between them has nonzero weight (possibly complex weight) is called the graph of the Hamiltonian. Note that the graph of a $d$-*sparse* Hamiltonian (each row and column has at most $d$ nonzero elements) has maximum degree $d$.\n\nSome graphs are easy to simulate. For example, graphs with maximum degree one such as Pauli strings. Berry et al. ([2006](https://arxiv.org/abs/quant-ph/0508139)) decompose a $d$-sparse Hamiltonian of dimension $N$ into $6d^2$ 1-sparse Hamiltonians, each can be simulated by making $O(\\log^*N)$ queries.\n\nGalaxies (forest of stars) are also easy to simulate. Childs et al. ([2010](http://arxiv.org/abs/1003.3683v2)) decompose the $d$-sparse Hamiltonian into $6d$ galaxies, and each galaxy can be simulated by making $O(d+\\log^*N)$ queries.\n\nHere the function $\\log^*$ is defined by $\\log^*N=0$ if $0<N\\leq 1$ and $\\log^*N=1+\\log^*\\log N$ if $N>1$.\n\n## Hamiltonian recombination\n\nSuppose $H = \\sum_{l=1}^{L}H_l$ and each $e^{-iH_lt}$ can be approximated with high precision. The evolution of $H$ cannot be obtained by multiplying each $e^{-iH_lt}$ unless $\\{H_l\\}$ commutes.\n\nThe *Trotter-Suzuki decompostion* gives an approximation of the evolution unitary by product of evolution of each local interaction. The *Suzuki formula* of the $n$-th order $S_m$ gives the $m$-th order approximation of the exponential:\n$$\n\\begin{aligned}\nS_{1}( \\lambda ) & :=\\prod _{l=1}^{L} e^{i\\lambda H_{l}} =e^{i\\lambda H} +O\\left( \\lambda ^{2}\\right) ,\\\\\nS_{2}( \\lambda ) & :=\\prod _{l=1}^{L} e^{i\\frac{\\lambda }{2} H_{l}}\\prod _{k=L}^{1} e^{i\\frac{\\lambda }{2} H_{k}} =e^{i\\lambda H} +O\\left( \\lambda ^{3}\\right) .\n\\end{aligned}\n$$\n\nThe first order formula $S_1(\\lambda)$ is also known as *Trotter formula* or *Lie product formula*. Suzuki proved in his thesis ([1991](https://aip.scitation.org/doi/10.1063/1.529425)) that the $(2k-1)$-th order formula is equivalent to the $2k$-th formula, i.e.,\n$$\nS_{2k-1}(\\lambda) = S_{2k}(\\lambda) + O(\\lambda ^{2k+1}) .\n$$\n\nSuzuki also gives a recursive method to define higher order formula, i.e., using a composition of low order formulas with controllable coefficients to cancel high order terms, much similar to Runge-Kutta method in numerical analysis. One way (given by Suzuki) to define the $2k$-th formula is\n$$\nS_{2k}( \\lambda ) :=S_{2k-2}( p_{k} \\lambda )^{2} S_{2k-2}((1-4p_k) \\lambda) S_{2k-2} ( p_{k} \\lambda )^{2},\\ \\text{where}\\ p_{k} =\\left( 4-4^{\\frac{1}{2k-1}}\\right)^{-1} .\n$$\n\nFinally, the evolution at time $t$ can thus be approximated by dividing $t$ into $r$ steps:\n$$\ne^{itH} =S_{m}\\left(\\frac{t}{r}\\right)^{r} +O\\left(\\frac{t^{m+1}}{r^{m}}\\right) .\n$$\n\nThe number of exponentials in a $2k$-th order Trotter-Suzuki decompositon is $O(L5^kt(t/\\varepsilon)^{1/2k})$. This bound is made precise by Berry et al. ([2006](https://arxiv.org/abs/quant-ph/0508139)) to be\n$$\nN_{exp} \\leqslant 5^{2k} L^{2} \\| H\\| t\\left(\\frac{L\\| H\\| t}{\\varepsilon }\\right)^{1/2k}\n$$\nwhere $\\Vert H\\Vert$ is the spectral norm of $H$.\n\nSeveral attempts on improving Trotter-Suzuki decomposition have been made.\n\nZhang et al. ([2020](https://arxiv.org/abs/2011.05283)) proposed an adaptive version of product formula, where each evolution term in\n$$\n\\prod _{l=1}^{L} e^{i\\lambda H_{l}}\n$$\nis selected in a heuristic way, thus reducing circuit depth. Suppose the current selected terms are $\\{O_1,\\cdots,O_n\\}\\subseteq \\{H_l\\}$, then the approximation error\n$$\n\\begin{aligned}\n\\varepsilon  & =\\| e^{-iH\\delta t} |\\psi ( t) \\rangle -\\prod _{j=1}^{n} e^{-iO_{j} \\lambda _{j} \\delta t} |\\psi ( t) \\rangle \\| \\\\\n & =\\delta t\\left( \\langle H^{2} \\rangle +\\sum _{jj'} A_{jj'} \\lambda _{j} \\lambda _{j'} -2\\sum _{j} C_{j} \\lambda _{j}\\right) +O\\left( \\delta t^{2}\\right)\n\\end{aligned}\n$$\nwhere $A_{jj'} =Re( \\langle O_{j} O_{j'} \\rangle ), C_{j} =Re( \\langle HO_{j} \\rangle )$ can be efficiently evaluated.\n\nIn the thesis of Jones et al. ([2019](https://arxiv.org/pdf/1904.01336.pdf)), the coefficients in Suzuki formula is optimised using evolutionary strategies.\n\n# Quantum walk\n\nThe best known algorithm for simulating sparse Hamiltonian is based on *Childs quantum walk* ([2009](https://link.springer.com/article/10.1007/s00220-009-0930-1), [2012](https://dl.acm.org/doi/10.5555/2231036.2231040)), which extends the *Szegedy walk* ([2004](http://arxiv.org/abs/quant-ph/0401053)). Compared to product formula based algorithms whose query complexity is nearly linear with regard to $t$ and $poly(1/\\varepsilon)$ in terms of $\\varepsilon$, the best algorithm based on quantum walk achieves query complexity $O(\\tau + \\log(1/\\varepsilon)/\\log\\log(\\varepsilon))$, where $\\tau:=d\\| H\\| _{\\max} t$ depends on sparsity $d$, the largest element of $H$ and time $t$.\n\n## Query lower bound\n\nBerry et al. ([2014](https://dl.acm.org/doi/abs/10.1145/3313276.3316386)) proved a query lower bound scaling in error as $\\varepsilon$ of $\\Omega(\\log\\varepsilon/\\log\\log\\varepsilon)$. In another [thesis](ttps://arxiv.org/abs/1501.01715) a year later, they proved an extension of the *no fast foward theorem* ([2007](http://dx.doi.org/10.1007/s00220-006-0150-x)) that gives a query complexity scaling in $\\tau$ (instead of $t$ in the no fast forward theorem) as $\\Omega (\\tau)$.\n\nThe optimal additive lower bound $\\Omega(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)$ was finally achieved by Low et al. ([2017](https://arxiv.org/abs/1606.02685)).\n\n## Childs quantum walk\n\nQuantum walk is defined analogous to classical random walk, or Markov chains. A quantum walk with $N$ states is specified by a $N\\times N$ Hermitian $H$. The *continious quantum walk* is obtained by the schrödinger equation. The *discrete quantum walk*, however, can only be defined on an enlarged state space. Specificly, the Hilbert space $\\mathbb{C}^N$ is extended to $\\mathbb{C}^{2N\\times 2N}$.\n\nThe Hamiltonian $H$ of sparsity $d$ is accessed by two oracle $O_{H} ,O_{F}$, where $O_{H}$ accepts $( j,k) \\in [ N] \\times [ N]$ and outputs $H_{jk}$, and $O_{F}$ accepts $( j,l) \\in [ N] \\times [ d]$ and output the $l$th nonzero element in the $j$th row of $H$. With $O( 1)$ query to $O_{H} ,O_{F}$, one can implement an isometry $T$ such that\n$$\nT|j\\rangle = |j\\rangle \\otimes \\left(\\sqrt{\\frac{\\varepsilon }{\\| H\\| _{1}}}\\sum _{k=1}^{N}\\sqrt{H_{jk}^{*}} |k\\rangle |0\\rangle +\\sqrt{1-\\frac{\\varepsilon \\sigma _{j}}{\\| H\\| _{1}}} |\\zeta _{j} \\rangle |1\\rangle \\right) ,\n$$\nwhere $\\varepsilon \\in ( 0,1]$ is a parameter that can be made small to obtain a *lazy quantum walk*, $\\sqrt{H_{jk}^{*}}$ is chosen such that $\\sqrt{H_{kj}^{*}}\\left(\\sqrt{H_{jk}^{*}}\\right)^{*} =H_{jk}$, $|\\zeta _{j} \\rangle$ is some superposition of $|k\\rangle$, $\\sigma _{j} :=\\sum _{k=1}^{M} |H_{jk} |$, $\\| H\\| _{1} :=\\max_{j} \\sigma _{j}$.\n\nA swap $S$ such that $S|j\\rangle |k\\rangle =|k\\rangle |j\\rangle$ can be implemented easily. Note that $T|j\\rangle$ is choosen such that\n$$\n\\langle j|T^{\\dagger } ST|k\\rangle =\\frac{\\varepsilon }{\\| H\\| _{1}} H_{jk}\n$$\n\nThe quantum walk operator is defined to be\n$$\nW:=iS\\left( 2TT^{\\dagger } -I\\right).\n$$\n\n## Quantum simulation by quantum walk\n\nLet $\\lambda$ be an eigenvalue of $H$, and $|\\lambda \\rangle$ the corresponding eigenvector. $T$ maps $|\\lambda \\rangle$ into the combination of two eigenvectors of $W$:\n$$\nT|\\lambda \\rangle =\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}} ,\n$$\nand $W|\\lambda _{\\pm } \\rangle =e^{i\\theta _{\\pm }} |\\lambda _{\\pm } \\rangle$,\n$$\n\\theta _{\\pm } =\\pm \\arcsin\\left(\\frac{\\lambda }{d\\| H\\| _{\\max}}\\right) +( 1\\mp 1)\\frac{\\pi }{2} .\n$$\n\nQuantum simulation by quantum walk can be summarized as the process below:\n$$\n|\\lambda \\rangle \\xrightarrow{T}\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}}\\xrightarrow{U_h} \\frac{e^{ih( \\theta _{+})} |\\lambda _{+} \\rangle +e^{ih( \\theta _{-})} |\\lambda _{-} \\rangle }{\\sqrt{2}}\\rightarrow e^{-i\\lambda t} |\\lambda \\rangle\n$$\nwith function $h(\\theta)=-\\tau\\sin\\theta=-d\\| H\\| _{\\max} t\\sin \\theta$.\n\n## Implementing function $h$\n\nBerry et al. ([2015](https://arxiv.org/abs/1501.01715)) used *Linear Combination of Unitaries (LCU)* algorithm to obtain a linear combination of $W^1,W^2,\\cdots,W^N$, which approximates $h$. This method has a major drawback: success probability decays with $N$. Moreover, the query complexity is $O(\\tau \\log\\varepsilon/\\log\\log\\varepsilon)$ which is not optimal.\n\nLow et al. ([2017](https://arxiv.org/abs/1606.02685)) proposed *Quantum Signal Processing* algorithm and achieved query lower bound $O(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)$ without success probabilty decay. In general, given a odd periodic function $h: (\\pi,\\pi]\\rightarrow(\\pi,\\pi]$, the quantum signal processing algorithms transform an unitary\n$$\nW=\\sum_\\lambda e^{i\\theta_\\lambda}|\\lambda\\rangle\\langle\\lambda|\\rightarrow V=\\sum_\\lambda e^{ih(\\theta_\\lambda)}|\\lambda\\rangle\\langle\\lambda|.\n$$\nwith precision $\\varepsilon$ and success probability $1-O(\\varepsilon)$. The query complexity of the signal processing algorithm depends on the Fourier decomposition of $h$.\n\n# Variational methods\n\n*Varational Quantum Algorithm (VQA)* use low depth quantum circuits as a subroutine in a larger classical optimisation and have been applied broadly, including to binary optimisation problems, training machine learning models, and obtaining energy spectra. VQA is a quantum analog of classical machine learning methods, as it employs parametrized quantum circuits on quantum computers and leverages classical optimization toolbox for parameter optimizations. Cerezo et al. ([2020](https://arxiv.org/abs/2012.09265)) reviewed VQA and its various applications.\n\nhttps://doi.org/10.1038/s41534-021-00452-9 intro-p2\n\n*Varational Quantum Simulation (VQS)* essentially approximates evolution unitary $e^{-iHt}$ by a parametrized quantum circuit (or an *ansatz*) where the evolution of parameters in time $t$ is determined by classical varational principles. Concretely, a first-order ode of parameters, whose coefficients can be efficiently determined by Hadamard test, is induced by varational principles. Yuan et al. ([2018](https://arxiv.org/abs/1812.08767)) studied the performance of different varational principles on different system (pure or mixed) and different evolution (real time and imaginary time).\n\nOne obstacle is the lack of knowledge on contructing ansatz, which drastically affects the performance of simulation. In the inital work of Li et al. ([2017](https://journals.aps.org/prx/abstract/10.1103/PhysRevX.7.021050)), the algorithm error is evaluated to be\n$$\nO\\left(\\left(\\sqrt{\\Delta_{\\max}^{(2)}} + \\sqrt{\\delta t\\Delta_{\\max}^{(3)}}\\right)T\\right)\n$$\nwhere $\\Delta^{(2)}$ and $\\Delta^{(3)}$ depend on the ansatz and $H$, thus a poorly designed ansatz leads to an linear error scaling in time $T$ with large coefficient. \n\nBeside being sufficiently expressive, an ansatz must meet other practical concerns including hardware limitations (restricted qubit connectivity and practical limits on circuit depth due to experimental noise) as well as optimisation considerations (the number of optimisation parameters must not be too large)\n\n# Algebra methods\n\n## Fixed depth simulation by Cartan decomposition\n\nTODO.","source":"_posts/quant-sim.md","raw":"---\ntitle: Quantum simulation\ndate: 2021-08-07 11:28:00\nupdated: 2021-08-30 10:43:00\ncategories:\n- Science\ntags:\n- Quantum\n- Note\n- Paper\n---\n\nSimulating quantum mechanics by quantum computer has gained much attention. This review summarized several digital quantum simulation approaches, including product formula, quantum walk, varational principles and algebraic methods.\n\n<!-- more -->\n\n# Introduction\n\nSimulating quantum mechanics, e.g. solving the Schrödinger equation on time-independent Hamiltonian $H$:\n$$\ni\\hbar \\frac{d}{dt} |\\psi \\rangle =H|\\psi \\rangle \n$$\nis known to be a computationally hard problem due to *exponential explosion* back in 1980s. Approximation methods such as Monte Carlo algorithm ([Suzuki, 1993](https://www.worldscientific.com/worldscibooks/10.1142/2262)) only works on well-behaved problems, which discourages practical usage.\n\nThe notion of simulating qauntum mechanics by *quantum computer* was envisioned by Feynman ([1982](https://link.springer.com/article/10.1007/BF02650179)). In fact, quantum computer was shown to have universal capability ([Lloyd, 1996](https://science.sciencemag.org/content/273/5278/1073)). However, as for simulating a problem-specific machine (e.g., a simple system with partial control that mimics a larger system in an analog way) rather than a universal quantum computer may be sufficient. Therefore practical qauntum simulation may come to reality way before a univeral quantum computer.\n\nRecently quantum simulation has gained more and more attention due to its potential applications in, e.g., condensed-matter physics, high-energy physics, atomic physics, quantum chemistry, and cosmology, as well as due to the advances in the coherent manipulation of quantum systems that promise practical quantum simulation in near future.\n\n# Digital & Analog simulation\n\nOne approach to simulate quantum system is based on the well-known circuit model, which is usually referred to as *digital quantum simulation*. Digital quantum simulation consists of 3 steps:\n1. initial state preperation: encode the wave function using computational basis;\n2. evolution unitary implementation: by application of a sequence of single- or two qubits gates;\n3. final measurement: decode and extract information.\n\nNote that the advantage of quantum simulator over classical can only be exhibited when each of the three steps is realized efficiently, i.e., using polynomial resources. Actually these are not easy tasks.\n\nAnother approach is *analog quantum simulation*, where one quantum system mimics another. This can be done if there exists a mapping $f$ between the system and the simulator:\n\n$$\n\\begin{aligned}\n|\\psi _{sim}( 0) \\rangle  & =f|\\psi _{sys}( 0) \\rangle \\\\\n|\\psi _{sys}( t) \\rangle  & =f^{-1} |\\psi _{sim}( t) \\rangle \\\\\nH_{sim} & =fH_{sys} f^{-1} .\n\\end{aligned}\n$$\n\nSee Georgescu et al. ([2014](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153))'s review for more on this topic.\n\nThe following sections summarize several methods for implementing evoluntion unitary in digital quantum simulation.\n\n\n# Product formula\n\nThe product formula approach is to approximate $e^{-iHt}$ in two steps:\n1. Hamiltonian decompostion: decompose $H = \\sum_{l=1}^{L}H_l$, where each $H_l$ is easy to simulate;\n2. Hamiltonian recombination: combine $e^{-iH_lt}$s to get an approximation of $e^{-iHt}$.\n\nThe algorithm of this type has circuit complexity $ploy(t,1/\\varepsilon)$.\n\nTODO: improvements: https://arxiv.org/abs/1907.11679\n\n## Hamiltonian decomposition\n\n**Local Hamiltonian**. A large class of Hamiltonians (e.g., Hubbard, Ising and Heisenberg model) can be decomposed as a sum of local interactions, as considered by Lloyd ([1996](https://science.sciencemag.org/content/273/5278/1073)). Each local interaction acts non-trivially on a small subsystem and can thus be simulated more easily. For example, in many physical model the Hamiltonian can be written as a sum of Pauli strings, and a $k$-local Pauli string can be simulated using $2k$ $CNOT$s, a $Rz$ that acts on an ancilla qubit, and several other primitive single qubit gates (see, e.g., [Georgescu's review](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153)).\n\n**Sparse Hamiltonian**. Simulating local Hamiltonians was later generalized by  Aharonov et al. ([2003](https://dl.acm.org/doi/10.1145/780542.780546)) into simulating spase Hamiltonians. In this setting, the Hamiltonian $H$ is accessed by an oracle, e.g., an oracle $f$ that on inputing a row index $i$ and an positive interger $j$, outputs the column index and the value of the $j$-th non-zero element in the $i$-th row. In a quantum circuit, this oracle is realized by a unitary $U_f$ such that $U_f|i,j,0\\rangle = |i,j,f(i,j)\\rangle$.\n\nTo decompose sparse Hamiltonians, it is common to consider the *graph of the Hamiltonian*. A Hamiltonian can be thought of as an adjacency matrix of a graph. The undirected graph formed by connecting two vertices if and only if the edge between them has nonzero weight (possibly complex weight) is called the graph of the Hamiltonian. Note that the graph of a $d$-*sparse* Hamiltonian (each row and column has at most $d$ nonzero elements) has maximum degree $d$.\n\nSome graphs are easy to simulate. For example, graphs with maximum degree one such as Pauli strings. Berry et al. ([2006](https://arxiv.org/abs/quant-ph/0508139)) decompose a $d$-sparse Hamiltonian of dimension $N$ into $6d^2$ 1-sparse Hamiltonians, each can be simulated by making $O(\\log^*N)$ queries.\n\nGalaxies (forest of stars) are also easy to simulate. Childs et al. ([2010](http://arxiv.org/abs/1003.3683v2)) decompose the $d$-sparse Hamiltonian into $6d$ galaxies, and each galaxy can be simulated by making $O(d+\\log^*N)$ queries.\n\nHere the function $\\log^*$ is defined by $\\log^*N=0$ if $0<N\\leq 1$ and $\\log^*N=1+\\log^*\\log N$ if $N>1$.\n\n## Hamiltonian recombination\n\nSuppose $H = \\sum_{l=1}^{L}H_l$ and each $e^{-iH_lt}$ can be approximated with high precision. The evolution of $H$ cannot be obtained by multiplying each $e^{-iH_lt}$ unless $\\{H_l\\}$ commutes.\n\nThe *Trotter-Suzuki decompostion* gives an approximation of the evolution unitary by product of evolution of each local interaction. The *Suzuki formula* of the $n$-th order $S_m$ gives the $m$-th order approximation of the exponential:\n$$\n\\begin{aligned}\nS_{1}( \\lambda ) & :=\\prod _{l=1}^{L} e^{i\\lambda H_{l}} =e^{i\\lambda H} +O\\left( \\lambda ^{2}\\right) ,\\\\\nS_{2}( \\lambda ) & :=\\prod _{l=1}^{L} e^{i\\frac{\\lambda }{2} H_{l}}\\prod _{k=L}^{1} e^{i\\frac{\\lambda }{2} H_{k}} =e^{i\\lambda H} +O\\left( \\lambda ^{3}\\right) .\n\\end{aligned}\n$$\n\nThe first order formula $S_1(\\lambda)$ is also known as *Trotter formula* or *Lie product formula*. Suzuki proved in his thesis ([1991](https://aip.scitation.org/doi/10.1063/1.529425)) that the $(2k-1)$-th order formula is equivalent to the $2k$-th formula, i.e.,\n$$\nS_{2k-1}(\\lambda) = S_{2k}(\\lambda) + O(\\lambda ^{2k+1}) .\n$$\n\nSuzuki also gives a recursive method to define higher order formula, i.e., using a composition of low order formulas with controllable coefficients to cancel high order terms, much similar to Runge-Kutta method in numerical analysis. One way (given by Suzuki) to define the $2k$-th formula is\n$$\nS_{2k}( \\lambda ) :=S_{2k-2}( p_{k} \\lambda )^{2} S_{2k-2}((1-4p_k) \\lambda) S_{2k-2} ( p_{k} \\lambda )^{2},\\ \\text{where}\\ p_{k} =\\left( 4-4^{\\frac{1}{2k-1}}\\right)^{-1} .\n$$\n\nFinally, the evolution at time $t$ can thus be approximated by dividing $t$ into $r$ steps:\n$$\ne^{itH} =S_{m}\\left(\\frac{t}{r}\\right)^{r} +O\\left(\\frac{t^{m+1}}{r^{m}}\\right) .\n$$\n\nThe number of exponentials in a $2k$-th order Trotter-Suzuki decompositon is $O(L5^kt(t/\\varepsilon)^{1/2k})$. This bound is made precise by Berry et al. ([2006](https://arxiv.org/abs/quant-ph/0508139)) to be\n$$\nN_{exp} \\leqslant 5^{2k} L^{2} \\| H\\| t\\left(\\frac{L\\| H\\| t}{\\varepsilon }\\right)^{1/2k}\n$$\nwhere $\\Vert H\\Vert$ is the spectral norm of $H$.\n\nSeveral attempts on improving Trotter-Suzuki decomposition have been made.\n\nZhang et al. ([2020](https://arxiv.org/abs/2011.05283)) proposed an adaptive version of product formula, where each evolution term in\n$$\n\\prod _{l=1}^{L} e^{i\\lambda H_{l}}\n$$\nis selected in a heuristic way, thus reducing circuit depth. Suppose the current selected terms are $\\{O_1,\\cdots,O_n\\}\\subseteq \\{H_l\\}$, then the approximation error\n$$\n\\begin{aligned}\n\\varepsilon  & =\\| e^{-iH\\delta t} |\\psi ( t) \\rangle -\\prod _{j=1}^{n} e^{-iO_{j} \\lambda _{j} \\delta t} |\\psi ( t) \\rangle \\| \\\\\n & =\\delta t\\left( \\langle H^{2} \\rangle +\\sum _{jj'} A_{jj'} \\lambda _{j} \\lambda _{j'} -2\\sum _{j} C_{j} \\lambda _{j}\\right) +O\\left( \\delta t^{2}\\right)\n\\end{aligned}\n$$\nwhere $A_{jj'} =Re( \\langle O_{j} O_{j'} \\rangle ), C_{j} =Re( \\langle HO_{j} \\rangle )$ can be efficiently evaluated.\n\nIn the thesis of Jones et al. ([2019](https://arxiv.org/pdf/1904.01336.pdf)), the coefficients in Suzuki formula is optimised using evolutionary strategies.\n\n# Quantum walk\n\nThe best known algorithm for simulating sparse Hamiltonian is based on *Childs quantum walk* ([2009](https://link.springer.com/article/10.1007/s00220-009-0930-1), [2012](https://dl.acm.org/doi/10.5555/2231036.2231040)), which extends the *Szegedy walk* ([2004](http://arxiv.org/abs/quant-ph/0401053)). Compared to product formula based algorithms whose query complexity is nearly linear with regard to $t$ and $poly(1/\\varepsilon)$ in terms of $\\varepsilon$, the best algorithm based on quantum walk achieves query complexity $O(\\tau + \\log(1/\\varepsilon)/\\log\\log(\\varepsilon))$, where $\\tau:=d\\| H\\| _{\\max} t$ depends on sparsity $d$, the largest element of $H$ and time $t$.\n\n## Query lower bound\n\nBerry et al. ([2014](https://dl.acm.org/doi/abs/10.1145/3313276.3316386)) proved a query lower bound scaling in error as $\\varepsilon$ of $\\Omega(\\log\\varepsilon/\\log\\log\\varepsilon)$. In another [thesis](ttps://arxiv.org/abs/1501.01715) a year later, they proved an extension of the *no fast foward theorem* ([2007](http://dx.doi.org/10.1007/s00220-006-0150-x)) that gives a query complexity scaling in $\\tau$ (instead of $t$ in the no fast forward theorem) as $\\Omega (\\tau)$.\n\nThe optimal additive lower bound $\\Omega(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)$ was finally achieved by Low et al. ([2017](https://arxiv.org/abs/1606.02685)).\n\n## Childs quantum walk\n\nQuantum walk is defined analogous to classical random walk, or Markov chains. A quantum walk with $N$ states is specified by a $N\\times N$ Hermitian $H$. The *continious quantum walk* is obtained by the schrödinger equation. The *discrete quantum walk*, however, can only be defined on an enlarged state space. Specificly, the Hilbert space $\\mathbb{C}^N$ is extended to $\\mathbb{C}^{2N\\times 2N}$.\n\nThe Hamiltonian $H$ of sparsity $d$ is accessed by two oracle $O_{H} ,O_{F}$, where $O_{H}$ accepts $( j,k) \\in [ N] \\times [ N]$ and outputs $H_{jk}$, and $O_{F}$ accepts $( j,l) \\in [ N] \\times [ d]$ and output the $l$th nonzero element in the $j$th row of $H$. With $O( 1)$ query to $O_{H} ,O_{F}$, one can implement an isometry $T$ such that\n$$\nT|j\\rangle = |j\\rangle \\otimes \\left(\\sqrt{\\frac{\\varepsilon }{\\| H\\| _{1}}}\\sum _{k=1}^{N}\\sqrt{H_{jk}^{*}} |k\\rangle |0\\rangle +\\sqrt{1-\\frac{\\varepsilon \\sigma _{j}}{\\| H\\| _{1}}} |\\zeta _{j} \\rangle |1\\rangle \\right) ,\n$$\nwhere $\\varepsilon \\in ( 0,1]$ is a parameter that can be made small to obtain a *lazy quantum walk*, $\\sqrt{H_{jk}^{*}}$ is chosen such that $\\sqrt{H_{kj}^{*}}\\left(\\sqrt{H_{jk}^{*}}\\right)^{*} =H_{jk}$, $|\\zeta _{j} \\rangle$ is some superposition of $|k\\rangle$, $\\sigma _{j} :=\\sum _{k=1}^{M} |H_{jk} |$, $\\| H\\| _{1} :=\\max_{j} \\sigma _{j}$.\n\nA swap $S$ such that $S|j\\rangle |k\\rangle =|k\\rangle |j\\rangle$ can be implemented easily. Note that $T|j\\rangle$ is choosen such that\n$$\n\\langle j|T^{\\dagger } ST|k\\rangle =\\frac{\\varepsilon }{\\| H\\| _{1}} H_{jk}\n$$\n\nThe quantum walk operator is defined to be\n$$\nW:=iS\\left( 2TT^{\\dagger } -I\\right).\n$$\n\n## Quantum simulation by quantum walk\n\nLet $\\lambda$ be an eigenvalue of $H$, and $|\\lambda \\rangle$ the corresponding eigenvector. $T$ maps $|\\lambda \\rangle$ into the combination of two eigenvectors of $W$:\n$$\nT|\\lambda \\rangle =\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}} ,\n$$\nand $W|\\lambda _{\\pm } \\rangle =e^{i\\theta _{\\pm }} |\\lambda _{\\pm } \\rangle$,\n$$\n\\theta _{\\pm } =\\pm \\arcsin\\left(\\frac{\\lambda }{d\\| H\\| _{\\max}}\\right) +( 1\\mp 1)\\frac{\\pi }{2} .\n$$\n\nQuantum simulation by quantum walk can be summarized as the process below:\n$$\n|\\lambda \\rangle \\xrightarrow{T}\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}}\\xrightarrow{U_h} \\frac{e^{ih( \\theta _{+})} |\\lambda _{+} \\rangle +e^{ih( \\theta _{-})} |\\lambda _{-} \\rangle }{\\sqrt{2}}\\rightarrow e^{-i\\lambda t} |\\lambda \\rangle\n$$\nwith function $h(\\theta)=-\\tau\\sin\\theta=-d\\| H\\| _{\\max} t\\sin \\theta$.\n\n## Implementing function $h$\n\nBerry et al. ([2015](https://arxiv.org/abs/1501.01715)) used *Linear Combination of Unitaries (LCU)* algorithm to obtain a linear combination of $W^1,W^2,\\cdots,W^N$, which approximates $h$. This method has a major drawback: success probability decays with $N$. Moreover, the query complexity is $O(\\tau \\log\\varepsilon/\\log\\log\\varepsilon)$ which is not optimal.\n\nLow et al. ([2017](https://arxiv.org/abs/1606.02685)) proposed *Quantum Signal Processing* algorithm and achieved query lower bound $O(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)$ without success probabilty decay. In general, given a odd periodic function $h: (\\pi,\\pi]\\rightarrow(\\pi,\\pi]$, the quantum signal processing algorithms transform an unitary\n$$\nW=\\sum_\\lambda e^{i\\theta_\\lambda}|\\lambda\\rangle\\langle\\lambda|\\rightarrow V=\\sum_\\lambda e^{ih(\\theta_\\lambda)}|\\lambda\\rangle\\langle\\lambda|.\n$$\nwith precision $\\varepsilon$ and success probability $1-O(\\varepsilon)$. The query complexity of the signal processing algorithm depends on the Fourier decomposition of $h$.\n\n# Variational methods\n\n*Varational Quantum Algorithm (VQA)* use low depth quantum circuits as a subroutine in a larger classical optimisation and have been applied broadly, including to binary optimisation problems, training machine learning models, and obtaining energy spectra. VQA is a quantum analog of classical machine learning methods, as it employs parametrized quantum circuits on quantum computers and leverages classical optimization toolbox for parameter optimizations. Cerezo et al. ([2020](https://arxiv.org/abs/2012.09265)) reviewed VQA and its various applications.\n\nhttps://doi.org/10.1038/s41534-021-00452-9 intro-p2\n\n*Varational Quantum Simulation (VQS)* essentially approximates evolution unitary $e^{-iHt}$ by a parametrized quantum circuit (or an *ansatz*) where the evolution of parameters in time $t$ is determined by classical varational principles. Concretely, a first-order ode of parameters, whose coefficients can be efficiently determined by Hadamard test, is induced by varational principles. Yuan et al. ([2018](https://arxiv.org/abs/1812.08767)) studied the performance of different varational principles on different system (pure or mixed) and different evolution (real time and imaginary time).\n\nOne obstacle is the lack of knowledge on contructing ansatz, which drastically affects the performance of simulation. In the inital work of Li et al. ([2017](https://journals.aps.org/prx/abstract/10.1103/PhysRevX.7.021050)), the algorithm error is evaluated to be\n$$\nO\\left(\\left(\\sqrt{\\Delta_{\\max}^{(2)}} + \\sqrt{\\delta t\\Delta_{\\max}^{(3)}}\\right)T\\right)\n$$\nwhere $\\Delta^{(2)}$ and $\\Delta^{(3)}$ depend on the ansatz and $H$, thus a poorly designed ansatz leads to an linear error scaling in time $T$ with large coefficient. \n\nBeside being sufficiently expressive, an ansatz must meet other practical concerns including hardware limitations (restricted qubit connectivity and practical limits on circuit depth due to experimental noise) as well as optimisation considerations (the number of optimisation parameters must not be too large)\n\n# Algebra methods\n\n## Fixed depth simulation by Cartan decomposition\n\nTODO.","slug":"quant-sim","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqic000e2sff7qozgog4","content":"<p>Simulating quantum mechanics by quantum computer has gained much attention. This review summarized several digital quantum simulation approaches, including product formula, quantum walk, varational principles and algebraic methods.</p>\n<span id=\"more\"></span>\n<h1 id=\"introduction\">Introduction</h1>\n<p>Simulating quantum mechanics, e.g. solving the Schrödinger equation on time-independent Hamiltonian <span class=\"math inline\">\\(H\\)</span>: <span class=\"math display\">\\[\ni\\hbar \\frac{d}{dt} |\\psi \\rangle =H|\\psi \\rangle \n\\]</span> is known to be a computationally hard problem due to <em>exponential explosion</em> back in 1980s. Approximation methods such as Monte Carlo algorithm (<a href=\"https://www.worldscientific.com/worldscibooks/10.1142/2262\">Suzuki, 1993</a>) only works on well-behaved problems, which discourages practical usage.</p>\n<p>The notion of simulating qauntum mechanics by <em>quantum computer</em> was envisioned by Feynman (<a href=\"https://link.springer.com/article/10.1007/BF02650179\">1982</a>). In fact, quantum computer was shown to have universal capability (<a href=\"https://science.sciencemag.org/content/273/5278/1073\">Lloyd, 1996</a>). However, as for simulating a problem-specific machine (e.g., a simple system with partial control that mimics a larger system in an analog way) rather than a universal quantum computer may be sufficient. Therefore practical qauntum simulation may come to reality way before a univeral quantum computer.</p>\n<p>Recently quantum simulation has gained more and more attention due to its potential applications in, e.g., condensed-matter physics, high-energy physics, atomic physics, quantum chemistry, and cosmology, as well as due to the advances in the coherent manipulation of quantum systems that promise practical quantum simulation in near future.</p>\n<h1 id=\"digital-analog-simulation\">Digital &amp; Analog simulation</h1>\n<p>One approach to simulate quantum system is based on the well-known circuit model, which is usually referred to as <em>digital quantum simulation</em>. Digital quantum simulation consists of 3 steps: 1. initial state preperation: encode the wave function using computational basis; 2. evolution unitary implementation: by application of a sequence of single- or two qubits gates; 3. final measurement: decode and extract information.</p>\n<p>Note that the advantage of quantum simulator over classical can only be exhibited when each of the three steps is realized efficiently, i.e., using polynomial resources. Actually these are not easy tasks.</p>\n<p>Another approach is <em>analog quantum simulation</em>, where one quantum system mimics another. This can be done if there exists a mapping <span class=\"math inline\">\\(f\\)</span> between the system and the simulator:</p>\n<p><span class=\"math display\">\\[\n\\begin{aligned}\n|\\psi _{sim}( 0) \\rangle  &amp; =f|\\psi _{sys}( 0) \\rangle \\\\\n|\\psi _{sys}( t) \\rangle  &amp; =f^{-1} |\\psi _{sim}( t) \\rangle \\\\\nH_{sim} &amp; =fH_{sys} f^{-1} .\n\\end{aligned}\n\\]</span></p>\n<p>See Georgescu et al. (<a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153\">2014</a>)'s review for more on this topic.</p>\n<p>The following sections summarize several methods for implementing evoluntion unitary in digital quantum simulation.</p>\n<h1 id=\"product-formula\">Product formula</h1>\n<p>The product formula approach is to approximate <span class=\"math inline\">\\(e^{-iHt}\\)</span> in two steps: 1. Hamiltonian decompostion: decompose <span class=\"math inline\">\\(H = \\sum_{l=1}^{L}H_l\\)</span>, where each <span class=\"math inline\">\\(H_l\\)</span> is easy to simulate; 2. Hamiltonian recombination: combine <span class=\"math inline\">\\(e^{-iH_lt}\\)</span>s to get an approximation of <span class=\"math inline\">\\(e^{-iHt}\\)</span>.</p>\n<p>The algorithm of this type has circuit complexity <span class=\"math inline\">\\(ploy(t,1/\\varepsilon)\\)</span>.</p>\n<p>TODO: improvements: https://arxiv.org/abs/1907.11679</p>\n<h2 id=\"hamiltonian-decomposition\">Hamiltonian decomposition</h2>\n<p><strong>Local Hamiltonian</strong>. A large class of Hamiltonians (e.g., Hubbard, Ising and Heisenberg model) can be decomposed as a sum of local interactions, as considered by Lloyd (<a href=\"https://science.sciencemag.org/content/273/5278/1073\">1996</a>). Each local interaction acts non-trivially on a small subsystem and can thus be simulated more easily. For example, in many physical model the Hamiltonian can be written as a sum of Pauli strings, and a <span class=\"math inline\">\\(k\\)</span>-local Pauli string can be simulated using <span class=\"math inline\">\\(2k\\)</span> <span class=\"math inline\">\\(CNOT\\)</span>s, a <span class=\"math inline\">\\(Rz\\)</span> that acts on an ancilla qubit, and several other primitive single qubit gates (see, e.g., <a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153\">Georgescu's review</a>).</p>\n<p><strong>Sparse Hamiltonian</strong>. Simulating local Hamiltonians was later generalized by Aharonov et al. (<a href=\"https://dl.acm.org/doi/10.1145/780542.780546\">2003</a>) into simulating spase Hamiltonians. In this setting, the Hamiltonian <span class=\"math inline\">\\(H\\)</span> is accessed by an oracle, e.g., an oracle <span class=\"math inline\">\\(f\\)</span> that on inputing a row index <span class=\"math inline\">\\(i\\)</span> and an positive interger <span class=\"math inline\">\\(j\\)</span>, outputs the column index and the value of the <span class=\"math inline\">\\(j\\)</span>-th non-zero element in the <span class=\"math inline\">\\(i\\)</span>-th row. In a quantum circuit, this oracle is realized by a unitary <span class=\"math inline\">\\(U_f\\)</span> such that <span class=\"math inline\">\\(U_f|i,j,0\\rangle = |i,j,f(i,j)\\rangle\\)</span>.</p>\n<p>To decompose sparse Hamiltonians, it is common to consider the <em>graph of the Hamiltonian</em>. A Hamiltonian can be thought of as an adjacency matrix of a graph. The undirected graph formed by connecting two vertices if and only if the edge between them has nonzero weight (possibly complex weight) is called the graph of the Hamiltonian. Note that the graph of a <span class=\"math inline\">\\(d\\)</span>-<em>sparse</em> Hamiltonian (each row and column has at most <span class=\"math inline\">\\(d\\)</span> nonzero elements) has maximum degree <span class=\"math inline\">\\(d\\)</span>.</p>\n<p>Some graphs are easy to simulate. For example, graphs with maximum degree one such as Pauli strings. Berry et al. (<a href=\"https://arxiv.org/abs/quant-ph/0508139\">2006</a>) decompose a <span class=\"math inline\">\\(d\\)</span>-sparse Hamiltonian of dimension <span class=\"math inline\">\\(N\\)</span> into <span class=\"math inline\">\\(6d^2\\)</span> 1-sparse Hamiltonians, each can be simulated by making <span class=\"math inline\">\\(O(\\log^*N)\\)</span> queries.</p>\n<p>Galaxies (forest of stars) are also easy to simulate. Childs et al. (<a href=\"http://arxiv.org/abs/1003.3683v2\">2010</a>) decompose the <span class=\"math inline\">\\(d\\)</span>-sparse Hamiltonian into <span class=\"math inline\">\\(6d\\)</span> galaxies, and each galaxy can be simulated by making <span class=\"math inline\">\\(O(d+\\log^*N)\\)</span> queries.</p>\n<p>Here the function <span class=\"math inline\">\\(\\log^*\\)</span> is defined by <span class=\"math inline\">\\(\\log^*N=0\\)</span> if <span class=\"math inline\">\\(0&lt;N\\leq 1\\)</span> and <span class=\"math inline\">\\(\\log^*N=1+\\log^*\\log N\\)</span> if <span class=\"math inline\">\\(N&gt;1\\)</span>.</p>\n<h2 id=\"hamiltonian-recombination\">Hamiltonian recombination</h2>\n<p>Suppose <span class=\"math inline\">\\(H = \\sum_{l=1}^{L}H_l\\)</span> and each <span class=\"math inline\">\\(e^{-iH_lt}\\)</span> can be approximated with high precision. The evolution of <span class=\"math inline\">\\(H\\)</span> cannot be obtained by multiplying each <span class=\"math inline\">\\(e^{-iH_lt}\\)</span> unless <span class=\"math inline\">\\(\\{H_l\\}\\)</span> commutes.</p>\n<p>The <em>Trotter-Suzuki decompostion</em> gives an approximation of the evolution unitary by product of evolution of each local interaction. The <em>Suzuki formula</em> of the <span class=\"math inline\">\\(n\\)</span>-th order <span class=\"math inline\">\\(S_m\\)</span> gives the <span class=\"math inline\">\\(m\\)</span>-th order approximation of the exponential: <span class=\"math display\">\\[\n\\begin{aligned}\nS_{1}( \\lambda ) &amp; :=\\prod _{l=1}^{L} e^{i\\lambda H_{l}} =e^{i\\lambda H} +O\\left( \\lambda ^{2}\\right) ,\\\\\nS_{2}( \\lambda ) &amp; :=\\prod _{l=1}^{L} e^{i\\frac{\\lambda }{2} H_{l}}\\prod _{k=L}^{1} e^{i\\frac{\\lambda }{2} H_{k}} =e^{i\\lambda H} +O\\left( \\lambda ^{3}\\right) .\n\\end{aligned}\n\\]</span></p>\n<p>The first order formula <span class=\"math inline\">\\(S_1(\\lambda)\\)</span> is also known as <em>Trotter formula</em> or <em>Lie product formula</em>. Suzuki proved in his thesis (<a href=\"https://aip.scitation.org/doi/10.1063/1.529425\">1991</a>) that the <span class=\"math inline\">\\((2k-1)\\)</span>-th order formula is equivalent to the <span class=\"math inline\">\\(2k\\)</span>-th formula, i.e., <span class=\"math display\">\\[\nS_{2k-1}(\\lambda) = S_{2k}(\\lambda) + O(\\lambda ^{2k+1}) .\n\\]</span></p>\n<p>Suzuki also gives a recursive method to define higher order formula, i.e., using a composition of low order formulas with controllable coefficients to cancel high order terms, much similar to Runge-Kutta method in numerical analysis. One way (given by Suzuki) to define the <span class=\"math inline\">\\(2k\\)</span>-th formula is <span class=\"math display\">\\[\nS_{2k}( \\lambda ) :=S_{2k-2}( p_{k} \\lambda )^{2} S_{2k-2}((1-4p_k) \\lambda) S_{2k-2} ( p_{k} \\lambda )^{2},\\ \\text{where}\\ p_{k} =\\left( 4-4^{\\frac{1}{2k-1}}\\right)^{-1} .\n\\]</span></p>\n<p>Finally, the evolution at time <span class=\"math inline\">\\(t\\)</span> can thus be approximated by dividing <span class=\"math inline\">\\(t\\)</span> into <span class=\"math inline\">\\(r\\)</span> steps: <span class=\"math display\">\\[\ne^{itH} =S_{m}\\left(\\frac{t}{r}\\right)^{r} +O\\left(\\frac{t^{m+1}}{r^{m}}\\right) .\n\\]</span></p>\n<p>The number of exponentials in a <span class=\"math inline\">\\(2k\\)</span>-th order Trotter-Suzuki decompositon is <span class=\"math inline\">\\(O(L5^kt(t/\\varepsilon)^{1/2k})\\)</span>. This bound is made precise by Berry et al. (<a href=\"https://arxiv.org/abs/quant-ph/0508139\">2006</a>) to be <span class=\"math display\">\\[\nN_{exp} \\leqslant 5^{2k} L^{2} \\| H\\| t\\left(\\frac{L\\| H\\| t}{\\varepsilon }\\right)^{1/2k}\n\\]</span> where <span class=\"math inline\">\\(\\Vert H\\Vert\\)</span> is the spectral norm of <span class=\"math inline\">\\(H\\)</span>.</p>\n<p>Several attempts on improving Trotter-Suzuki decomposition have been made.</p>\n<p>Zhang et al. (<a href=\"https://arxiv.org/abs/2011.05283\">2020</a>) proposed an adaptive version of product formula, where each evolution term in <span class=\"math display\">\\[\n\\prod _{l=1}^{L} e^{i\\lambda H_{l}}\n\\]</span> is selected in a heuristic way, thus reducing circuit depth. Suppose the current selected terms are <span class=\"math inline\">\\(\\{O_1,\\cdots,O_n\\}\\subseteq \\{H_l\\}\\)</span>, then the approximation error <span class=\"math display\">\\[\n\\begin{aligned}\n\\varepsilon  &amp; =\\| e^{-iH\\delta t} |\\psi ( t) \\rangle -\\prod _{j=1}^{n} e^{-iO_{j} \\lambda _{j} \\delta t} |\\psi ( t) \\rangle \\| \\\\\n &amp; =\\delta t\\left( \\langle H^{2} \\rangle +\\sum _{jj&#39;} A_{jj&#39;} \\lambda _{j} \\lambda _{j&#39;} -2\\sum _{j} C_{j} \\lambda _{j}\\right) +O\\left( \\delta t^{2}\\right)\n\\end{aligned}\n\\]</span> where <span class=\"math inline\">\\(A_{jj&#39;} =Re( \\langle O_{j} O_{j&#39;} \\rangle ), C_{j} =Re( \\langle HO_{j} \\rangle )\\)</span> can be efficiently evaluated.</p>\n<p>In the thesis of Jones et al. (<a href=\"https://arxiv.org/pdf/1904.01336.pdf\">2019</a>), the coefficients in Suzuki formula is optimised using evolutionary strategies.</p>\n<h1 id=\"quantum-walk\">Quantum walk</h1>\n<p>The best known algorithm for simulating sparse Hamiltonian is based on <em>Childs quantum walk</em> (<a href=\"https://link.springer.com/article/10.1007/s00220-009-0930-1\">2009</a>, <a href=\"https://dl.acm.org/doi/10.5555/2231036.2231040\">2012</a>), which extends the <em>Szegedy walk</em> (<a href=\"http://arxiv.org/abs/quant-ph/0401053\">2004</a>). Compared to product formula based algorithms whose query complexity is nearly linear with regard to <span class=\"math inline\">\\(t\\)</span> and <span class=\"math inline\">\\(poly(1/\\varepsilon)\\)</span> in terms of <span class=\"math inline\">\\(\\varepsilon\\)</span>, the best algorithm based on quantum walk achieves query complexity <span class=\"math inline\">\\(O(\\tau + \\log(1/\\varepsilon)/\\log\\log(\\varepsilon))\\)</span>, where <span class=\"math inline\">\\(\\tau:=d\\| H\\| _{\\max} t\\)</span> depends on sparsity <span class=\"math inline\">\\(d\\)</span>, the largest element of <span class=\"math inline\">\\(H\\)</span> and time <span class=\"math inline\">\\(t\\)</span>.</p>\n<h2 id=\"query-lower-bound\">Query lower bound</h2>\n<p>Berry et al. (<a href=\"https://dl.acm.org/doi/abs/10.1145/3313276.3316386\">2014</a>) proved a query lower bound scaling in error as <span class=\"math inline\">\\(\\varepsilon\\)</span> of <span class=\"math inline\">\\(\\Omega(\\log\\varepsilon/\\log\\log\\varepsilon)\\)</span>. In another <a href=\"ttps://arxiv.org/abs/1501.01715\">thesis</a> a year later, they proved an extension of the <em>no fast foward theorem</em> (<a href=\"http://dx.doi.org/10.1007/s00220-006-0150-x\">2007</a>) that gives a query complexity scaling in <span class=\"math inline\">\\(\\tau\\)</span> (instead of <span class=\"math inline\">\\(t\\)</span> in the no fast forward theorem) as <span class=\"math inline\">\\(\\Omega (\\tau)\\)</span>.</p>\n<p>The optimal additive lower bound <span class=\"math inline\">\\(\\Omega(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)\\)</span> was finally achieved by Low et al. (<a href=\"https://arxiv.org/abs/1606.02685\">2017</a>).</p>\n<h2 id=\"childs-quantum-walk\">Childs quantum walk</h2>\n<p>Quantum walk is defined analogous to classical random walk, or Markov chains. A quantum walk with <span class=\"math inline\">\\(N\\)</span> states is specified by a <span class=\"math inline\">\\(N\\times N\\)</span> Hermitian <span class=\"math inline\">\\(H\\)</span>. The <em>continious quantum walk</em> is obtained by the schrödinger equation. The <em>discrete quantum walk</em>, however, can only be defined on an enlarged state space. Specificly, the Hilbert space <span class=\"math inline\">\\(\\mathbb{C}^N\\)</span> is extended to <span class=\"math inline\">\\(\\mathbb{C}^{2N\\times 2N}\\)</span>.</p>\n<p>The Hamiltonian <span class=\"math inline\">\\(H\\)</span> of sparsity <span class=\"math inline\">\\(d\\)</span> is accessed by two oracle <span class=\"math inline\">\\(O_{H} ,O_{F}\\)</span>, where <span class=\"math inline\">\\(O_{H}\\)</span> accepts <span class=\"math inline\">\\(( j,k) \\in [ N] \\times [ N]\\)</span> and outputs <span class=\"math inline\">\\(H_{jk}\\)</span>, and <span class=\"math inline\">\\(O_{F}\\)</span> accepts <span class=\"math inline\">\\(( j,l) \\in [ N] \\times [ d]\\)</span> and output the <span class=\"math inline\">\\(l\\)</span>th nonzero element in the <span class=\"math inline\">\\(j\\)</span>th row of <span class=\"math inline\">\\(H\\)</span>. With <span class=\"math inline\">\\(O( 1)\\)</span> query to <span class=\"math inline\">\\(O_{H} ,O_{F}\\)</span>, one can implement an isometry <span class=\"math inline\">\\(T\\)</span> such that <span class=\"math display\">\\[\nT|j\\rangle = |j\\rangle \\otimes \\left(\\sqrt{\\frac{\\varepsilon }{\\| H\\| _{1}}}\\sum _{k=1}^{N}\\sqrt{H_{jk}^{*}} |k\\rangle |0\\rangle +\\sqrt{1-\\frac{\\varepsilon \\sigma _{j}}{\\| H\\| _{1}}} |\\zeta _{j} \\rangle |1\\rangle \\right) ,\n\\]</span> where <span class=\"math inline\">\\(\\varepsilon \\in ( 0,1]\\)</span> is a parameter that can be made small to obtain a <em>lazy quantum walk</em>, <span class=\"math inline\">\\(\\sqrt{H_{jk}^{*}}\\)</span> is chosen such that <span class=\"math inline\">\\(\\sqrt{H_{kj}^{*}}\\left(\\sqrt{H_{jk}^{*}}\\right)^{*} =H_{jk}\\)</span>, <span class=\"math inline\">\\(|\\zeta _{j} \\rangle\\)</span> is some superposition of <span class=\"math inline\">\\(|k\\rangle\\)</span>, <span class=\"math inline\">\\(\\sigma _{j} :=\\sum _{k=1}^{M} |H_{jk} |\\)</span>, <span class=\"math inline\">\\(\\| H\\| _{1} :=\\max_{j} \\sigma _{j}\\)</span>.</p>\n<p>A swap <span class=\"math inline\">\\(S\\)</span> such that <span class=\"math inline\">\\(S|j\\rangle |k\\rangle =|k\\rangle |j\\rangle\\)</span> can be implemented easily. Note that <span class=\"math inline\">\\(T|j\\rangle\\)</span> is choosen such that <span class=\"math display\">\\[\n\\langle j|T^{\\dagger } ST|k\\rangle =\\frac{\\varepsilon }{\\| H\\| _{1}} H_{jk}\n\\]</span></p>\n<p>The quantum walk operator is defined to be <span class=\"math display\">\\[\nW:=iS\\left( 2TT^{\\dagger } -I\\right).\n\\]</span></p>\n<h2 id=\"quantum-simulation-by-quantum-walk\">Quantum simulation by quantum walk</h2>\n<p>Let <span class=\"math inline\">\\(\\lambda\\)</span> be an eigenvalue of <span class=\"math inline\">\\(H\\)</span>, and <span class=\"math inline\">\\(|\\lambda \\rangle\\)</span> the corresponding eigenvector. <span class=\"math inline\">\\(T\\)</span> maps <span class=\"math inline\">\\(|\\lambda \\rangle\\)</span> into the combination of two eigenvectors of <span class=\"math inline\">\\(W\\)</span>: <span class=\"math display\">\\[\nT|\\lambda \\rangle =\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}} ,\n\\]</span> and <span class=\"math inline\">\\(W|\\lambda _{\\pm } \\rangle =e^{i\\theta _{\\pm }} |\\lambda _{\\pm } \\rangle\\)</span>, <span class=\"math display\">\\[\n\\theta _{\\pm } =\\pm \\arcsin\\left(\\frac{\\lambda }{d\\| H\\| _{\\max}}\\right) +( 1\\mp 1)\\frac{\\pi }{2} .\n\\]</span></p>\n<p>Quantum simulation by quantum walk can be summarized as the process below: <span class=\"math display\">\\[\n|\\lambda \\rangle \\xrightarrow{T}\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}}\\xrightarrow{U_h} \\frac{e^{ih( \\theta _{+})} |\\lambda _{+} \\rangle +e^{ih( \\theta _{-})} |\\lambda _{-} \\rangle }{\\sqrt{2}}\\rightarrow e^{-i\\lambda t} |\\lambda \\rangle\n\\]</span> with function <span class=\"math inline\">\\(h(\\theta)=-\\tau\\sin\\theta=-d\\| H\\| _{\\max} t\\sin \\theta\\)</span>.</p>\n<h2 id=\"implementing-function-h\">Implementing function <span class=\"math inline\">\\(h\\)</span></h2>\n<p>Berry et al. (<a href=\"https://arxiv.org/abs/1501.01715\">2015</a>) used <em>Linear Combination of Unitaries (LCU)</em> algorithm to obtain a linear combination of <span class=\"math inline\">\\(W^1,W^2,\\cdots,W^N\\)</span>, which approximates <span class=\"math inline\">\\(h\\)</span>. This method has a major drawback: success probability decays with <span class=\"math inline\">\\(N\\)</span>. Moreover, the query complexity is <span class=\"math inline\">\\(O(\\tau \\log\\varepsilon/\\log\\log\\varepsilon)\\)</span> which is not optimal.</p>\n<p>Low et al. (<a href=\"https://arxiv.org/abs/1606.02685\">2017</a>) proposed <em>Quantum Signal Processing</em> algorithm and achieved query lower bound <span class=\"math inline\">\\(O(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)\\)</span> without success probabilty decay. In general, given a odd periodic function <span class=\"math inline\">\\(h: (\\pi,\\pi]\\rightarrow(\\pi,\\pi]\\)</span>, the quantum signal processing algorithms transform an unitary <span class=\"math display\">\\[\nW=\\sum_\\lambda e^{i\\theta_\\lambda}|\\lambda\\rangle\\langle\\lambda|\\rightarrow V=\\sum_\\lambda e^{ih(\\theta_\\lambda)}|\\lambda\\rangle\\langle\\lambda|.\n\\]</span> with precision <span class=\"math inline\">\\(\\varepsilon\\)</span> and success probability <span class=\"math inline\">\\(1-O(\\varepsilon)\\)</span>. The query complexity of the signal processing algorithm depends on the Fourier decomposition of <span class=\"math inline\">\\(h\\)</span>.</p>\n<h1 id=\"variational-methods\">Variational methods</h1>\n<p><em>Varational Quantum Algorithm (VQA)</em> use low depth quantum circuits as a subroutine in a larger classical optimisation and have been applied broadly, including to binary optimisation problems, training machine learning models, and obtaining energy spectra. VQA is a quantum analog of classical machine learning methods, as it employs parametrized quantum circuits on quantum computers and leverages classical optimization toolbox for parameter optimizations. Cerezo et al. (<a href=\"https://arxiv.org/abs/2012.09265\">2020</a>) reviewed VQA and its various applications.</p>\n<p>https://doi.org/10.1038/s41534-021-00452-9 intro-p2</p>\n<p><em>Varational Quantum Simulation (VQS)</em> essentially approximates evolution unitary <span class=\"math inline\">\\(e^{-iHt}\\)</span> by a parametrized quantum circuit (or an <em>ansatz</em>) where the evolution of parameters in time <span class=\"math inline\">\\(t\\)</span> is determined by classical varational principles. Concretely, a first-order ode of parameters, whose coefficients can be efficiently determined by Hadamard test, is induced by varational principles. Yuan et al. (<a href=\"https://arxiv.org/abs/1812.08767\">2018</a>) studied the performance of different varational principles on different system (pure or mixed) and different evolution (real time and imaginary time).</p>\n<p>One obstacle is the lack of knowledge on contructing ansatz, which drastically affects the performance of simulation. In the inital work of Li et al. (<a href=\"https://journals.aps.org/prx/abstract/10.1103/PhysRevX.7.021050\">2017</a>), the algorithm error is evaluated to be <span class=\"math display\">\\[\nO\\left(\\left(\\sqrt{\\Delta_{\\max}^{(2)}} + \\sqrt{\\delta t\\Delta_{\\max}^{(3)}}\\right)T\\right)\n\\]</span> where <span class=\"math inline\">\\(\\Delta^{(2)}\\)</span> and <span class=\"math inline\">\\(\\Delta^{(3)}\\)</span> depend on the ansatz and <span class=\"math inline\">\\(H\\)</span>, thus a poorly designed ansatz leads to an linear error scaling in time <span class=\"math inline\">\\(T\\)</span> with large coefficient.</p>\n<p>Beside being sufficiently expressive, an ansatz must meet other practical concerns including hardware limitations (restricted qubit connectivity and practical limits on circuit depth due to experimental noise) as well as optimisation considerations (the number of optimisation parameters must not be too large)</p>\n<h1 id=\"algebra-methods\">Algebra methods</h1>\n<h2 id=\"fixed-depth-simulation-by-cartan-decomposition\">Fixed depth simulation by Cartan decomposition</h2>\n<p>TODO.</p>\n","site":{"data":{}},"excerpt":"<p>Simulating quantum mechanics by quantum computer has gained much attention. This review summarized several digital quantum simulation approaches, including product formula, quantum walk, varational principles and algebraic methods.</p>","more":"<h1 id=\"introduction\">Introduction</h1>\n<p>Simulating quantum mechanics, e.g. solving the Schrödinger equation on time-independent Hamiltonian <span class=\"math inline\">\\(H\\)</span>: <span class=\"math display\">\\[\ni\\hbar \\frac{d}{dt} |\\psi \\rangle =H|\\psi \\rangle \n\\]</span> is known to be a computationally hard problem due to <em>exponential explosion</em> back in 1980s. Approximation methods such as Monte Carlo algorithm (<a href=\"https://www.worldscientific.com/worldscibooks/10.1142/2262\">Suzuki, 1993</a>) only works on well-behaved problems, which discourages practical usage.</p>\n<p>The notion of simulating qauntum mechanics by <em>quantum computer</em> was envisioned by Feynman (<a href=\"https://link.springer.com/article/10.1007/BF02650179\">1982</a>). In fact, quantum computer was shown to have universal capability (<a href=\"https://science.sciencemag.org/content/273/5278/1073\">Lloyd, 1996</a>). However, as for simulating a problem-specific machine (e.g., a simple system with partial control that mimics a larger system in an analog way) rather than a universal quantum computer may be sufficient. Therefore practical qauntum simulation may come to reality way before a univeral quantum computer.</p>\n<p>Recently quantum simulation has gained more and more attention due to its potential applications in, e.g., condensed-matter physics, high-energy physics, atomic physics, quantum chemistry, and cosmology, as well as due to the advances in the coherent manipulation of quantum systems that promise practical quantum simulation in near future.</p>\n<h1 id=\"digital-analog-simulation\">Digital &amp; Analog simulation</h1>\n<p>One approach to simulate quantum system is based on the well-known circuit model, which is usually referred to as <em>digital quantum simulation</em>. Digital quantum simulation consists of 3 steps: 1. initial state preperation: encode the wave function using computational basis; 2. evolution unitary implementation: by application of a sequence of single- or two qubits gates; 3. final measurement: decode and extract information.</p>\n<p>Note that the advantage of quantum simulator over classical can only be exhibited when each of the three steps is realized efficiently, i.e., using polynomial resources. Actually these are not easy tasks.</p>\n<p>Another approach is <em>analog quantum simulation</em>, where one quantum system mimics another. This can be done if there exists a mapping <span class=\"math inline\">\\(f\\)</span> between the system and the simulator:</p>\n<p><span class=\"math display\">\\[\n\\begin{aligned}\n|\\psi _{sim}( 0) \\rangle  &amp; =f|\\psi _{sys}( 0) \\rangle \\\\\n|\\psi _{sys}( t) \\rangle  &amp; =f^{-1} |\\psi _{sim}( t) \\rangle \\\\\nH_{sim} &amp; =fH_{sys} f^{-1} .\n\\end{aligned}\n\\]</span></p>\n<p>See Georgescu et al. (<a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153\">2014</a>)'s review for more on this topic.</p>\n<p>The following sections summarize several methods for implementing evoluntion unitary in digital quantum simulation.</p>\n<h1 id=\"product-formula\">Product formula</h1>\n<p>The product formula approach is to approximate <span class=\"math inline\">\\(e^{-iHt}\\)</span> in two steps: 1. Hamiltonian decompostion: decompose <span class=\"math inline\">\\(H = \\sum_{l=1}^{L}H_l\\)</span>, where each <span class=\"math inline\">\\(H_l\\)</span> is easy to simulate; 2. Hamiltonian recombination: combine <span class=\"math inline\">\\(e^{-iH_lt}\\)</span>s to get an approximation of <span class=\"math inline\">\\(e^{-iHt}\\)</span>.</p>\n<p>The algorithm of this type has circuit complexity <span class=\"math inline\">\\(ploy(t,1/\\varepsilon)\\)</span>.</p>\n<p>TODO: improvements: https://arxiv.org/abs/1907.11679</p>\n<h2 id=\"hamiltonian-decomposition\">Hamiltonian decomposition</h2>\n<p><strong>Local Hamiltonian</strong>. A large class of Hamiltonians (e.g., Hubbard, Ising and Heisenberg model) can be decomposed as a sum of local interactions, as considered by Lloyd (<a href=\"https://science.sciencemag.org/content/273/5278/1073\">1996</a>). Each local interaction acts non-trivially on a small subsystem and can thus be simulated more easily. For example, in many physical model the Hamiltonian can be written as a sum of Pauli strings, and a <span class=\"math inline\">\\(k\\)</span>-local Pauli string can be simulated using <span class=\"math inline\">\\(2k\\)</span> <span class=\"math inline\">\\(CNOT\\)</span>s, a <span class=\"math inline\">\\(Rz\\)</span> that acts on an ancilla qubit, and several other primitive single qubit gates (see, e.g., <a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.86.153\">Georgescu's review</a>).</p>\n<p><strong>Sparse Hamiltonian</strong>. Simulating local Hamiltonians was later generalized by Aharonov et al. (<a href=\"https://dl.acm.org/doi/10.1145/780542.780546\">2003</a>) into simulating spase Hamiltonians. In this setting, the Hamiltonian <span class=\"math inline\">\\(H\\)</span> is accessed by an oracle, e.g., an oracle <span class=\"math inline\">\\(f\\)</span> that on inputing a row index <span class=\"math inline\">\\(i\\)</span> and an positive interger <span class=\"math inline\">\\(j\\)</span>, outputs the column index and the value of the <span class=\"math inline\">\\(j\\)</span>-th non-zero element in the <span class=\"math inline\">\\(i\\)</span>-th row. In a quantum circuit, this oracle is realized by a unitary <span class=\"math inline\">\\(U_f\\)</span> such that <span class=\"math inline\">\\(U_f|i,j,0\\rangle = |i,j,f(i,j)\\rangle\\)</span>.</p>\n<p>To decompose sparse Hamiltonians, it is common to consider the <em>graph of the Hamiltonian</em>. A Hamiltonian can be thought of as an adjacency matrix of a graph. The undirected graph formed by connecting two vertices if and only if the edge between them has nonzero weight (possibly complex weight) is called the graph of the Hamiltonian. Note that the graph of a <span class=\"math inline\">\\(d\\)</span>-<em>sparse</em> Hamiltonian (each row and column has at most <span class=\"math inline\">\\(d\\)</span> nonzero elements) has maximum degree <span class=\"math inline\">\\(d\\)</span>.</p>\n<p>Some graphs are easy to simulate. For example, graphs with maximum degree one such as Pauli strings. Berry et al. (<a href=\"https://arxiv.org/abs/quant-ph/0508139\">2006</a>) decompose a <span class=\"math inline\">\\(d\\)</span>-sparse Hamiltonian of dimension <span class=\"math inline\">\\(N\\)</span> into <span class=\"math inline\">\\(6d^2\\)</span> 1-sparse Hamiltonians, each can be simulated by making <span class=\"math inline\">\\(O(\\log^*N)\\)</span> queries.</p>\n<p>Galaxies (forest of stars) are also easy to simulate. Childs et al. (<a href=\"http://arxiv.org/abs/1003.3683v2\">2010</a>) decompose the <span class=\"math inline\">\\(d\\)</span>-sparse Hamiltonian into <span class=\"math inline\">\\(6d\\)</span> galaxies, and each galaxy can be simulated by making <span class=\"math inline\">\\(O(d+\\log^*N)\\)</span> queries.</p>\n<p>Here the function <span class=\"math inline\">\\(\\log^*\\)</span> is defined by <span class=\"math inline\">\\(\\log^*N=0\\)</span> if <span class=\"math inline\">\\(0&lt;N\\leq 1\\)</span> and <span class=\"math inline\">\\(\\log^*N=1+\\log^*\\log N\\)</span> if <span class=\"math inline\">\\(N&gt;1\\)</span>.</p>\n<h2 id=\"hamiltonian-recombination\">Hamiltonian recombination</h2>\n<p>Suppose <span class=\"math inline\">\\(H = \\sum_{l=1}^{L}H_l\\)</span> and each <span class=\"math inline\">\\(e^{-iH_lt}\\)</span> can be approximated with high precision. The evolution of <span class=\"math inline\">\\(H\\)</span> cannot be obtained by multiplying each <span class=\"math inline\">\\(e^{-iH_lt}\\)</span> unless <span class=\"math inline\">\\(\\{H_l\\}\\)</span> commutes.</p>\n<p>The <em>Trotter-Suzuki decompostion</em> gives an approximation of the evolution unitary by product of evolution of each local interaction. The <em>Suzuki formula</em> of the <span class=\"math inline\">\\(n\\)</span>-th order <span class=\"math inline\">\\(S_m\\)</span> gives the <span class=\"math inline\">\\(m\\)</span>-th order approximation of the exponential: <span class=\"math display\">\\[\n\\begin{aligned}\nS_{1}( \\lambda ) &amp; :=\\prod _{l=1}^{L} e^{i\\lambda H_{l}} =e^{i\\lambda H} +O\\left( \\lambda ^{2}\\right) ,\\\\\nS_{2}( \\lambda ) &amp; :=\\prod _{l=1}^{L} e^{i\\frac{\\lambda }{2} H_{l}}\\prod _{k=L}^{1} e^{i\\frac{\\lambda }{2} H_{k}} =e^{i\\lambda H} +O\\left( \\lambda ^{3}\\right) .\n\\end{aligned}\n\\]</span></p>\n<p>The first order formula <span class=\"math inline\">\\(S_1(\\lambda)\\)</span> is also known as <em>Trotter formula</em> or <em>Lie product formula</em>. Suzuki proved in his thesis (<a href=\"https://aip.scitation.org/doi/10.1063/1.529425\">1991</a>) that the <span class=\"math inline\">\\((2k-1)\\)</span>-th order formula is equivalent to the <span class=\"math inline\">\\(2k\\)</span>-th formula, i.e., <span class=\"math display\">\\[\nS_{2k-1}(\\lambda) = S_{2k}(\\lambda) + O(\\lambda ^{2k+1}) .\n\\]</span></p>\n<p>Suzuki also gives a recursive method to define higher order formula, i.e., using a composition of low order formulas with controllable coefficients to cancel high order terms, much similar to Runge-Kutta method in numerical analysis. One way (given by Suzuki) to define the <span class=\"math inline\">\\(2k\\)</span>-th formula is <span class=\"math display\">\\[\nS_{2k}( \\lambda ) :=S_{2k-2}( p_{k} \\lambda )^{2} S_{2k-2}((1-4p_k) \\lambda) S_{2k-2} ( p_{k} \\lambda )^{2},\\ \\text{where}\\ p_{k} =\\left( 4-4^{\\frac{1}{2k-1}}\\right)^{-1} .\n\\]</span></p>\n<p>Finally, the evolution at time <span class=\"math inline\">\\(t\\)</span> can thus be approximated by dividing <span class=\"math inline\">\\(t\\)</span> into <span class=\"math inline\">\\(r\\)</span> steps: <span class=\"math display\">\\[\ne^{itH} =S_{m}\\left(\\frac{t}{r}\\right)^{r} +O\\left(\\frac{t^{m+1}}{r^{m}}\\right) .\n\\]</span></p>\n<p>The number of exponentials in a <span class=\"math inline\">\\(2k\\)</span>-th order Trotter-Suzuki decompositon is <span class=\"math inline\">\\(O(L5^kt(t/\\varepsilon)^{1/2k})\\)</span>. This bound is made precise by Berry et al. (<a href=\"https://arxiv.org/abs/quant-ph/0508139\">2006</a>) to be <span class=\"math display\">\\[\nN_{exp} \\leqslant 5^{2k} L^{2} \\| H\\| t\\left(\\frac{L\\| H\\| t}{\\varepsilon }\\right)^{1/2k}\n\\]</span> where <span class=\"math inline\">\\(\\Vert H\\Vert\\)</span> is the spectral norm of <span class=\"math inline\">\\(H\\)</span>.</p>\n<p>Several attempts on improving Trotter-Suzuki decomposition have been made.</p>\n<p>Zhang et al. (<a href=\"https://arxiv.org/abs/2011.05283\">2020</a>) proposed an adaptive version of product formula, where each evolution term in <span class=\"math display\">\\[\n\\prod _{l=1}^{L} e^{i\\lambda H_{l}}\n\\]</span> is selected in a heuristic way, thus reducing circuit depth. Suppose the current selected terms are <span class=\"math inline\">\\(\\{O_1,\\cdots,O_n\\}\\subseteq \\{H_l\\}\\)</span>, then the approximation error <span class=\"math display\">\\[\n\\begin{aligned}\n\\varepsilon  &amp; =\\| e^{-iH\\delta t} |\\psi ( t) \\rangle -\\prod _{j=1}^{n} e^{-iO_{j} \\lambda _{j} \\delta t} |\\psi ( t) \\rangle \\| \\\\\n &amp; =\\delta t\\left( \\langle H^{2} \\rangle +\\sum _{jj&#39;} A_{jj&#39;} \\lambda _{j} \\lambda _{j&#39;} -2\\sum _{j} C_{j} \\lambda _{j}\\right) +O\\left( \\delta t^{2}\\right)\n\\end{aligned}\n\\]</span> where <span class=\"math inline\">\\(A_{jj&#39;} =Re( \\langle O_{j} O_{j&#39;} \\rangle ), C_{j} =Re( \\langle HO_{j} \\rangle )\\)</span> can be efficiently evaluated.</p>\n<p>In the thesis of Jones et al. (<a href=\"https://arxiv.org/pdf/1904.01336.pdf\">2019</a>), the coefficients in Suzuki formula is optimised using evolutionary strategies.</p>\n<h1 id=\"quantum-walk\">Quantum walk</h1>\n<p>The best known algorithm for simulating sparse Hamiltonian is based on <em>Childs quantum walk</em> (<a href=\"https://link.springer.com/article/10.1007/s00220-009-0930-1\">2009</a>, <a href=\"https://dl.acm.org/doi/10.5555/2231036.2231040\">2012</a>), which extends the <em>Szegedy walk</em> (<a href=\"http://arxiv.org/abs/quant-ph/0401053\">2004</a>). Compared to product formula based algorithms whose query complexity is nearly linear with regard to <span class=\"math inline\">\\(t\\)</span> and <span class=\"math inline\">\\(poly(1/\\varepsilon)\\)</span> in terms of <span class=\"math inline\">\\(\\varepsilon\\)</span>, the best algorithm based on quantum walk achieves query complexity <span class=\"math inline\">\\(O(\\tau + \\log(1/\\varepsilon)/\\log\\log(\\varepsilon))\\)</span>, where <span class=\"math inline\">\\(\\tau:=d\\| H\\| _{\\max} t\\)</span> depends on sparsity <span class=\"math inline\">\\(d\\)</span>, the largest element of <span class=\"math inline\">\\(H\\)</span> and time <span class=\"math inline\">\\(t\\)</span>.</p>\n<h2 id=\"query-lower-bound\">Query lower bound</h2>\n<p>Berry et al. (<a href=\"https://dl.acm.org/doi/abs/10.1145/3313276.3316386\">2014</a>) proved a query lower bound scaling in error as <span class=\"math inline\">\\(\\varepsilon\\)</span> of <span class=\"math inline\">\\(\\Omega(\\log\\varepsilon/\\log\\log\\varepsilon)\\)</span>. In another <a href=\"ttps://arxiv.org/abs/1501.01715\">thesis</a> a year later, they proved an extension of the <em>no fast foward theorem</em> (<a href=\"http://dx.doi.org/10.1007/s00220-006-0150-x\">2007</a>) that gives a query complexity scaling in <span class=\"math inline\">\\(\\tau\\)</span> (instead of <span class=\"math inline\">\\(t\\)</span> in the no fast forward theorem) as <span class=\"math inline\">\\(\\Omega (\\tau)\\)</span>.</p>\n<p>The optimal additive lower bound <span class=\"math inline\">\\(\\Omega(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)\\)</span> was finally achieved by Low et al. (<a href=\"https://arxiv.org/abs/1606.02685\">2017</a>).</p>\n<h2 id=\"childs-quantum-walk\">Childs quantum walk</h2>\n<p>Quantum walk is defined analogous to classical random walk, or Markov chains. A quantum walk with <span class=\"math inline\">\\(N\\)</span> states is specified by a <span class=\"math inline\">\\(N\\times N\\)</span> Hermitian <span class=\"math inline\">\\(H\\)</span>. The <em>continious quantum walk</em> is obtained by the schrödinger equation. The <em>discrete quantum walk</em>, however, can only be defined on an enlarged state space. Specificly, the Hilbert space <span class=\"math inline\">\\(\\mathbb{C}^N\\)</span> is extended to <span class=\"math inline\">\\(\\mathbb{C}^{2N\\times 2N}\\)</span>.</p>\n<p>The Hamiltonian <span class=\"math inline\">\\(H\\)</span> of sparsity <span class=\"math inline\">\\(d\\)</span> is accessed by two oracle <span class=\"math inline\">\\(O_{H} ,O_{F}\\)</span>, where <span class=\"math inline\">\\(O_{H}\\)</span> accepts <span class=\"math inline\">\\(( j,k) \\in [ N] \\times [ N]\\)</span> and outputs <span class=\"math inline\">\\(H_{jk}\\)</span>, and <span class=\"math inline\">\\(O_{F}\\)</span> accepts <span class=\"math inline\">\\(( j,l) \\in [ N] \\times [ d]\\)</span> and output the <span class=\"math inline\">\\(l\\)</span>th nonzero element in the <span class=\"math inline\">\\(j\\)</span>th row of <span class=\"math inline\">\\(H\\)</span>. With <span class=\"math inline\">\\(O( 1)\\)</span> query to <span class=\"math inline\">\\(O_{H} ,O_{F}\\)</span>, one can implement an isometry <span class=\"math inline\">\\(T\\)</span> such that <span class=\"math display\">\\[\nT|j\\rangle = |j\\rangle \\otimes \\left(\\sqrt{\\frac{\\varepsilon }{\\| H\\| _{1}}}\\sum _{k=1}^{N}\\sqrt{H_{jk}^{*}} |k\\rangle |0\\rangle +\\sqrt{1-\\frac{\\varepsilon \\sigma _{j}}{\\| H\\| _{1}}} |\\zeta _{j} \\rangle |1\\rangle \\right) ,\n\\]</span> where <span class=\"math inline\">\\(\\varepsilon \\in ( 0,1]\\)</span> is a parameter that can be made small to obtain a <em>lazy quantum walk</em>, <span class=\"math inline\">\\(\\sqrt{H_{jk}^{*}}\\)</span> is chosen such that <span class=\"math inline\">\\(\\sqrt{H_{kj}^{*}}\\left(\\sqrt{H_{jk}^{*}}\\right)^{*} =H_{jk}\\)</span>, <span class=\"math inline\">\\(|\\zeta _{j} \\rangle\\)</span> is some superposition of <span class=\"math inline\">\\(|k\\rangle\\)</span>, <span class=\"math inline\">\\(\\sigma _{j} :=\\sum _{k=1}^{M} |H_{jk} |\\)</span>, <span class=\"math inline\">\\(\\| H\\| _{1} :=\\max_{j} \\sigma _{j}\\)</span>.</p>\n<p>A swap <span class=\"math inline\">\\(S\\)</span> such that <span class=\"math inline\">\\(S|j\\rangle |k\\rangle =|k\\rangle |j\\rangle\\)</span> can be implemented easily. Note that <span class=\"math inline\">\\(T|j\\rangle\\)</span> is choosen such that <span class=\"math display\">\\[\n\\langle j|T^{\\dagger } ST|k\\rangle =\\frac{\\varepsilon }{\\| H\\| _{1}} H_{jk}\n\\]</span></p>\n<p>The quantum walk operator is defined to be <span class=\"math display\">\\[\nW:=iS\\left( 2TT^{\\dagger } -I\\right).\n\\]</span></p>\n<h2 id=\"quantum-simulation-by-quantum-walk\">Quantum simulation by quantum walk</h2>\n<p>Let <span class=\"math inline\">\\(\\lambda\\)</span> be an eigenvalue of <span class=\"math inline\">\\(H\\)</span>, and <span class=\"math inline\">\\(|\\lambda \\rangle\\)</span> the corresponding eigenvector. <span class=\"math inline\">\\(T\\)</span> maps <span class=\"math inline\">\\(|\\lambda \\rangle\\)</span> into the combination of two eigenvectors of <span class=\"math inline\">\\(W\\)</span>: <span class=\"math display\">\\[\nT|\\lambda \\rangle =\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}} ,\n\\]</span> and <span class=\"math inline\">\\(W|\\lambda _{\\pm } \\rangle =e^{i\\theta _{\\pm }} |\\lambda _{\\pm } \\rangle\\)</span>, <span class=\"math display\">\\[\n\\theta _{\\pm } =\\pm \\arcsin\\left(\\frac{\\lambda }{d\\| H\\| _{\\max}}\\right) +( 1\\mp 1)\\frac{\\pi }{2} .\n\\]</span></p>\n<p>Quantum simulation by quantum walk can be summarized as the process below: <span class=\"math display\">\\[\n|\\lambda \\rangle \\xrightarrow{T}\\frac{|\\lambda _{+} \\rangle +|\\lambda _{-} \\rangle }{\\sqrt{2}}\\xrightarrow{U_h} \\frac{e^{ih( \\theta _{+})} |\\lambda _{+} \\rangle +e^{ih( \\theta _{-})} |\\lambda _{-} \\rangle }{\\sqrt{2}}\\rightarrow e^{-i\\lambda t} |\\lambda \\rangle\n\\]</span> with function <span class=\"math inline\">\\(h(\\theta)=-\\tau\\sin\\theta=-d\\| H\\| _{\\max} t\\sin \\theta\\)</span>.</p>\n<h2 id=\"implementing-function-h\">Implementing function <span class=\"math inline\">\\(h\\)</span></h2>\n<p>Berry et al. (<a href=\"https://arxiv.org/abs/1501.01715\">2015</a>) used <em>Linear Combination of Unitaries (LCU)</em> algorithm to obtain a linear combination of <span class=\"math inline\">\\(W^1,W^2,\\cdots,W^N\\)</span>, which approximates <span class=\"math inline\">\\(h\\)</span>. This method has a major drawback: success probability decays with <span class=\"math inline\">\\(N\\)</span>. Moreover, the query complexity is <span class=\"math inline\">\\(O(\\tau \\log\\varepsilon/\\log\\log\\varepsilon)\\)</span> which is not optimal.</p>\n<p>Low et al. (<a href=\"https://arxiv.org/abs/1606.02685\">2017</a>) proposed <em>Quantum Signal Processing</em> algorithm and achieved query lower bound <span class=\"math inline\">\\(O(\\tau + \\log\\varepsilon/\\log\\log\\varepsilon)\\)</span> without success probabilty decay. In general, given a odd periodic function <span class=\"math inline\">\\(h: (\\pi,\\pi]\\rightarrow(\\pi,\\pi]\\)</span>, the quantum signal processing algorithms transform an unitary <span class=\"math display\">\\[\nW=\\sum_\\lambda e^{i\\theta_\\lambda}|\\lambda\\rangle\\langle\\lambda|\\rightarrow V=\\sum_\\lambda e^{ih(\\theta_\\lambda)}|\\lambda\\rangle\\langle\\lambda|.\n\\]</span> with precision <span class=\"math inline\">\\(\\varepsilon\\)</span> and success probability <span class=\"math inline\">\\(1-O(\\varepsilon)\\)</span>. The query complexity of the signal processing algorithm depends on the Fourier decomposition of <span class=\"math inline\">\\(h\\)</span>.</p>\n<h1 id=\"variational-methods\">Variational methods</h1>\n<p><em>Varational Quantum Algorithm (VQA)</em> use low depth quantum circuits as a subroutine in a larger classical optimisation and have been applied broadly, including to binary optimisation problems, training machine learning models, and obtaining energy spectra. VQA is a quantum analog of classical machine learning methods, as it employs parametrized quantum circuits on quantum computers and leverages classical optimization toolbox for parameter optimizations. Cerezo et al. (<a href=\"https://arxiv.org/abs/2012.09265\">2020</a>) reviewed VQA and its various applications.</p>\n<p>https://doi.org/10.1038/s41534-021-00452-9 intro-p2</p>\n<p><em>Varational Quantum Simulation (VQS)</em> essentially approximates evolution unitary <span class=\"math inline\">\\(e^{-iHt}\\)</span> by a parametrized quantum circuit (or an <em>ansatz</em>) where the evolution of parameters in time <span class=\"math inline\">\\(t\\)</span> is determined by classical varational principles. Concretely, a first-order ode of parameters, whose coefficients can be efficiently determined by Hadamard test, is induced by varational principles. Yuan et al. (<a href=\"https://arxiv.org/abs/1812.08767\">2018</a>) studied the performance of different varational principles on different system (pure or mixed) and different evolution (real time and imaginary time).</p>\n<p>One obstacle is the lack of knowledge on contructing ansatz, which drastically affects the performance of simulation. In the inital work of Li et al. (<a href=\"https://journals.aps.org/prx/abstract/10.1103/PhysRevX.7.021050\">2017</a>), the algorithm error is evaluated to be <span class=\"math display\">\\[\nO\\left(\\left(\\sqrt{\\Delta_{\\max}^{(2)}} + \\sqrt{\\delta t\\Delta_{\\max}^{(3)}}\\right)T\\right)\n\\]</span> where <span class=\"math inline\">\\(\\Delta^{(2)}\\)</span> and <span class=\"math inline\">\\(\\Delta^{(3)}\\)</span> depend on the ansatz and <span class=\"math inline\">\\(H\\)</span>, thus a poorly designed ansatz leads to an linear error scaling in time <span class=\"math inline\">\\(T\\)</span> with large coefficient.</p>\n<p>Beside being sufficiently expressive, an ansatz must meet other practical concerns including hardware limitations (restricted qubit connectivity and practical limits on circuit depth due to experimental noise) as well as optimisation considerations (the number of optimisation parameters must not be too large)</p>\n<h1 id=\"algebra-methods\">Algebra methods</h1>\n<h2 id=\"fixed-depth-simulation-by-cartan-decomposition\">Fixed depth simulation by Cartan decomposition</h2>\n<p>TODO.</p>"},{"title":"Random sampling","date":"2021-12-27T06:37:00.000Z","updated":"2022-02-19T09:31:00.000Z","_content":"\nBasic sampling methods for some interesting and useful distributions.\n\n<!-- more -->\n\n# Standard randomness\n\nThe uniform (0, 1) variable provided by almost all languages.\n\n# Normal distribution\n\nRefer to [Wikipedia](https://en.wikipedia.org/wiki/Normal_distribution#Generating_values_from_normal_distribution).\n\nOne easy-to-implement \"Box–Muller method\": Generate two independent random numbers $U$ and $V$ distributed uniformly on (0,1). Then the two random variables $X$ and $Y$\n$$\nX = \\sqrt{-2\\ln(U)}\\sin(2\\pi V), Y = \\sqrt{-2\\ln(V)}\\sin(2\\pi U)\n$$\nwill be both normally distributed and independent.\n\n# Haar distribution on n-sphere\n\nGenerate n independent normal variables $X_1,X_2,\\ldots,X_n$, then $(Y_1,Y_2,\\ldots,Y_n)$ where\n$$\nY_i = X_i / \\sqrt{X_1^2+X_2^2+\\ldots+X_n^2}\n$$\nwill be uniformly distributed on a n-sphere.\n\nThe intuition is that under any rotation, the covariance matrix will always be identity.\n\n# Arbitrary discrete distribution\n\nSuppose we want to sample a discrete distribution on $\\{1,2,\\ldots,N\\}$, and we hope this distribution to take arbitrary form, e.g., a function $f$. This can be done in $O(\\log N)$ time, by dichotomy, if the discrete integral of $f$ can be computed in $O(1)$ time.\n\n```py\ndef sample_f(N, f):\n\tF = discrete_int(f)\n\tl, r = 1, N\n\twhile l < r:\n\t\tm = (l + r) // 2\n\t\tp = (F(m+1) - F(l)) / (F(r+1) - F(l))\n\t\tif bernouli(p) == 0:\n\t\t\tr = m\n\t\telse:\n\t\t\tl = m + 1\n\treturn l\n```\n\nFor example, if $f$ is a polynomial of degree $k$, a simple python implementation:\n\n```py\nfrom random import random\n\n# p: big end probability, L: length\ndef sample_poly(L: int, ord):\n    l, r = 0, L-1\n    while l < r:\n        m = (l + r) // 2\n        p = ((m+1)**ord-l**ord)/((r+1)**ord-l**ord)\n        if random() < p:\n            r = m\n        else:\n            l = m + 1\n    return l\n```\n\npoly 3:\n\n![enter image description here](/attach/ylu4g.png)","source":"_posts/rand-sample.md","raw":"---\ntitle: Random sampling\ndate: 2021-12-27 14:37:00\nupdated: 2022-02-19 17:31:00\ncategories:\n- Science\ntags:\n- Statistics\n- Note\n---\n\nBasic sampling methods for some interesting and useful distributions.\n\n<!-- more -->\n\n# Standard randomness\n\nThe uniform (0, 1) variable provided by almost all languages.\n\n# Normal distribution\n\nRefer to [Wikipedia](https://en.wikipedia.org/wiki/Normal_distribution#Generating_values_from_normal_distribution).\n\nOne easy-to-implement \"Box–Muller method\": Generate two independent random numbers $U$ and $V$ distributed uniformly on (0,1). Then the two random variables $X$ and $Y$\n$$\nX = \\sqrt{-2\\ln(U)}\\sin(2\\pi V), Y = \\sqrt{-2\\ln(V)}\\sin(2\\pi U)\n$$\nwill be both normally distributed and independent.\n\n# Haar distribution on n-sphere\n\nGenerate n independent normal variables $X_1,X_2,\\ldots,X_n$, then $(Y_1,Y_2,\\ldots,Y_n)$ where\n$$\nY_i = X_i / \\sqrt{X_1^2+X_2^2+\\ldots+X_n^2}\n$$\nwill be uniformly distributed on a n-sphere.\n\nThe intuition is that under any rotation, the covariance matrix will always be identity.\n\n# Arbitrary discrete distribution\n\nSuppose we want to sample a discrete distribution on $\\{1,2,\\ldots,N\\}$, and we hope this distribution to take arbitrary form, e.g., a function $f$. This can be done in $O(\\log N)$ time, by dichotomy, if the discrete integral of $f$ can be computed in $O(1)$ time.\n\n```py\ndef sample_f(N, f):\n\tF = discrete_int(f)\n\tl, r = 1, N\n\twhile l < r:\n\t\tm = (l + r) // 2\n\t\tp = (F(m+1) - F(l)) / (F(r+1) - F(l))\n\t\tif bernouli(p) == 0:\n\t\t\tr = m\n\t\telse:\n\t\t\tl = m + 1\n\treturn l\n```\n\nFor example, if $f$ is a polynomial of degree $k$, a simple python implementation:\n\n```py\nfrom random import random\n\n# p: big end probability, L: length\ndef sample_poly(L: int, ord):\n    l, r = 0, L-1\n    while l < r:\n        m = (l + r) // 2\n        p = ((m+1)**ord-l**ord)/((r+1)**ord-l**ord)\n        if random() < p:\n            r = m\n        else:\n            l = m + 1\n    return l\n```\n\npoly 3:\n\n![enter image description here](/attach/ylu4g.png)","slug":"rand-sample","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqie000i2sffe57yhs9p","content":"<p>Basic sampling methods for some interesting and useful distributions.</p>\n<span id=\"more\"></span>\n<h1 id=\"standard-randomness\">Standard randomness</h1>\n<p>The uniform (0, 1) variable provided by almost all languages.</p>\n<h1 id=\"normal-distribution\">Normal distribution</h1>\n<p>Refer to <a href=\"https://en.wikipedia.org/wiki/Normal_distribution#Generating_values_from_normal_distribution\">Wikipedia</a>.</p>\n<p>One easy-to-implement \"Box–Muller method\": Generate two independent random numbers <span class=\"math inline\">\\(U\\)</span> and <span class=\"math inline\">\\(V\\)</span> distributed uniformly on (0,1). Then the two random variables <span class=\"math inline\">\\(X\\)</span> and <span class=\"math inline\">\\(Y\\)</span> <span class=\"math display\">\\[\nX = \\sqrt{-2\\ln(U)}\\sin(2\\pi V), Y = \\sqrt{-2\\ln(V)}\\sin(2\\pi U)\n\\]</span> will be both normally distributed and independent.</p>\n<h1 id=\"haar-distribution-on-n-sphere\">Haar distribution on n-sphere</h1>\n<p>Generate n independent normal variables <span class=\"math inline\">\\(X_1,X_2,\\ldots,X_n\\)</span>, then <span class=\"math inline\">\\((Y_1,Y_2,\\ldots,Y_n)\\)</span> where <span class=\"math display\">\\[\nY_i = X_i / \\sqrt{X_1^2+X_2^2+\\ldots+X_n^2}\n\\]</span> will be uniformly distributed on a n-sphere.</p>\n<p>The intuition is that under any rotation, the covariance matrix will always be identity.</p>\n<h1 id=\"arbitrary-discrete-distribution\">Arbitrary discrete distribution</h1>\n<p>Suppose we want to sample a discrete distribution on <span class=\"math inline\">\\(\\{1,2,\\ldots,N\\}\\)</span>, and we hope this distribution to take arbitrary form, e.g., a function <span class=\"math inline\">\\(f\\)</span>. This can be done in <span class=\"math inline\">\\(O(\\log N)\\)</span> time, by dichotomy, if the discrete integral of <span class=\"math inline\">\\(f\\)</span> can be computed in <span class=\"math inline\">\\(O(1)\\)</span> time.</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sample_f</span>(<span class=\"params\">N, f</span>):</span><br><span class=\"line\">\tF = discrete_int(f)</span><br><span class=\"line\">\tl, r = <span class=\"number\">1</span>, N</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> l &lt; r:</span><br><span class=\"line\">\t\tm = (l + r) // <span class=\"number\">2</span></span><br><span class=\"line\">\t\tp = (F(m+<span class=\"number\">1</span>) - F(l)) / (F(r+<span class=\"number\">1</span>) - F(l))</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> bernouli(p) == <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\t\tr = m</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\tl = m + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l</span><br></pre></td></tr></table></figure>\n<p>For example, if <span class=\"math inline\">\\(f\\)</span> is a polynomial of degree <span class=\"math inline\">\\(k\\)</span>, a simple python implementation:</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># p: big end probability, L: length</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sample_poly</span>(<span class=\"params\">L: <span class=\"built_in\">int</span>, <span class=\"built_in\">ord</span></span>):</span><br><span class=\"line\">    l, r = <span class=\"number\">0</span>, L-<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> l &lt; r:</span><br><span class=\"line\">        m = (l + r) // <span class=\"number\">2</span></span><br><span class=\"line\">        p = ((m+<span class=\"number\">1</span>)**<span class=\"built_in\">ord</span>-l**<span class=\"built_in\">ord</span>)/((r+<span class=\"number\">1</span>)**<span class=\"built_in\">ord</span>-l**<span class=\"built_in\">ord</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> random() &lt; p:</span><br><span class=\"line\">            r = m</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            l = m + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> l</span><br></pre></td></tr></table></figure>\n<p>poly 3:</p>\n<figure>\n<img src=\"/attach/ylu4g.png\" alt=\"enter image description here\" /><figcaption>enter image description here</figcaption>\n</figure>\n","site":{"data":{}},"excerpt":"<p>Basic sampling methods for some interesting and useful distributions.</p>","more":"<h1 id=\"standard-randomness\">Standard randomness</h1>\n<p>The uniform (0, 1) variable provided by almost all languages.</p>\n<h1 id=\"normal-distribution\">Normal distribution</h1>\n<p>Refer to <a href=\"https://en.wikipedia.org/wiki/Normal_distribution#Generating_values_from_normal_distribution\">Wikipedia</a>.</p>\n<p>One easy-to-implement \"Box–Muller method\": Generate two independent random numbers <span class=\"math inline\">\\(U\\)</span> and <span class=\"math inline\">\\(V\\)</span> distributed uniformly on (0,1). Then the two random variables <span class=\"math inline\">\\(X\\)</span> and <span class=\"math inline\">\\(Y\\)</span> <span class=\"math display\">\\[\nX = \\sqrt{-2\\ln(U)}\\sin(2\\pi V), Y = \\sqrt{-2\\ln(V)}\\sin(2\\pi U)\n\\]</span> will be both normally distributed and independent.</p>\n<h1 id=\"haar-distribution-on-n-sphere\">Haar distribution on n-sphere</h1>\n<p>Generate n independent normal variables <span class=\"math inline\">\\(X_1,X_2,\\ldots,X_n\\)</span>, then <span class=\"math inline\">\\((Y_1,Y_2,\\ldots,Y_n)\\)</span> where <span class=\"math display\">\\[\nY_i = X_i / \\sqrt{X_1^2+X_2^2+\\ldots+X_n^2}\n\\]</span> will be uniformly distributed on a n-sphere.</p>\n<p>The intuition is that under any rotation, the covariance matrix will always be identity.</p>\n<h1 id=\"arbitrary-discrete-distribution\">Arbitrary discrete distribution</h1>\n<p>Suppose we want to sample a discrete distribution on <span class=\"math inline\">\\(\\{1,2,\\ldots,N\\}\\)</span>, and we hope this distribution to take arbitrary form, e.g., a function <span class=\"math inline\">\\(f\\)</span>. This can be done in <span class=\"math inline\">\\(O(\\log N)\\)</span> time, by dichotomy, if the discrete integral of <span class=\"math inline\">\\(f\\)</span> can be computed in <span class=\"math inline\">\\(O(1)\\)</span> time.</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sample_f</span>(<span class=\"params\">N, f</span>):</span><br><span class=\"line\">\tF = discrete_int(f)</span><br><span class=\"line\">\tl, r = <span class=\"number\">1</span>, N</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> l &lt; r:</span><br><span class=\"line\">\t\tm = (l + r) // <span class=\"number\">2</span></span><br><span class=\"line\">\t\tp = (F(m+<span class=\"number\">1</span>) - F(l)) / (F(r+<span class=\"number\">1</span>) - F(l))</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> bernouli(p) == <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\t\tr = m</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\tl = m + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l</span><br></pre></td></tr></table></figure>\n<p>For example, if <span class=\"math inline\">\\(f\\)</span> is a polynomial of degree <span class=\"math inline\">\\(k\\)</span>, a simple python implementation:</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># p: big end probability, L: length</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sample_poly</span>(<span class=\"params\">L: <span class=\"built_in\">int</span>, <span class=\"built_in\">ord</span></span>):</span><br><span class=\"line\">    l, r = <span class=\"number\">0</span>, L-<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> l &lt; r:</span><br><span class=\"line\">        m = (l + r) // <span class=\"number\">2</span></span><br><span class=\"line\">        p = ((m+<span class=\"number\">1</span>)**<span class=\"built_in\">ord</span>-l**<span class=\"built_in\">ord</span>)/((r+<span class=\"number\">1</span>)**<span class=\"built_in\">ord</span>-l**<span class=\"built_in\">ord</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> random() &lt; p:</span><br><span class=\"line\">            r = m</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            l = m + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> l</span><br></pre></td></tr></table></figure>\n<p>poly 3:</p>\n<figure>\n<img src=\"/attach/ylu4g.png\" alt=\"enter image description here\" /><figcaption>enter image description here</figcaption>\n</figure>"},{"title":"Generalized Rayleigh quotient","date":"2021-10-23T12:31:00.000Z","updated":"2022-02-15T11:41:00.000Z","_content":"\nRayleigh quotient appears a lot in machine learning, quantum mechanics etc. This note details Rayleigh quotient and simple proofs as well as introduce some of its applications.\n\n<!-- more -->\n\n# Generalized Rayleigh quotient\n\nIn mathematics, the **Rayleigh quotient** for a given complex Hermitian matrix $M$ and nonzero vector $x$ is defined as ([Wiki](https://en.wikipedia.org/wiki/Rayleigh_quotient)):\n$$\nR( M,w) =\\frac{w^{\\dagger } Mw}{w^{\\dagger } w}\n$$\n\nIn this note, we aim at a generalized Rayleigh quotient, where vector ensemble $V$ (instead of $x$) is considered:\n$$\nR( M,V) =\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right)\n$$\n\nRemark that here quotient of matrices is well defined as $\\operatorname{tr}(AB^{-1})=\\operatorname{tr}(B^{-1}A)$. Also, if the denominator is $V^{\\dagger } PV$ instead of $V^{\\dagger } V$ where $P\\succ 0$, then a standard version can be recovered by transforming $V$ to $QV$ and $M$ to $\\left( Q^{\\dagger }\\right)^{-1} MQ^{-1}$, where $P=Q^{\\dagger } Q$.\n\nIn order to calculate the lower bound (resp. upper bound) of classical Rayleigh quotient, the easiest approach is to use Lagrange multipliers. Unfortunately, this method cannot generalized to $R(M,V)$. Nevertheless, as one may expect, generalized Rayleigh quotient depends on eigenvalues of $M$ just like its classical counterpart.\n\n**Theorem.** *For* $n\\times n$ *Hermitian* $M$ *and* $n\\times k$ *vector ensemble* $V$, *generalized Rayleigh quotient is bounded by*\n$$\n\\lambda _{1} +\\cdots +\\lambda _{k} \\leqslant R( M,V) \\leqslant \\lambda _{n-k+1} +\\cdots +\\lambda _{n}\n$$\n*The lower bound (resp. upper bound) is achieved when* $V$ *is the ensemble of eigenvectors of corresponding eigenvalues.*\n\nProof. First notice that we can assume $V$ is an ensemble of standard orthogonal vectors. If not, there exists unitary $U$ such that $V^{T} V=U^{\\dagger } DU$ where $D$ is a positive diagonal matrix. By properties of matrix trace,\n$$\n\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right) =\\operatorname{tr}\\left(\\frac{D^{-1/2} UV^{\\dagger } MVU^{\\dagger } D^{-1/2}}{D^{-1/2} UV^{\\dagger } VU^{\\dagger } D^{-1/2}}\\right)\n$$\nNow $VU^{\\dagger } D^{-1/2}$ is an ensemble of standard orthogonal vectors.\nBy the same reasoning one can assume Hermitian $M$ to be diagonal. Thus\n$$\nR( M,V) =\\operatorname{tr}\\left( V^{\\dagger } MV\\right) =\\sum _{j} \\lambda _{j}\\sum _{i} |v_{ij} |^{2}\n$$\nLet $r_{j} =\\sum _{i} |v_{ij} |^{2}$, then $r_{1} ,\\dotsc r_{n}$ are numbers in $[ 0,1]$ and sums to $k$. Thus $\\sum _{j} r_{j} \\lambda _{j}$ can be viewed as a (restricted) convex combination of $\\{\\lambda _{j}\\}_{j=1}^{n}$, which takes its lower bound (resp. upper bound) at $\\lambda _{1} +\\cdots +\\lambda _{k}$ (resp. $\\lambda _{n-k+1} +\\cdots +\\lambda _{n}$). That the corresponding $V$ is an ensemble of eigenvectors is easily checked.\n\n# Applications\n\n## Fisher's linear discriminant\n\n$$\n\\min J_{F}( w) =\\frac{w^{T} S_{b} w}{w^{T} S_{w} w}\n$$\n\n## Normalized cut\n\n$$\n\\begin{array}{l} \\min J( V_{1} ,\\dotsc ,V_{K}) =\\frac{1}{2}\\sum _{k=1}^{K}\\frac{w\\left( V_{k} ,\\overline{V_{k}}\\right)}{d( V_{k})}\\\\ \\Leftrightarrow \\min J( Z) =\\frac{1}{2}\\operatorname{tr}\\left(\\frac{Z^{T} LZ}{Z^{T} DZ}\\right) \\end{array}\n$$\nwhere $L=D-W$ is the Laplace matrix.","source":"_posts/rayleigh-quotient.md","raw":"---\ntitle: Generalized Rayleigh quotient\ndate: 2021-10-23 20:31:00\nupdated: 2022-02-15 19:41:00\ncategories:\n- Science\ntags:\n- Math\n- Note\n---\n\nRayleigh quotient appears a lot in machine learning, quantum mechanics etc. This note details Rayleigh quotient and simple proofs as well as introduce some of its applications.\n\n<!-- more -->\n\n# Generalized Rayleigh quotient\n\nIn mathematics, the **Rayleigh quotient** for a given complex Hermitian matrix $M$ and nonzero vector $x$ is defined as ([Wiki](https://en.wikipedia.org/wiki/Rayleigh_quotient)):\n$$\nR( M,w) =\\frac{w^{\\dagger } Mw}{w^{\\dagger } w}\n$$\n\nIn this note, we aim at a generalized Rayleigh quotient, where vector ensemble $V$ (instead of $x$) is considered:\n$$\nR( M,V) =\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right)\n$$\n\nRemark that here quotient of matrices is well defined as $\\operatorname{tr}(AB^{-1})=\\operatorname{tr}(B^{-1}A)$. Also, if the denominator is $V^{\\dagger } PV$ instead of $V^{\\dagger } V$ where $P\\succ 0$, then a standard version can be recovered by transforming $V$ to $QV$ and $M$ to $\\left( Q^{\\dagger }\\right)^{-1} MQ^{-1}$, where $P=Q^{\\dagger } Q$.\n\nIn order to calculate the lower bound (resp. upper bound) of classical Rayleigh quotient, the easiest approach is to use Lagrange multipliers. Unfortunately, this method cannot generalized to $R(M,V)$. Nevertheless, as one may expect, generalized Rayleigh quotient depends on eigenvalues of $M$ just like its classical counterpart.\n\n**Theorem.** *For* $n\\times n$ *Hermitian* $M$ *and* $n\\times k$ *vector ensemble* $V$, *generalized Rayleigh quotient is bounded by*\n$$\n\\lambda _{1} +\\cdots +\\lambda _{k} \\leqslant R( M,V) \\leqslant \\lambda _{n-k+1} +\\cdots +\\lambda _{n}\n$$\n*The lower bound (resp. upper bound) is achieved when* $V$ *is the ensemble of eigenvectors of corresponding eigenvalues.*\n\nProof. First notice that we can assume $V$ is an ensemble of standard orthogonal vectors. If not, there exists unitary $U$ such that $V^{T} V=U^{\\dagger } DU$ where $D$ is a positive diagonal matrix. By properties of matrix trace,\n$$\n\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right) =\\operatorname{tr}\\left(\\frac{D^{-1/2} UV^{\\dagger } MVU^{\\dagger } D^{-1/2}}{D^{-1/2} UV^{\\dagger } VU^{\\dagger } D^{-1/2}}\\right)\n$$\nNow $VU^{\\dagger } D^{-1/2}$ is an ensemble of standard orthogonal vectors.\nBy the same reasoning one can assume Hermitian $M$ to be diagonal. Thus\n$$\nR( M,V) =\\operatorname{tr}\\left( V^{\\dagger } MV\\right) =\\sum _{j} \\lambda _{j}\\sum _{i} |v_{ij} |^{2}\n$$\nLet $r_{j} =\\sum _{i} |v_{ij} |^{2}$, then $r_{1} ,\\dotsc r_{n}$ are numbers in $[ 0,1]$ and sums to $k$. Thus $\\sum _{j} r_{j} \\lambda _{j}$ can be viewed as a (restricted) convex combination of $\\{\\lambda _{j}\\}_{j=1}^{n}$, which takes its lower bound (resp. upper bound) at $\\lambda _{1} +\\cdots +\\lambda _{k}$ (resp. $\\lambda _{n-k+1} +\\cdots +\\lambda _{n}$). That the corresponding $V$ is an ensemble of eigenvectors is easily checked.\n\n# Applications\n\n## Fisher's linear discriminant\n\n$$\n\\min J_{F}( w) =\\frac{w^{T} S_{b} w}{w^{T} S_{w} w}\n$$\n\n## Normalized cut\n\n$$\n\\begin{array}{l} \\min J( V_{1} ,\\dotsc ,V_{K}) =\\frac{1}{2}\\sum _{k=1}^{K}\\frac{w\\left( V_{k} ,\\overline{V_{k}}\\right)}{d( V_{k})}\\\\ \\Leftrightarrow \\min J( Z) =\\frac{1}{2}\\operatorname{tr}\\left(\\frac{Z^{T} LZ}{Z^{T} DZ}\\right) \\end{array}\n$$\nwhere $L=D-W$ is the Laplace matrix.","slug":"rayleigh-quotient","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqif000k2sff77byb8fh","content":"<p>Rayleigh quotient appears a lot in machine learning, quantum mechanics etc. This note details Rayleigh quotient and simple proofs as well as introduce some of its applications.</p>\n<span id=\"more\"></span>\n<h1 id=\"generalized-rayleigh-quotient\">Generalized Rayleigh quotient</h1>\n<p>In mathematics, the <strong>Rayleigh quotient</strong> for a given complex Hermitian matrix <span class=\"math inline\">\\(M\\)</span> and nonzero vector <span class=\"math inline\">\\(x\\)</span> is defined as (<a href=\"https://en.wikipedia.org/wiki/Rayleigh_quotient\">Wiki</a>): <span class=\"math display\">\\[\nR( M,w) =\\frac{w^{\\dagger } Mw}{w^{\\dagger } w}\n\\]</span></p>\n<p>In this note, we aim at a generalized Rayleigh quotient, where vector ensemble <span class=\"math inline\">\\(V\\)</span> (instead of <span class=\"math inline\">\\(x\\)</span>) is considered: <span class=\"math display\">\\[\nR( M,V) =\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right)\n\\]</span></p>\n<p>Remark that here quotient of matrices is well defined as <span class=\"math inline\">\\(\\operatorname{tr}(AB^{-1})=\\operatorname{tr}(B^{-1}A)\\)</span>. Also, if the denominator is <span class=\"math inline\">\\(V^{\\dagger } PV\\)</span> instead of <span class=\"math inline\">\\(V^{\\dagger } V\\)</span> where <span class=\"math inline\">\\(P\\succ 0\\)</span>, then a standard version can be recovered by transforming <span class=\"math inline\">\\(V\\)</span> to <span class=\"math inline\">\\(QV\\)</span> and <span class=\"math inline\">\\(M\\)</span> to <span class=\"math inline\">\\(\\left( Q^{\\dagger }\\right)^{-1} MQ^{-1}\\)</span>, where <span class=\"math inline\">\\(P=Q^{\\dagger } Q\\)</span>.</p>\n<p>In order to calculate the lower bound (resp. upper bound) of classical Rayleigh quotient, the easiest approach is to use Lagrange multipliers. Unfortunately, this method cannot generalized to <span class=\"math inline\">\\(R(M,V)\\)</span>. Nevertheless, as one may expect, generalized Rayleigh quotient depends on eigenvalues of <span class=\"math inline\">\\(M\\)</span> just like its classical counterpart.</p>\n<p><strong>Theorem.</strong> <em>For</em> <span class=\"math inline\">\\(n\\times n\\)</span> <em>Hermitian</em> <span class=\"math inline\">\\(M\\)</span> <em>and</em> <span class=\"math inline\">\\(n\\times k\\)</span> <em>vector ensemble</em> <span class=\"math inline\">\\(V\\)</span>, <em>generalized Rayleigh quotient is bounded by</em> <span class=\"math display\">\\[\n\\lambda _{1} +\\cdots +\\lambda _{k} \\leqslant R( M,V) \\leqslant \\lambda _{n-k+1} +\\cdots +\\lambda _{n}\n\\]</span> <em>The lower bound (resp. upper bound) is achieved when</em> <span class=\"math inline\">\\(V\\)</span> <em>is the ensemble of eigenvectors of corresponding eigenvalues.</em></p>\n<p>Proof. First notice that we can assume <span class=\"math inline\">\\(V\\)</span> is an ensemble of standard orthogonal vectors. If not, there exists unitary <span class=\"math inline\">\\(U\\)</span> such that <span class=\"math inline\">\\(V^{T} V=U^{\\dagger } DU\\)</span> where <span class=\"math inline\">\\(D\\)</span> is a positive diagonal matrix. By properties of matrix trace, <span class=\"math display\">\\[\n\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right) =\\operatorname{tr}\\left(\\frac{D^{-1/2} UV^{\\dagger } MVU^{\\dagger } D^{-1/2}}{D^{-1/2} UV^{\\dagger } VU^{\\dagger } D^{-1/2}}\\right)\n\\]</span> Now <span class=\"math inline\">\\(VU^{\\dagger } D^{-1/2}\\)</span> is an ensemble of standard orthogonal vectors. By the same reasoning one can assume Hermitian <span class=\"math inline\">\\(M\\)</span> to be diagonal. Thus <span class=\"math display\">\\[\nR( M,V) =\\operatorname{tr}\\left( V^{\\dagger } MV\\right) =\\sum _{j} \\lambda _{j}\\sum _{i} |v_{ij} |^{2}\n\\]</span> Let <span class=\"math inline\">\\(r_{j} =\\sum _{i} |v_{ij} |^{2}\\)</span>, then <span class=\"math inline\">\\(r_{1} ,\\dotsc r_{n}\\)</span> are numbers in <span class=\"math inline\">\\([ 0,1]\\)</span> and sums to <span class=\"math inline\">\\(k\\)</span>. Thus <span class=\"math inline\">\\(\\sum _{j} r_{j} \\lambda _{j}\\)</span> can be viewed as a (restricted) convex combination of <span class=\"math inline\">\\(\\{\\lambda _{j}\\}_{j=1}^{n}\\)</span>, which takes its lower bound (resp. upper bound) at <span class=\"math inline\">\\(\\lambda _{1} +\\cdots +\\lambda _{k}\\)</span> (resp. <span class=\"math inline\">\\(\\lambda _{n-k+1} +\\cdots +\\lambda _{n}\\)</span>). That the corresponding <span class=\"math inline\">\\(V\\)</span> is an ensemble of eigenvectors is easily checked.</p>\n<h1 id=\"applications\">Applications</h1>\n<h2 id=\"fishers-linear-discriminant\">Fisher's linear discriminant</h2>\n<p><span class=\"math display\">\\[\n\\min J_{F}( w) =\\frac{w^{T} S_{b} w}{w^{T} S_{w} w}\n\\]</span></p>\n<h2 id=\"normalized-cut\">Normalized cut</h2>\n<p><span class=\"math display\">\\[\n\\begin{array}{l} \\min J( V_{1} ,\\dotsc ,V_{K}) =\\frac{1}{2}\\sum _{k=1}^{K}\\frac{w\\left( V_{k} ,\\overline{V_{k}}\\right)}{d( V_{k})}\\\\ \\Leftrightarrow \\min J( Z) =\\frac{1}{2}\\operatorname{tr}\\left(\\frac{Z^{T} LZ}{Z^{T} DZ}\\right) \\end{array}\n\\]</span> where <span class=\"math inline\">\\(L=D-W\\)</span> is the Laplace matrix.</p>\n","site":{"data":{}},"excerpt":"<p>Rayleigh quotient appears a lot in machine learning, quantum mechanics etc. This note details Rayleigh quotient and simple proofs as well as introduce some of its applications.</p>","more":"<h1 id=\"generalized-rayleigh-quotient\">Generalized Rayleigh quotient</h1>\n<p>In mathematics, the <strong>Rayleigh quotient</strong> for a given complex Hermitian matrix <span class=\"math inline\">\\(M\\)</span> and nonzero vector <span class=\"math inline\">\\(x\\)</span> is defined as (<a href=\"https://en.wikipedia.org/wiki/Rayleigh_quotient\">Wiki</a>): <span class=\"math display\">\\[\nR( M,w) =\\frac{w^{\\dagger } Mw}{w^{\\dagger } w}\n\\]</span></p>\n<p>In this note, we aim at a generalized Rayleigh quotient, where vector ensemble <span class=\"math inline\">\\(V\\)</span> (instead of <span class=\"math inline\">\\(x\\)</span>) is considered: <span class=\"math display\">\\[\nR( M,V) =\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right)\n\\]</span></p>\n<p>Remark that here quotient of matrices is well defined as <span class=\"math inline\">\\(\\operatorname{tr}(AB^{-1})=\\operatorname{tr}(B^{-1}A)\\)</span>. Also, if the denominator is <span class=\"math inline\">\\(V^{\\dagger } PV\\)</span> instead of <span class=\"math inline\">\\(V^{\\dagger } V\\)</span> where <span class=\"math inline\">\\(P\\succ 0\\)</span>, then a standard version can be recovered by transforming <span class=\"math inline\">\\(V\\)</span> to <span class=\"math inline\">\\(QV\\)</span> and <span class=\"math inline\">\\(M\\)</span> to <span class=\"math inline\">\\(\\left( Q^{\\dagger }\\right)^{-1} MQ^{-1}\\)</span>, where <span class=\"math inline\">\\(P=Q^{\\dagger } Q\\)</span>.</p>\n<p>In order to calculate the lower bound (resp. upper bound) of classical Rayleigh quotient, the easiest approach is to use Lagrange multipliers. Unfortunately, this method cannot generalized to <span class=\"math inline\">\\(R(M,V)\\)</span>. Nevertheless, as one may expect, generalized Rayleigh quotient depends on eigenvalues of <span class=\"math inline\">\\(M\\)</span> just like its classical counterpart.</p>\n<p><strong>Theorem.</strong> <em>For</em> <span class=\"math inline\">\\(n\\times n\\)</span> <em>Hermitian</em> <span class=\"math inline\">\\(M\\)</span> <em>and</em> <span class=\"math inline\">\\(n\\times k\\)</span> <em>vector ensemble</em> <span class=\"math inline\">\\(V\\)</span>, <em>generalized Rayleigh quotient is bounded by</em> <span class=\"math display\">\\[\n\\lambda _{1} +\\cdots +\\lambda _{k} \\leqslant R( M,V) \\leqslant \\lambda _{n-k+1} +\\cdots +\\lambda _{n}\n\\]</span> <em>The lower bound (resp. upper bound) is achieved when</em> <span class=\"math inline\">\\(V\\)</span> <em>is the ensemble of eigenvectors of corresponding eigenvalues.</em></p>\n<p>Proof. First notice that we can assume <span class=\"math inline\">\\(V\\)</span> is an ensemble of standard orthogonal vectors. If not, there exists unitary <span class=\"math inline\">\\(U\\)</span> such that <span class=\"math inline\">\\(V^{T} V=U^{\\dagger } DU\\)</span> where <span class=\"math inline\">\\(D\\)</span> is a positive diagonal matrix. By properties of matrix trace, <span class=\"math display\">\\[\n\\operatorname{tr}\\left(\\frac{V^{\\dagger } MV}{V^{\\dagger } V}\\right) =\\operatorname{tr}\\left(\\frac{D^{-1/2} UV^{\\dagger } MVU^{\\dagger } D^{-1/2}}{D^{-1/2} UV^{\\dagger } VU^{\\dagger } D^{-1/2}}\\right)\n\\]</span> Now <span class=\"math inline\">\\(VU^{\\dagger } D^{-1/2}\\)</span> is an ensemble of standard orthogonal vectors. By the same reasoning one can assume Hermitian <span class=\"math inline\">\\(M\\)</span> to be diagonal. Thus <span class=\"math display\">\\[\nR( M,V) =\\operatorname{tr}\\left( V^{\\dagger } MV\\right) =\\sum _{j} \\lambda _{j}\\sum _{i} |v_{ij} |^{2}\n\\]</span> Let <span class=\"math inline\">\\(r_{j} =\\sum _{i} |v_{ij} |^{2}\\)</span>, then <span class=\"math inline\">\\(r_{1} ,\\dotsc r_{n}\\)</span> are numbers in <span class=\"math inline\">\\([ 0,1]\\)</span> and sums to <span class=\"math inline\">\\(k\\)</span>. Thus <span class=\"math inline\">\\(\\sum _{j} r_{j} \\lambda _{j}\\)</span> can be viewed as a (restricted) convex combination of <span class=\"math inline\">\\(\\{\\lambda _{j}\\}_{j=1}^{n}\\)</span>, which takes its lower bound (resp. upper bound) at <span class=\"math inline\">\\(\\lambda _{1} +\\cdots +\\lambda _{k}\\)</span> (resp. <span class=\"math inline\">\\(\\lambda _{n-k+1} +\\cdots +\\lambda _{n}\\)</span>). That the corresponding <span class=\"math inline\">\\(V\\)</span> is an ensemble of eigenvectors is easily checked.</p>\n<h1 id=\"applications\">Applications</h1>\n<h2 id=\"fishers-linear-discriminant\">Fisher's linear discriminant</h2>\n<p><span class=\"math display\">\\[\n\\min J_{F}( w) =\\frac{w^{T} S_{b} w}{w^{T} S_{w} w}\n\\]</span></p>\n<h2 id=\"normalized-cut\">Normalized cut</h2>\n<p><span class=\"math display\">\\[\n\\begin{array}{l} \\min J( V_{1} ,\\dotsc ,V_{K}) =\\frac{1}{2}\\sum _{k=1}^{K}\\frac{w\\left( V_{k} ,\\overline{V_{k}}\\right)}{d( V_{k})}\\\\ \\Leftrightarrow \\min J( Z) =\\frac{1}{2}\\operatorname{tr}\\left(\\frac{Z^{T} LZ}{Z^{T} DZ}\\right) \\end{array}\n\\]</span> where <span class=\"math inline\">\\(L=D-W\\)</span> is the Laplace matrix.</p>"},{"title":"Collection of insightful tutorials, articles and helpful resources","date":"2021-08-21T12:53:00.000Z","updated":"2021-12-13T09:01:00.000Z","_content":"\nTechnology & science related tutorials, articles, resources collected from the internet for future revisit.\n\n<!-- more -->\n\n# Statistics\n\n[Intuition: Exploration vs Exploitation](https://towardsdatascience.com/intuition-exploration-vs-exploitation-c645a1d37c7a)\n\nExplanation to \"exploration vs exploitation\" trade off in reinforcement learning etc.\n\nIntroduction to three strategies for multi-armed bandit problem: $\\varepsilon$-greedy, upper confidence bound, and Thompson sampling. The upper confidence bound strategy shows the trade off between exploration and exploitation.\n\n[A Tutorial on Bayesian Optimization](https://arxiv.org/abs/1807.02811)\n\nA thorough introduction to Bayesian optimization.\n\n[A Gentle Introduction to the BFGS Optimization Algorithm](https://machinelearningmastery.com/bfgs-optimization-in-python/)\n\nNewton's method = second order optimization method, which uses Hessian matrix to determine both direction and step size to move.\n\nQuasi Newton method, among which BFGS is the most popular, uses gradient to approximate inverse Hessian.\n\nBFGS need to store the inverse Hessian, while L-BFGS only need to store a simplified matrix. This could come in handy when there are millions of parameters.\n\n\n# Quantum chemistry\n\n⭐ [Quantum computational chemistry](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003) ([书签版下载](/attach/ChemReview.pdf))\n\nIntro to quantum computational chemistry, covering both classical computational chemistry and quantum version.\n\n[An Introduction to Hartree-Fock Molecular Orbital Theory](http://vergil.chemistry.gatech.edu/notes/hf-intro/hf-intro.pdf)\n\nEasy to read Hartree-Fock method introduction.\n\n[Full vs. Limited Configuration Interaction](https://expchem3.com/theory/ltdci/)\n\nBrief introduction to CI.\n\n[OpenFermion-Psi4](https://github.com/quantumlib/OpenFermion-Psi4)\n\nAn open source library for compiling and analyzing quantum algorithms which simulate fermionic systems. This plugin library allows the electronic structure package [Psi4](http://psicode.org/).\n\n[“Second quantization” (the occupation-number representation)](http://physics.gu.se/~tfkhj/OsloSecondQuant.pdf)\n\nMight be helpful.\n\n[The Jordan-Wigner and Bravyi-Kitaev Transforms](https://quantumai.google/openfermion/tutorials/jordan_wigner_and_bravyi_kitaev_transforms)\n\nEasy to read and understand. Part of the OpenFermion tutorial.\n\n[What is static correlation ?](https://mattermodeling.stackexchange.com/a/4409)\n\nElectronic configurations and static correlation.\n\n# Physics\n\n[Intuitive explanation for Liouville's theorem](https://www.quora.com/Dynamical-Systems/Dynamical-Systems-What-is-the-intuitive-explanation-for-Liouvilles-theorem)\n\nLiouville's theorem can be thought of as conservation of information in classical mechanics. The analog to Liouville's theorem in quantum mechanics is unitarity.\n\n# Python\n\n[Python multiprocessing](https://zetcode.com/python/multiprocessing/)\n\nAn introductory tutorial to process-based parallelism in Python.\n\n# HTML/CSS\n\n[How to correctly position context menus using pure CSS](https://mionskowski.pl/positioning-a-context-menu-using-pure-css)\n\nCSS code for correct position of a context menu.\n\n# Resources\n\n[LibreTexts - Free The Textbook](https://libretexts.org/)\n\nFree online textbooks.","source":"_posts/resource-collection.md","raw":"---\ntitle: Collection of insightful tutorials, articles and helpful resources\ndate: 2021-08-21 20:53:00\nupdated: 2021-12-13 17:01:00\ncategories:\n- Tech\ntags:\n- collection\n---\n\nTechnology & science related tutorials, articles, resources collected from the internet for future revisit.\n\n<!-- more -->\n\n# Statistics\n\n[Intuition: Exploration vs Exploitation](https://towardsdatascience.com/intuition-exploration-vs-exploitation-c645a1d37c7a)\n\nExplanation to \"exploration vs exploitation\" trade off in reinforcement learning etc.\n\nIntroduction to three strategies for multi-armed bandit problem: $\\varepsilon$-greedy, upper confidence bound, and Thompson sampling. The upper confidence bound strategy shows the trade off between exploration and exploitation.\n\n[A Tutorial on Bayesian Optimization](https://arxiv.org/abs/1807.02811)\n\nA thorough introduction to Bayesian optimization.\n\n[A Gentle Introduction to the BFGS Optimization Algorithm](https://machinelearningmastery.com/bfgs-optimization-in-python/)\n\nNewton's method = second order optimization method, which uses Hessian matrix to determine both direction and step size to move.\n\nQuasi Newton method, among which BFGS is the most popular, uses gradient to approximate inverse Hessian.\n\nBFGS need to store the inverse Hessian, while L-BFGS only need to store a simplified matrix. This could come in handy when there are millions of parameters.\n\n\n# Quantum chemistry\n\n⭐ [Quantum computational chemistry](https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003) ([书签版下载](/attach/ChemReview.pdf))\n\nIntro to quantum computational chemistry, covering both classical computational chemistry and quantum version.\n\n[An Introduction to Hartree-Fock Molecular Orbital Theory](http://vergil.chemistry.gatech.edu/notes/hf-intro/hf-intro.pdf)\n\nEasy to read Hartree-Fock method introduction.\n\n[Full vs. Limited Configuration Interaction](https://expchem3.com/theory/ltdci/)\n\nBrief introduction to CI.\n\n[OpenFermion-Psi4](https://github.com/quantumlib/OpenFermion-Psi4)\n\nAn open source library for compiling and analyzing quantum algorithms which simulate fermionic systems. This plugin library allows the electronic structure package [Psi4](http://psicode.org/).\n\n[“Second quantization” (the occupation-number representation)](http://physics.gu.se/~tfkhj/OsloSecondQuant.pdf)\n\nMight be helpful.\n\n[The Jordan-Wigner and Bravyi-Kitaev Transforms](https://quantumai.google/openfermion/tutorials/jordan_wigner_and_bravyi_kitaev_transforms)\n\nEasy to read and understand. Part of the OpenFermion tutorial.\n\n[What is static correlation ?](https://mattermodeling.stackexchange.com/a/4409)\n\nElectronic configurations and static correlation.\n\n# Physics\n\n[Intuitive explanation for Liouville's theorem](https://www.quora.com/Dynamical-Systems/Dynamical-Systems-What-is-the-intuitive-explanation-for-Liouvilles-theorem)\n\nLiouville's theorem can be thought of as conservation of information in classical mechanics. The analog to Liouville's theorem in quantum mechanics is unitarity.\n\n# Python\n\n[Python multiprocessing](https://zetcode.com/python/multiprocessing/)\n\nAn introductory tutorial to process-based parallelism in Python.\n\n# HTML/CSS\n\n[How to correctly position context menus using pure CSS](https://mionskowski.pl/positioning-a-context-menu-using-pure-css)\n\nCSS code for correct position of a context menu.\n\n# Resources\n\n[LibreTexts - Free The Textbook](https://libretexts.org/)\n\nFree online textbooks.","slug":"resource-collection","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqii000n2sff3fr36ycu","content":"<p>Technology &amp; science related tutorials, articles, resources collected from the internet for future revisit.</p>\n<span id=\"more\"></span>\n<h1 id=\"statistics\">Statistics</h1>\n<p><a href=\"https://towardsdatascience.com/intuition-exploration-vs-exploitation-c645a1d37c7a\">Intuition: Exploration vs Exploitation</a></p>\n<p>Explanation to \"exploration vs exploitation\" trade off in reinforcement learning etc.</p>\n<p>Introduction to three strategies for multi-armed bandit problem: <span class=\"math inline\">\\(\\varepsilon\\)</span>-greedy, upper confidence bound, and Thompson sampling. The upper confidence bound strategy shows the trade off between exploration and exploitation.</p>\n<p><a href=\"https://arxiv.org/abs/1807.02811\">A Tutorial on Bayesian Optimization</a></p>\n<p>A thorough introduction to Bayesian optimization.</p>\n<p><a href=\"https://machinelearningmastery.com/bfgs-optimization-in-python/\">A Gentle Introduction to the BFGS Optimization Algorithm</a></p>\n<p>Newton's method = second order optimization method, which uses Hessian matrix to determine both direction and step size to move.</p>\n<p>Quasi Newton method, among which BFGS is the most popular, uses gradient to approximate inverse Hessian.</p>\n<p>BFGS need to store the inverse Hessian, while L-BFGS only need to store a simplified matrix. This could come in handy when there are millions of parameters.</p>\n<h1 id=\"quantum-chemistry\">Quantum chemistry</h1>\n<p>⭐ <a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003\">Quantum computational chemistry</a> (<a href=\"/attach/ChemReview.pdf\">书签版下载</a>)</p>\n<p>Intro to quantum computational chemistry, covering both classical computational chemistry and quantum version.</p>\n<p><a href=\"http://vergil.chemistry.gatech.edu/notes/hf-intro/hf-intro.pdf\">An Introduction to Hartree-Fock Molecular Orbital Theory</a></p>\n<p>Easy to read Hartree-Fock method introduction.</p>\n<p><a href=\"https://expchem3.com/theory/ltdci/\">Full vs. Limited Configuration Interaction</a></p>\n<p>Brief introduction to CI.</p>\n<p><a href=\"https://github.com/quantumlib/OpenFermion-Psi4\">OpenFermion-Psi4</a></p>\n<p>An open source library for compiling and analyzing quantum algorithms which simulate fermionic systems. This plugin library allows the electronic structure package <a href=\"http://psicode.org/\">Psi4</a>.</p>\n<p><a href=\"http://physics.gu.se/~tfkhj/OsloSecondQuant.pdf\">“Second quantization” (the occupation-number representation)</a></p>\n<p>Might be helpful.</p>\n<p><a href=\"https://quantumai.google/openfermion/tutorials/jordan_wigner_and_bravyi_kitaev_transforms\">The Jordan-Wigner and Bravyi-Kitaev Transforms</a></p>\n<p>Easy to read and understand. Part of the OpenFermion tutorial.</p>\n<p><a href=\"https://mattermodeling.stackexchange.com/a/4409\">What is static correlation ?</a></p>\n<p>Electronic configurations and static correlation.</p>\n<h1 id=\"physics\">Physics</h1>\n<p><a href=\"https://www.quora.com/Dynamical-Systems/Dynamical-Systems-What-is-the-intuitive-explanation-for-Liouvilles-theorem\">Intuitive explanation for Liouville's theorem</a></p>\n<p>Liouville's theorem can be thought of as conservation of information in classical mechanics. The analog to Liouville's theorem in quantum mechanics is unitarity.</p>\n<h1 id=\"python\">Python</h1>\n<p><a href=\"https://zetcode.com/python/multiprocessing/\">Python multiprocessing</a></p>\n<p>An introductory tutorial to process-based parallelism in Python.</p>\n<h1 id=\"htmlcss\">HTML/CSS</h1>\n<p><a href=\"https://mionskowski.pl/positioning-a-context-menu-using-pure-css\">How to correctly position context menus using pure CSS</a></p>\n<p>CSS code for correct position of a context menu.</p>\n<h1 id=\"resources\">Resources</h1>\n<p><a href=\"https://libretexts.org/\">LibreTexts - Free The Textbook</a></p>\n<p>Free online textbooks.</p>\n","site":{"data":{}},"excerpt":"<p>Technology &amp; science related tutorials, articles, resources collected from the internet for future revisit.</p>","more":"<h1 id=\"statistics\">Statistics</h1>\n<p><a href=\"https://towardsdatascience.com/intuition-exploration-vs-exploitation-c645a1d37c7a\">Intuition: Exploration vs Exploitation</a></p>\n<p>Explanation to \"exploration vs exploitation\" trade off in reinforcement learning etc.</p>\n<p>Introduction to three strategies for multi-armed bandit problem: <span class=\"math inline\">\\(\\varepsilon\\)</span>-greedy, upper confidence bound, and Thompson sampling. The upper confidence bound strategy shows the trade off between exploration and exploitation.</p>\n<p><a href=\"https://arxiv.org/abs/1807.02811\">A Tutorial on Bayesian Optimization</a></p>\n<p>A thorough introduction to Bayesian optimization.</p>\n<p><a href=\"https://machinelearningmastery.com/bfgs-optimization-in-python/\">A Gentle Introduction to the BFGS Optimization Algorithm</a></p>\n<p>Newton's method = second order optimization method, which uses Hessian matrix to determine both direction and step size to move.</p>\n<p>Quasi Newton method, among which BFGS is the most popular, uses gradient to approximate inverse Hessian.</p>\n<p>BFGS need to store the inverse Hessian, while L-BFGS only need to store a simplified matrix. This could come in handy when there are millions of parameters.</p>\n<h1 id=\"quantum-chemistry\">Quantum chemistry</h1>\n<p>⭐ <a href=\"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.92.015003\">Quantum computational chemistry</a> (<a href=\"/attach/ChemReview.pdf\">书签版下载</a>)</p>\n<p>Intro to quantum computational chemistry, covering both classical computational chemistry and quantum version.</p>\n<p><a href=\"http://vergil.chemistry.gatech.edu/notes/hf-intro/hf-intro.pdf\">An Introduction to Hartree-Fock Molecular Orbital Theory</a></p>\n<p>Easy to read Hartree-Fock method introduction.</p>\n<p><a href=\"https://expchem3.com/theory/ltdci/\">Full vs. Limited Configuration Interaction</a></p>\n<p>Brief introduction to CI.</p>\n<p><a href=\"https://github.com/quantumlib/OpenFermion-Psi4\">OpenFermion-Psi4</a></p>\n<p>An open source library for compiling and analyzing quantum algorithms which simulate fermionic systems. This plugin library allows the electronic structure package <a href=\"http://psicode.org/\">Psi4</a>.</p>\n<p><a href=\"http://physics.gu.se/~tfkhj/OsloSecondQuant.pdf\">“Second quantization” (the occupation-number representation)</a></p>\n<p>Might be helpful.</p>\n<p><a href=\"https://quantumai.google/openfermion/tutorials/jordan_wigner_and_bravyi_kitaev_transforms\">The Jordan-Wigner and Bravyi-Kitaev Transforms</a></p>\n<p>Easy to read and understand. Part of the OpenFermion tutorial.</p>\n<p><a href=\"https://mattermodeling.stackexchange.com/a/4409\">What is static correlation ?</a></p>\n<p>Electronic configurations and static correlation.</p>\n<h1 id=\"physics\">Physics</h1>\n<p><a href=\"https://www.quora.com/Dynamical-Systems/Dynamical-Systems-What-is-the-intuitive-explanation-for-Liouvilles-theorem\">Intuitive explanation for Liouville's theorem</a></p>\n<p>Liouville's theorem can be thought of as conservation of information in classical mechanics. The analog to Liouville's theorem in quantum mechanics is unitarity.</p>\n<h1 id=\"python\">Python</h1>\n<p><a href=\"https://zetcode.com/python/multiprocessing/\">Python multiprocessing</a></p>\n<p>An introductory tutorial to process-based parallelism in Python.</p>\n<h1 id=\"htmlcss\">HTML/CSS</h1>\n<p><a href=\"https://mionskowski.pl/positioning-a-context-menu-using-pure-css\">How to correctly position context menus using pure CSS</a></p>\n<p>CSS code for correct position of a context menu.</p>\n<h1 id=\"resources\">Resources</h1>\n<p><a href=\"https://libretexts.org/\">LibreTexts - Free The Textbook</a></p>\n<p>Free online textbooks.</p>"},{"title":"Setup a site from scratch","date":"2021-09-10T15:05:00.000Z","updated":"2021-12-27T07:22:00.000Z","_content":"\nA record of mine setup of web hosting, domain etc.\n\n<!-- more -->\n\n# Domain\n\n## Purchase\n\n[GoDaddy](https://hk.godaddy.com/) supports Alipay.\n\n## DNS\n\nModify the `A` record:\n- name: `*`\n- value: `[IP ADDRESS]`\n\n## SSL\n\nI've followed this [tutorial](https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04) to install Let's Encrypt certificate but it didn't turn out well. It seems that install wildcard certificate using \"certbot\" requires some cumbersome steps. Nevertheless, this tutorial offers great instruction on how to configure your Ubuntu vps properly after deployment.\n\n[FreeSSL.cn](https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04) is somewhat straightforward to use. The drawback is that you have to renew your Let's Encrypt certificate every 3 months.\n![enter image description here](/attach/bcq26.png)\n\n# Fire wall\n\nFor Ubuntu 20.04\n```bash\nufw allow ssh\nufw allow http\nufw allow https\nufw enable\n```\n\n# Apache2\n\n## Installation\n```bash\n# Debian\nsudo apt install apache2\n# CentOS\nsudo yum install httpd\n```\n\n## Enable SSL\n\nFor Ubuntu:\n```bash\na2enmod ssl\n```\n\n## Disable directory listing\nOn Ubuntu, edit /etc/apache2/apache2.conf. In\n```\n<Directory /var/www/>\n        Options Indexes FollowSymLinks\n        AllowOverride None\n        Require all granted\n</Directory>\n```\nremove `Indexes`.\n\n## HTTP to HTTPS\nEnable module rewrite on Ubuntu:\n```sh\na2enmod rewrite\n```\nconf file\n```\n<VirtualHost *:80>\n\tRewriteEngine On\n\tRewriteCond %{HTTPS} off\n\tRewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI}\n</VirtualHost>\n```\n\n## CDN configure\nEnable module headers, rewrite on Ubuntu\n```\na2enmod headers rewrite\n```\nconf file\n```\nRewriteEngine On\nRewriteCond %{QUERY_STRING} (^|&)name=(.*?)(&|$)\nRewriteRule ^(.*)$ $1 [E=NAME:%2]\n\nHeader set Content-Disposition \"attachment\"\nHeader set Content-Disposition \"attachment; filename=\\\"%{NAME}e\\\"\" env=NAME\nHeader set Access-Control-Allow-Origin \"*\"\n```\nIn your html file, a download link should be\n```html\n<a href=\"https://cdn.example.com/fileid?name=info.txt\">click</a>\n```\n\n## Proxy\nEnable module proxy-http on Ubuntu:\n```\na2enmod proxy-http\n```\nconf file:\n```\n<Location />\n\tProxyPass http://127.0.0.1:8000/\n\tProxyPassReverse http://127.0.0.1:8000/\n</Location>\n```\n\n## [Code server](https://github.com/cdr/code-server)\nEnable module proxy-http, proxy-wstunnel, rewrite on Ubuntu:\n```\na2enmod proxy-http proxy-wstunnel rewrite\n```\nconf file:\n```\nRewriteEngine On\nRewriteCond %{HTTP:Upgrade} =websocket [NC]\nRewriteRule /(.*) ws://0.0.0.0:8080/$1 [P,L]\nRewriteCond %{HTTP:Upgrade} !=websocket [NC]\nRewriteRule /(.*) http://0.0.0.0:8080/$1 [P,L]\n\n<Location />\n\tProxyPass http://0.0.0.0:8080\n\tProxyPassReverse http://0.0.0.0:8080\n</Location>\n```\n\n## Jupyter notebook\n\nEnable module proxy-http, proxy-wstunnel, headers on Ubuntu:\n```\na2enmod proxy-http proxy-wstunnel headers\n```\nconf file:\n```\nRequestHeader set Origin \"http://127.0.0.1:8888\"\n\n<Location />\n\tProxyPass http://127.0.0.1:8888/\n\tProxyPassReverse http://127.0.0.1:8888/\n</Location>\n\n<Location /api/kernels>\n\tProxyPass ws://127.0.0.1:8888/api/kernels\n\tProxyPassReverse ws://127.0.0.1:8888/api/kernels\n</Location>\n```\n\n# Nginx\n\nNginx is faster and easier to config, compared to Apache.\n\n## Install\n\n```sh\nsudo apt install nginx\n```\n\nThe configuration folder: `/etc/nginx/`\n\n## Config ssl and http/https\n\nCreate `ssl.conf` and `https.conf` in `/etc/nginx/snippets`\n\nIn `ssl.conf`:\n```\nssl_session_timeout 1d;\nssl_session_cache shared:SSL:50m;\nssl_session_tickets off;\n\nssl_protocols TLSv1.2;\nssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384;\nssl_ecdh_curve secp384r1;\nssl_prefer_server_ciphers on;\n\nssl_stapling on;\nssl_stapling_verify on;\n\nadd_header Strict-Transport-Security \"max-age=15768000; includeSubdomains; preload\";\nadd_header X-Frame-Options DENY;\nadd_header X-Content-Type-Options nosniff;\n\nssl_certificate /path/to/fullchain.pem;\nssl_certificate_key /path/to/privkey.pem;\nssl_trusted_certificate /path/to/fullchain.pem;\n```\n\nIn `https.conf`:\n```\nlisten 80;\nlisten 443 ssl;\n\nif ($scheme != \"https\") {\n    return 301 https://$server_name$request_uri;\n}\n```\n\n## The default/fallback site\n\nModify `/etc/nginx/sites-available/default`\n\n```\nserver {\n    include snippets/ssl.conf;   \n\n    listen 80 default_server;\n    listen 443 ssl default_server;\n\n    server_name _;\n\n    return 404;\n}\n\nserver {\n    include snippets/ssl.conf;   \n    include snippets/https.conf;   \n\n    server_name example.com www.example.com;\n\n    add_header Content-Type \"text/plain; charset=utf-8\";\n    return 200 \"Hi there\";\n}\n```\n\n## A static site\n\nCreate `/etc/nginx/sites-available/test`\n\n```\nserver {\n    include snippets/ssl.conf;\n    include snippets/https.conf;\n\n    server_name test.example.com;\n    root /var/www/test;\n}\n```\n\nEnable it:\n```\nln -s /etc/nginx/sites-available/test /etc/nginx/sites-enabled\n```\n\nRefresh Nginx:\n```\nsudo service nginx reload\n```\n\n## Reverse proxy\n\n```\nserver {\n    include snippets/ssl.conf;\n    include snippets/https.conf;\n\n    server_name test.example.com;\n    root /var/www/test;\n\n    location /api/ {\n        proxy_pass http://127.0.0.1:8000/test/;\n    }\n}\n```\n\n## CDN\n\n```\nserver {\n    include snippets/ssl.conf;\n    include snippets/https.conf;\n\n    server_name cdn.example.com;\n    root /var/www/cdn;\n\n    location / {\n        add_header Access-Control-Allow-Origin *;\n        add_header Content-Disposition attachment;\n        if ($arg_name) {\n            add_header Content-Disposition \"attachment; filename=$arg_name\";\n        }\n    }\n}\n```","source":"_posts/setup-site.md","raw":"---\ntitle: Setup a site from scratch\ndate: 2021-09-10 23:05:00\nupdated: 2021-12-27 15:22:00\ncategories:\n- Tech\ntags:\n- Web\n- Server\n---\n\nA record of mine setup of web hosting, domain etc.\n\n<!-- more -->\n\n# Domain\n\n## Purchase\n\n[GoDaddy](https://hk.godaddy.com/) supports Alipay.\n\n## DNS\n\nModify the `A` record:\n- name: `*`\n- value: `[IP ADDRESS]`\n\n## SSL\n\nI've followed this [tutorial](https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04) to install Let's Encrypt certificate but it didn't turn out well. It seems that install wildcard certificate using \"certbot\" requires some cumbersome steps. Nevertheless, this tutorial offers great instruction on how to configure your Ubuntu vps properly after deployment.\n\n[FreeSSL.cn](https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04) is somewhat straightforward to use. The drawback is that you have to renew your Let's Encrypt certificate every 3 months.\n![enter image description here](/attach/bcq26.png)\n\n# Fire wall\n\nFor Ubuntu 20.04\n```bash\nufw allow ssh\nufw allow http\nufw allow https\nufw enable\n```\n\n# Apache2\n\n## Installation\n```bash\n# Debian\nsudo apt install apache2\n# CentOS\nsudo yum install httpd\n```\n\n## Enable SSL\n\nFor Ubuntu:\n```bash\na2enmod ssl\n```\n\n## Disable directory listing\nOn Ubuntu, edit /etc/apache2/apache2.conf. In\n```\n<Directory /var/www/>\n        Options Indexes FollowSymLinks\n        AllowOverride None\n        Require all granted\n</Directory>\n```\nremove `Indexes`.\n\n## HTTP to HTTPS\nEnable module rewrite on Ubuntu:\n```sh\na2enmod rewrite\n```\nconf file\n```\n<VirtualHost *:80>\n\tRewriteEngine On\n\tRewriteCond %{HTTPS} off\n\tRewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI}\n</VirtualHost>\n```\n\n## CDN configure\nEnable module headers, rewrite on Ubuntu\n```\na2enmod headers rewrite\n```\nconf file\n```\nRewriteEngine On\nRewriteCond %{QUERY_STRING} (^|&)name=(.*?)(&|$)\nRewriteRule ^(.*)$ $1 [E=NAME:%2]\n\nHeader set Content-Disposition \"attachment\"\nHeader set Content-Disposition \"attachment; filename=\\\"%{NAME}e\\\"\" env=NAME\nHeader set Access-Control-Allow-Origin \"*\"\n```\nIn your html file, a download link should be\n```html\n<a href=\"https://cdn.example.com/fileid?name=info.txt\">click</a>\n```\n\n## Proxy\nEnable module proxy-http on Ubuntu:\n```\na2enmod proxy-http\n```\nconf file:\n```\n<Location />\n\tProxyPass http://127.0.0.1:8000/\n\tProxyPassReverse http://127.0.0.1:8000/\n</Location>\n```\n\n## [Code server](https://github.com/cdr/code-server)\nEnable module proxy-http, proxy-wstunnel, rewrite on Ubuntu:\n```\na2enmod proxy-http proxy-wstunnel rewrite\n```\nconf file:\n```\nRewriteEngine On\nRewriteCond %{HTTP:Upgrade} =websocket [NC]\nRewriteRule /(.*) ws://0.0.0.0:8080/$1 [P,L]\nRewriteCond %{HTTP:Upgrade} !=websocket [NC]\nRewriteRule /(.*) http://0.0.0.0:8080/$1 [P,L]\n\n<Location />\n\tProxyPass http://0.0.0.0:8080\n\tProxyPassReverse http://0.0.0.0:8080\n</Location>\n```\n\n## Jupyter notebook\n\nEnable module proxy-http, proxy-wstunnel, headers on Ubuntu:\n```\na2enmod proxy-http proxy-wstunnel headers\n```\nconf file:\n```\nRequestHeader set Origin \"http://127.0.0.1:8888\"\n\n<Location />\n\tProxyPass http://127.0.0.1:8888/\n\tProxyPassReverse http://127.0.0.1:8888/\n</Location>\n\n<Location /api/kernels>\n\tProxyPass ws://127.0.0.1:8888/api/kernels\n\tProxyPassReverse ws://127.0.0.1:8888/api/kernels\n</Location>\n```\n\n# Nginx\n\nNginx is faster and easier to config, compared to Apache.\n\n## Install\n\n```sh\nsudo apt install nginx\n```\n\nThe configuration folder: `/etc/nginx/`\n\n## Config ssl and http/https\n\nCreate `ssl.conf` and `https.conf` in `/etc/nginx/snippets`\n\nIn `ssl.conf`:\n```\nssl_session_timeout 1d;\nssl_session_cache shared:SSL:50m;\nssl_session_tickets off;\n\nssl_protocols TLSv1.2;\nssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384;\nssl_ecdh_curve secp384r1;\nssl_prefer_server_ciphers on;\n\nssl_stapling on;\nssl_stapling_verify on;\n\nadd_header Strict-Transport-Security \"max-age=15768000; includeSubdomains; preload\";\nadd_header X-Frame-Options DENY;\nadd_header X-Content-Type-Options nosniff;\n\nssl_certificate /path/to/fullchain.pem;\nssl_certificate_key /path/to/privkey.pem;\nssl_trusted_certificate /path/to/fullchain.pem;\n```\n\nIn `https.conf`:\n```\nlisten 80;\nlisten 443 ssl;\n\nif ($scheme != \"https\") {\n    return 301 https://$server_name$request_uri;\n}\n```\n\n## The default/fallback site\n\nModify `/etc/nginx/sites-available/default`\n\n```\nserver {\n    include snippets/ssl.conf;   \n\n    listen 80 default_server;\n    listen 443 ssl default_server;\n\n    server_name _;\n\n    return 404;\n}\n\nserver {\n    include snippets/ssl.conf;   \n    include snippets/https.conf;   \n\n    server_name example.com www.example.com;\n\n    add_header Content-Type \"text/plain; charset=utf-8\";\n    return 200 \"Hi there\";\n}\n```\n\n## A static site\n\nCreate `/etc/nginx/sites-available/test`\n\n```\nserver {\n    include snippets/ssl.conf;\n    include snippets/https.conf;\n\n    server_name test.example.com;\n    root /var/www/test;\n}\n```\n\nEnable it:\n```\nln -s /etc/nginx/sites-available/test /etc/nginx/sites-enabled\n```\n\nRefresh Nginx:\n```\nsudo service nginx reload\n```\n\n## Reverse proxy\n\n```\nserver {\n    include snippets/ssl.conf;\n    include snippets/https.conf;\n\n    server_name test.example.com;\n    root /var/www/test;\n\n    location /api/ {\n        proxy_pass http://127.0.0.1:8000/test/;\n    }\n}\n```\n\n## CDN\n\n```\nserver {\n    include snippets/ssl.conf;\n    include snippets/https.conf;\n\n    server_name cdn.example.com;\n    root /var/www/cdn;\n\n    location / {\n        add_header Access-Control-Allow-Origin *;\n        add_header Content-Disposition attachment;\n        if ($arg_name) {\n            add_header Content-Disposition \"attachment; filename=$arg_name\";\n        }\n    }\n}\n```","slug":"setup-site","published":1,"_id":"cl16fwqik000p2sffbpwj2lkp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>A record of mine setup of web hosting, domain etc.</p>\n<span id=\"more\"></span>\n<h1 id=\"domain\">Domain</h1>\n<h2 id=\"purchase\">Purchase</h2>\n<p><a href=\"https://hk.godaddy.com/\">GoDaddy</a> supports Alipay.</p>\n<h2 id=\"dns\">DNS</h2>\n<p>Modify the <code>A</code> record: - name: <code>*</code> - value: <code>[IP ADDRESS]</code></p>\n<h2 id=\"ssl\">SSL</h2>\n<p>I've followed this <a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04\">tutorial</a> to install Let's Encrypt certificate but it didn't turn out well. It seems that install wildcard certificate using \"certbot\" requires some cumbersome steps. Nevertheless, this tutorial offers great instruction on how to configure your Ubuntu vps properly after deployment.</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04\">FreeSSL.cn</a> is somewhat straightforward to use. The drawback is that you have to renew your Let's Encrypt certificate every 3 months. <img src=\"/attach/bcq26.png\" alt=\"enter image description here\" /></p>\n<h1 id=\"fire-wall\">Fire wall</h1>\n<p>For Ubuntu 20.04 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ufw allow ssh</span><br><span class=\"line\">ufw allow http</span><br><span class=\"line\">ufw allow https</span><br><span class=\"line\">ufw <span class=\"built_in\">enable</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"apache2\">Apache2</h1>\n<h2 id=\"installation\">Installation</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Debian</span></span><br><span class=\"line\">sudo apt install apache2</span><br><span class=\"line\"><span class=\"comment\"># CentOS</span></span><br><span class=\"line\">sudo yum install httpd</span><br></pre></td></tr></table></figure>\n<h2 id=\"enable-ssl\">Enable SSL</h2>\n<p>For Ubuntu: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod ssl</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"disable-directory-listing\">Disable directory listing</h2>\n<p>On Ubuntu, edit /etc/apache2/apache2.conf. In <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;Directory /var/www/&gt;</span><br><span class=\"line\">        Options Indexes FollowSymLinks</span><br><span class=\"line\">        AllowOverride None</span><br><span class=\"line\">        Require all granted</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure> remove <code>Indexes</code>.</p>\n<h2 id=\"http-to-https\">HTTP to HTTPS</h2>\n<p>Enable module rewrite on Ubuntu: <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod rewrite</span><br></pre></td></tr></table></figure> conf file <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">\tRewriteEngine On</span><br><span class=\"line\">\tRewriteCond %&#123;HTTPS&#125; off</span><br><span class=\"line\">\tRewriteRule ^ https://%&#123;HTTP_HOST&#125;%&#123;REQUEST_URI&#125;</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"cdn-configure\">CDN configure</h2>\n<p>Enable module headers, rewrite on Ubuntu <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod headers rewrite</span><br></pre></td></tr></table></figure> conf file <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">RewriteEngine On</span><br><span class=\"line\">RewriteCond %&#123;QUERY_STRING&#125; (^|&amp;)name=(.*?)(&amp;|$)</span><br><span class=\"line\">RewriteRule ^(.*)$ $1 [E=NAME:%2]</span><br><span class=\"line\"></span><br><span class=\"line\">Header set Content-Disposition &quot;attachment&quot;</span><br><span class=\"line\">Header set Content-Disposition &quot;attachment; filename=\\&quot;%&#123;NAME&#125;e\\&quot;&quot; env=NAME</span><br><span class=\"line\">Header set Access-Control-Allow-Origin &quot;*&quot;</span><br></pre></td></tr></table></figure> In your html file, a download link should be <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.example.com/fileid?name=info.txt&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"proxy\">Proxy</h2>\n<p>Enable module proxy-http on Ubuntu: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod proxy-http</span><br></pre></td></tr></table></figure> conf file: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;Location /&gt;</span><br><span class=\"line\">\tProxyPass http://127.0.0.1:8000/</span><br><span class=\"line\">\tProxyPassReverse http://127.0.0.1:8000/</span><br><span class=\"line\">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"code-server\"><a href=\"https://github.com/cdr/code-server\">Code server</a></h2>\n<p>Enable module proxy-http, proxy-wstunnel, rewrite on Ubuntu: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod proxy-http proxy-wstunnel rewrite</span><br></pre></td></tr></table></figure> conf file: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">RewriteEngine On</span><br><span class=\"line\">RewriteCond %&#123;HTTP:Upgrade&#125; =websocket [NC]</span><br><span class=\"line\">RewriteRule /(.*) ws://0.0.0.0:8080/$1 [P,L]</span><br><span class=\"line\">RewriteCond %&#123;HTTP:Upgrade&#125; !=websocket [NC]</span><br><span class=\"line\">RewriteRule /(.*) http://0.0.0.0:8080/$1 [P,L]</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Location /&gt;</span><br><span class=\"line\">\tProxyPass http://0.0.0.0:8080</span><br><span class=\"line\">\tProxyPassReverse http://0.0.0.0:8080</span><br><span class=\"line\">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"jupyter-notebook\">Jupyter notebook</h2>\n<p>Enable module proxy-http, proxy-wstunnel, headers on Ubuntu: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod proxy-http proxy-wstunnel headers</span><br></pre></td></tr></table></figure> conf file: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">RequestHeader set Origin &quot;http://127.0.0.1:8888&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Location /&gt;</span><br><span class=\"line\">\tProxyPass http://127.0.0.1:8888/</span><br><span class=\"line\">\tProxyPassReverse http://127.0.0.1:8888/</span><br><span class=\"line\">&lt;/Location&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Location /api/kernels&gt;</span><br><span class=\"line\">\tProxyPass ws://127.0.0.1:8888/api/kernels</span><br><span class=\"line\">\tProxyPassReverse ws://127.0.0.1:8888/api/kernels</span><br><span class=\"line\">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"nginx\">Nginx</h1>\n<p>Nginx is faster and easier to config, compared to Apache.</p>\n<h2 id=\"install\">Install</h2>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install nginx</span><br></pre></td></tr></table></figure>\n<p>The configuration folder: <code>/etc/nginx/</code></p>\n<h2 id=\"config-ssl-and-httphttps\">Config ssl and http/https</h2>\n<p>Create <code>ssl.conf</code> and <code>https.conf</code> in <code>/etc/nginx/snippets</code></p>\n<p>In <code>ssl.conf</code>: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssl_session_timeout 1d;</span><br><span class=\"line\">ssl_session_cache shared:SSL:50m;</span><br><span class=\"line\">ssl_session_tickets off;</span><br><span class=\"line\"></span><br><span class=\"line\">ssl_protocols TLSv1.2;</span><br><span class=\"line\">ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384;</span><br><span class=\"line\">ssl_ecdh_curve secp384r1;</span><br><span class=\"line\">ssl_prefer_server_ciphers on;</span><br><span class=\"line\"></span><br><span class=\"line\">ssl_stapling on;</span><br><span class=\"line\">ssl_stapling_verify on;</span><br><span class=\"line\"></span><br><span class=\"line\">add_header Strict-Transport-Security &quot;max-age=15768000; includeSubdomains; preload&quot;;</span><br><span class=\"line\">add_header X-Frame-Options DENY;</span><br><span class=\"line\">add_header X-Content-Type-Options nosniff;</span><br><span class=\"line\"></span><br><span class=\"line\">ssl_certificate /path/to/fullchain.pem;</span><br><span class=\"line\">ssl_certificate_key /path/to/privkey.pem;</span><br><span class=\"line\">ssl_trusted_certificate /path/to/fullchain.pem;</span><br></pre></td></tr></table></figure></p>\n<p>In <code>https.conf</code>: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">listen 80;</span><br><span class=\"line\">listen 443 ssl;</span><br><span class=\"line\"></span><br><span class=\"line\">if ($scheme != &quot;https&quot;) &#123;</span><br><span class=\"line\">    return 301 https://$server_name$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"the-defaultfallback-site\">The default/fallback site</h2>\n<p>Modify <code>/etc/nginx/sites-available/default</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;   </span><br><span class=\"line\"></span><br><span class=\"line\">    listen 80 default_server;</span><br><span class=\"line\">    listen 443 ssl default_server;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name _;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 404;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;   </span><br><span class=\"line\">    include snippets/https.conf;   </span><br><span class=\"line\"></span><br><span class=\"line\">    server_name example.com www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    add_header Content-Type &quot;text/plain; charset=utf-8&quot;;</span><br><span class=\"line\">    return 200 &quot;Hi there&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"a-static-site\">A static site</h2>\n<p>Create <code>/etc/nginx/sites-available/test</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;</span><br><span class=\"line\">    include snippets/https.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name test.example.com;</span><br><span class=\"line\">    root /var/www/test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Enable it: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s /etc/nginx/sites-available/test /etc/nginx/sites-enabled</span><br></pre></td></tr></table></figure></p>\n<p>Refresh Nginx: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service nginx reload</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"reverse-proxy\">Reverse proxy</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;</span><br><span class=\"line\">    include snippets/https.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name test.example.com;</span><br><span class=\"line\">    root /var/www/test;</span><br><span class=\"line\"></span><br><span class=\"line\">    location /api/ &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:8000/test/;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"cdn\">CDN</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;</span><br><span class=\"line\">    include snippets/https.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name cdn.example.com;</span><br><span class=\"line\">    root /var/www/cdn;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        add_header Access-Control-Allow-Origin *;</span><br><span class=\"line\">        add_header Content-Disposition attachment;</span><br><span class=\"line\">        if ($arg_name) &#123;</span><br><span class=\"line\">            add_header Content-Disposition &quot;attachment; filename=$arg_name&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>A record of mine setup of web hosting, domain etc.</p>","more":"<h1 id=\"domain\">Domain</h1>\n<h2 id=\"purchase\">Purchase</h2>\n<p><a href=\"https://hk.godaddy.com/\">GoDaddy</a> supports Alipay.</p>\n<h2 id=\"dns\">DNS</h2>\n<p>Modify the <code>A</code> record: - name: <code>*</code> - value: <code>[IP ADDRESS]</code></p>\n<h2 id=\"ssl\">SSL</h2>\n<p>I've followed this <a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04\">tutorial</a> to install Let's Encrypt certificate but it didn't turn out well. It seems that install wildcard certificate using \"certbot\" requires some cumbersome steps. Nevertheless, this tutorial offers great instruction on how to configure your Ubuntu vps properly after deployment.</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04\">FreeSSL.cn</a> is somewhat straightforward to use. The drawback is that you have to renew your Let's Encrypt certificate every 3 months. <img src=\"/attach/bcq26.png\" alt=\"enter image description here\" /></p>\n<h1 id=\"fire-wall\">Fire wall</h1>\n<p>For Ubuntu 20.04 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ufw allow ssh</span><br><span class=\"line\">ufw allow http</span><br><span class=\"line\">ufw allow https</span><br><span class=\"line\">ufw <span class=\"built_in\">enable</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"apache2\">Apache2</h1>\n<h2 id=\"installation\">Installation</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Debian</span></span><br><span class=\"line\">sudo apt install apache2</span><br><span class=\"line\"><span class=\"comment\"># CentOS</span></span><br><span class=\"line\">sudo yum install httpd</span><br></pre></td></tr></table></figure>\n<h2 id=\"enable-ssl\">Enable SSL</h2>\n<p>For Ubuntu: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod ssl</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"disable-directory-listing\">Disable directory listing</h2>\n<p>On Ubuntu, edit /etc/apache2/apache2.conf. In <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;Directory /var/www/&gt;</span><br><span class=\"line\">        Options Indexes FollowSymLinks</span><br><span class=\"line\">        AllowOverride None</span><br><span class=\"line\">        Require all granted</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure> remove <code>Indexes</code>.</p>\n<h2 id=\"http-to-https\">HTTP to HTTPS</h2>\n<p>Enable module rewrite on Ubuntu: <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod rewrite</span><br></pre></td></tr></table></figure> conf file <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">\tRewriteEngine On</span><br><span class=\"line\">\tRewriteCond %&#123;HTTPS&#125; off</span><br><span class=\"line\">\tRewriteRule ^ https://%&#123;HTTP_HOST&#125;%&#123;REQUEST_URI&#125;</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"cdn-configure\">CDN configure</h2>\n<p>Enable module headers, rewrite on Ubuntu <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod headers rewrite</span><br></pre></td></tr></table></figure> conf file <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">RewriteEngine On</span><br><span class=\"line\">RewriteCond %&#123;QUERY_STRING&#125; (^|&amp;)name=(.*?)(&amp;|$)</span><br><span class=\"line\">RewriteRule ^(.*)$ $1 [E=NAME:%2]</span><br><span class=\"line\"></span><br><span class=\"line\">Header set Content-Disposition &quot;attachment&quot;</span><br><span class=\"line\">Header set Content-Disposition &quot;attachment; filename=\\&quot;%&#123;NAME&#125;e\\&quot;&quot; env=NAME</span><br><span class=\"line\">Header set Access-Control-Allow-Origin &quot;*&quot;</span><br></pre></td></tr></table></figure> In your html file, a download link should be <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.example.com/fileid?name=info.txt&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"proxy\">Proxy</h2>\n<p>Enable module proxy-http on Ubuntu: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod proxy-http</span><br></pre></td></tr></table></figure> conf file: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;Location /&gt;</span><br><span class=\"line\">\tProxyPass http://127.0.0.1:8000/</span><br><span class=\"line\">\tProxyPassReverse http://127.0.0.1:8000/</span><br><span class=\"line\">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"code-server\"><a href=\"https://github.com/cdr/code-server\">Code server</a></h2>\n<p>Enable module proxy-http, proxy-wstunnel, rewrite on Ubuntu: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod proxy-http proxy-wstunnel rewrite</span><br></pre></td></tr></table></figure> conf file: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">RewriteEngine On</span><br><span class=\"line\">RewriteCond %&#123;HTTP:Upgrade&#125; =websocket [NC]</span><br><span class=\"line\">RewriteRule /(.*) ws://0.0.0.0:8080/$1 [P,L]</span><br><span class=\"line\">RewriteCond %&#123;HTTP:Upgrade&#125; !=websocket [NC]</span><br><span class=\"line\">RewriteRule /(.*) http://0.0.0.0:8080/$1 [P,L]</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Location /&gt;</span><br><span class=\"line\">\tProxyPass http://0.0.0.0:8080</span><br><span class=\"line\">\tProxyPassReverse http://0.0.0.0:8080</span><br><span class=\"line\">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"jupyter-notebook\">Jupyter notebook</h2>\n<p>Enable module proxy-http, proxy-wstunnel, headers on Ubuntu: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a2enmod proxy-http proxy-wstunnel headers</span><br></pre></td></tr></table></figure> conf file: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">RequestHeader set Origin &quot;http://127.0.0.1:8888&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Location /&gt;</span><br><span class=\"line\">\tProxyPass http://127.0.0.1:8888/</span><br><span class=\"line\">\tProxyPassReverse http://127.0.0.1:8888/</span><br><span class=\"line\">&lt;/Location&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Location /api/kernels&gt;</span><br><span class=\"line\">\tProxyPass ws://127.0.0.1:8888/api/kernels</span><br><span class=\"line\">\tProxyPassReverse ws://127.0.0.1:8888/api/kernels</span><br><span class=\"line\">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"nginx\">Nginx</h1>\n<p>Nginx is faster and easier to config, compared to Apache.</p>\n<h2 id=\"install\">Install</h2>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install nginx</span><br></pre></td></tr></table></figure>\n<p>The configuration folder: <code>/etc/nginx/</code></p>\n<h2 id=\"config-ssl-and-httphttps\">Config ssl and http/https</h2>\n<p>Create <code>ssl.conf</code> and <code>https.conf</code> in <code>/etc/nginx/snippets</code></p>\n<p>In <code>ssl.conf</code>: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssl_session_timeout 1d;</span><br><span class=\"line\">ssl_session_cache shared:SSL:50m;</span><br><span class=\"line\">ssl_session_tickets off;</span><br><span class=\"line\"></span><br><span class=\"line\">ssl_protocols TLSv1.2;</span><br><span class=\"line\">ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384;</span><br><span class=\"line\">ssl_ecdh_curve secp384r1;</span><br><span class=\"line\">ssl_prefer_server_ciphers on;</span><br><span class=\"line\"></span><br><span class=\"line\">ssl_stapling on;</span><br><span class=\"line\">ssl_stapling_verify on;</span><br><span class=\"line\"></span><br><span class=\"line\">add_header Strict-Transport-Security &quot;max-age=15768000; includeSubdomains; preload&quot;;</span><br><span class=\"line\">add_header X-Frame-Options DENY;</span><br><span class=\"line\">add_header X-Content-Type-Options nosniff;</span><br><span class=\"line\"></span><br><span class=\"line\">ssl_certificate /path/to/fullchain.pem;</span><br><span class=\"line\">ssl_certificate_key /path/to/privkey.pem;</span><br><span class=\"line\">ssl_trusted_certificate /path/to/fullchain.pem;</span><br></pre></td></tr></table></figure></p>\n<p>In <code>https.conf</code>: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">listen 80;</span><br><span class=\"line\">listen 443 ssl;</span><br><span class=\"line\"></span><br><span class=\"line\">if ($scheme != &quot;https&quot;) &#123;</span><br><span class=\"line\">    return 301 https://$server_name$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"the-defaultfallback-site\">The default/fallback site</h2>\n<p>Modify <code>/etc/nginx/sites-available/default</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;   </span><br><span class=\"line\"></span><br><span class=\"line\">    listen 80 default_server;</span><br><span class=\"line\">    listen 443 ssl default_server;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name _;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 404;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;   </span><br><span class=\"line\">    include snippets/https.conf;   </span><br><span class=\"line\"></span><br><span class=\"line\">    server_name example.com www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    add_header Content-Type &quot;text/plain; charset=utf-8&quot;;</span><br><span class=\"line\">    return 200 &quot;Hi there&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"a-static-site\">A static site</h2>\n<p>Create <code>/etc/nginx/sites-available/test</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;</span><br><span class=\"line\">    include snippets/https.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name test.example.com;</span><br><span class=\"line\">    root /var/www/test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Enable it: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s /etc/nginx/sites-available/test /etc/nginx/sites-enabled</span><br></pre></td></tr></table></figure></p>\n<p>Refresh Nginx: <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service nginx reload</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"reverse-proxy\">Reverse proxy</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;</span><br><span class=\"line\">    include snippets/https.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name test.example.com;</span><br><span class=\"line\">    root /var/www/test;</span><br><span class=\"line\"></span><br><span class=\"line\">    location /api/ &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:8000/test/;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"cdn\">CDN</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    include snippets/ssl.conf;</span><br><span class=\"line\">    include snippets/https.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name cdn.example.com;</span><br><span class=\"line\">    root /var/www/cdn;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        add_header Access-Control-Allow-Origin *;</span><br><span class=\"line\">        add_header Content-Disposition attachment;</span><br><span class=\"line\">        if ($arg_name) &#123;</span><br><span class=\"line\">            add_header Content-Disposition &quot;attachment; filename=$arg_name&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Write a Vue 3 app","date":"2022-01-22T13:17:00.000Z","updated":"2022-03-17T06:10:00.000Z","_content":"\nUse yarn, vite, vue, vue-router, vuex, typescript, sass etc. to write an modern web app sufer fast.\n\n<!-- more -->\n\n# Vue\n\n## setup\n\n```bash\nyarn create vite my-vue-app --template vue-ts\n```\n\n## $event\n\n```html\n<vue-component @click=\"handle(someArg, $event)\" />\n```\n\n## Watch props in Composition API\n\n```ts\nwatch(() => props.someProp, (value, preValue) => {})\n```\n\n## Use element ref in Composition API\n\nIn setup function:\n```ts\nconst refDiv = ref(null)\n```\nIn HTML template:\n```html\n<div ref=\"refDiv\"/>\n```\n\n# SCSS\n\nInstall:\n```bash\nyarn add sass\n```\n\n## Register global variables and mixins:\n\nConfigure vite.config.js:\n```js\nexport default defineConfig({\n    css: {\n        preprocessorOptions: {\n            scss: {\n                additionalData: `@use \"./src/style/global.scss\" as *;`,\n            }\n        }\n    },\n})\n```\n\n# Vuex\n\n## Setup\n\nInstall by\n```bash\nyarn add vuex@4\n```\n\nCreate `src/store/index.ts`, content:\n```ts\nimport { InjectionKey } from 'vue'\nimport { createStore, useStore as baseUseStore, Store } from 'vuex'\n\ninterface IState { }\n\nexport const key: InjectionKey<Store<IState>> = Symbol()\n\nexport const store = createStore<IState>({\n    state: () => ({}),\n    getters: {\n        someGetter(state) { return 0 }\n    },\n    mutations: {\n        someMutation(state, payload) { }\n    },\n    actions: {\n        someAction({ state, dispatch }, payload) { }\n    }\n})\n\nexport function useStore() {\n    return baseUseStore(key)\n}\n```\n\nAdd in `src/main.ts`:\n```ts\n...\nimport { key, store } from \"./store\"\n\ncreateApp(App)\n    ...\n    .use(store, key)\n    .mount('#app')\n```\n\n## v-model\n\nVia setup computed.\n```ts\n<script lang='ts' setup>\nimport { computed } from 'vue'\nconst value = computed({\n    get() { return string }\n    set(newValue: string) {store.commit('setValue', value)}\n})\n</script>\n<template>\n    <input v-model=\"value\">\n</template>\n```\n\n# Element Plus\n\n## Setup\n\n> It seems that element-plus@2.0.1 depends on vue-router@4\n\nInstall by\n```sh\nyarn add element-plus\nyarn add -D unplugin-vue-components unplugin-auto-import\n```\n\nConfigure \"vite.config.ts\"\n```ts\nimport AutoImport from 'unplugin-auto-import/vite'\nimport Components from 'unplugin-vue-components/vite'\nimport { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n\nexport default {\n    plugins: [\n        // ...\n        AutoImport({\n            resolvers: [ElementPlusResolver()],\n        }),\n        Components({\n            resolvers: [ElementPlusResolver()],\n        }),\n      ],\n}\n```\n\n# Vue Router\n\n## Setup\n\nInstall by\n```sh\nyarn add vue-router@4\n```\n\n## Template\n\n```ts\nimport { createRouter, createWebHashHistory } from 'vue-router'\n\nconst routes = [\n    {\n        path: '/',\n        component: () => import('../views/Home.vue'),\n    },\n]\n\nconst router = createRouter({\n    history: createWebHashHistory(),\n    routes,\n    scrollBehavior(to, from, savedPosition) {\n        if (to.hash) {\n            return {\n                el: to.hash,\n                behavior: 'smooth',\n            }\n        }\n    }\n})\n\nexport default router\n```\n\n# Vite\n\n## Set \"base\" for subsites\n\nIf your app is an subsite, set `base` to be `\"\"`:\n\n```js\nexport default defineConfig({\n    base: '',\n}\n```\n\n## Set proxy\n\n```ts\nexport default defineConfig({\n    ...\n    server: {\n        proxy: {\n            '/api/': {\n                target: 'https://www.somesite.com/api/v1',\n                changeOrigin: true,\n                rewrite: (path) => path.replace(/^\\/api/, '')\n            }\n        }\n    }\n})\n```\n\n## Set alias \"@\"\n\nInstall dependencies:\n```bash\nyarn add @types/node -D\n```\n\nModify \"vite.config.js\":\n```js\nimport { resolve } from 'path'\nexport default defineConfig {\n    // ...\n    resolve: {\n        alias: {\n            \"@\": resolve(__dirname, 'src'), // 路径别名\n        }\n    }\n    // ...\n}\n```\n\nModify \"tsconfig.json\"\n```json\n{\n    \"compilerOptions\" : {\n        // ...\n        \"baseUrl\": \".\",\n        \"paths\": {\n            \"@/*\": [\"src/*\"]\n        }\n        // ...\n    }\n}\n```","source":"_posts/vue-app.md","raw":"---\ntitle: Write a Vue 3 app\ndate: 2022-01-22 21:17:00\nupdated: 2022-03-17 14:10:00\ncategories:\n- Tech\ntags:\n- Web\n- Vue\n---\n\nUse yarn, vite, vue, vue-router, vuex, typescript, sass etc. to write an modern web app sufer fast.\n\n<!-- more -->\n\n# Vue\n\n## setup\n\n```bash\nyarn create vite my-vue-app --template vue-ts\n```\n\n## $event\n\n```html\n<vue-component @click=\"handle(someArg, $event)\" />\n```\n\n## Watch props in Composition API\n\n```ts\nwatch(() => props.someProp, (value, preValue) => {})\n```\n\n## Use element ref in Composition API\n\nIn setup function:\n```ts\nconst refDiv = ref(null)\n```\nIn HTML template:\n```html\n<div ref=\"refDiv\"/>\n```\n\n# SCSS\n\nInstall:\n```bash\nyarn add sass\n```\n\n## Register global variables and mixins:\n\nConfigure vite.config.js:\n```js\nexport default defineConfig({\n    css: {\n        preprocessorOptions: {\n            scss: {\n                additionalData: `@use \"./src/style/global.scss\" as *;`,\n            }\n        }\n    },\n})\n```\n\n# Vuex\n\n## Setup\n\nInstall by\n```bash\nyarn add vuex@4\n```\n\nCreate `src/store/index.ts`, content:\n```ts\nimport { InjectionKey } from 'vue'\nimport { createStore, useStore as baseUseStore, Store } from 'vuex'\n\ninterface IState { }\n\nexport const key: InjectionKey<Store<IState>> = Symbol()\n\nexport const store = createStore<IState>({\n    state: () => ({}),\n    getters: {\n        someGetter(state) { return 0 }\n    },\n    mutations: {\n        someMutation(state, payload) { }\n    },\n    actions: {\n        someAction({ state, dispatch }, payload) { }\n    }\n})\n\nexport function useStore() {\n    return baseUseStore(key)\n}\n```\n\nAdd in `src/main.ts`:\n```ts\n...\nimport { key, store } from \"./store\"\n\ncreateApp(App)\n    ...\n    .use(store, key)\n    .mount('#app')\n```\n\n## v-model\n\nVia setup computed.\n```ts\n<script lang='ts' setup>\nimport { computed } from 'vue'\nconst value = computed({\n    get() { return string }\n    set(newValue: string) {store.commit('setValue', value)}\n})\n</script>\n<template>\n    <input v-model=\"value\">\n</template>\n```\n\n# Element Plus\n\n## Setup\n\n> It seems that element-plus@2.0.1 depends on vue-router@4\n\nInstall by\n```sh\nyarn add element-plus\nyarn add -D unplugin-vue-components unplugin-auto-import\n```\n\nConfigure \"vite.config.ts\"\n```ts\nimport AutoImport from 'unplugin-auto-import/vite'\nimport Components from 'unplugin-vue-components/vite'\nimport { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n\nexport default {\n    plugins: [\n        // ...\n        AutoImport({\n            resolvers: [ElementPlusResolver()],\n        }),\n        Components({\n            resolvers: [ElementPlusResolver()],\n        }),\n      ],\n}\n```\n\n# Vue Router\n\n## Setup\n\nInstall by\n```sh\nyarn add vue-router@4\n```\n\n## Template\n\n```ts\nimport { createRouter, createWebHashHistory } from 'vue-router'\n\nconst routes = [\n    {\n        path: '/',\n        component: () => import('../views/Home.vue'),\n    },\n]\n\nconst router = createRouter({\n    history: createWebHashHistory(),\n    routes,\n    scrollBehavior(to, from, savedPosition) {\n        if (to.hash) {\n            return {\n                el: to.hash,\n                behavior: 'smooth',\n            }\n        }\n    }\n})\n\nexport default router\n```\n\n# Vite\n\n## Set \"base\" for subsites\n\nIf your app is an subsite, set `base` to be `\"\"`:\n\n```js\nexport default defineConfig({\n    base: '',\n}\n```\n\n## Set proxy\n\n```ts\nexport default defineConfig({\n    ...\n    server: {\n        proxy: {\n            '/api/': {\n                target: 'https://www.somesite.com/api/v1',\n                changeOrigin: true,\n                rewrite: (path) => path.replace(/^\\/api/, '')\n            }\n        }\n    }\n})\n```\n\n## Set alias \"@\"\n\nInstall dependencies:\n```bash\nyarn add @types/node -D\n```\n\nModify \"vite.config.js\":\n```js\nimport { resolve } from 'path'\nexport default defineConfig {\n    // ...\n    resolve: {\n        alias: {\n            \"@\": resolve(__dirname, 'src'), // 路径别名\n        }\n    }\n    // ...\n}\n```\n\nModify \"tsconfig.json\"\n```json\n{\n    \"compilerOptions\" : {\n        // ...\n        \"baseUrl\": \".\",\n        \"paths\": {\n            \"@/*\": [\"src/*\"]\n        }\n        // ...\n    }\n}\n```","slug":"vue-app","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl16fwqiv00202sff8olz808p","content":"<p>Use yarn, vite, vue, vue-router, vuex, typescript, sass etc. to write an modern web app sufer fast.</p>\n<span id=\"more\"></span>\n<h1 id=\"vue\">Vue</h1>\n<h2 id=\"setup\">setup</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn create vite my-vue-app --template vue-ts</span><br></pre></td></tr></table></figure>\n<h2 id=\"event\">$event</h2>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">vue-component</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handle(someArg, $event)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"watch-props-in-composition-api\">Watch props in Composition API</h2>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(<span class=\"function\">() =&gt;</span> props.<span class=\"property\">someProp</span>, <span class=\"function\">(<span class=\"params\">value, preValue</span>) =&gt;</span> &#123;&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"use-element-ref-in-composition-api\">Use element ref in Composition API</h2>\n<p>In setup function: <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> refDiv = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>)</span><br></pre></td></tr></table></figure> In HTML template: <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;refDiv&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"scss\">SCSS</h1>\n<p>Install: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add sass</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"register-global-variables-and-mixins\">Register global variables and mixins:</h2>\n<p>Configure vite.config.js: <figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">css</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">preprocessorOptions</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">scss</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">additionalData</span>: <span class=\"string\">`@use &quot;./src/style/global.scss&quot; as *;`</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"vuex\">Vuex</h1>\n<h2 id=\"setup-1\">Setup</h2>\n<p>Install by <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add vuex@4</span><br></pre></td></tr></table></figure></p>\n<p>Create <code>src/store/index.ts</code>, content: <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">InjectionKey</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, useStore <span class=\"keyword\">as</span> baseUseStore, <span class=\"title class_\">Store</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IState</span> &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"attr\">key</span>: <span class=\"title class_\">InjectionKey</span>&lt;<span class=\"title class_\">Store</span>&lt;<span class=\"title class_\">IState</span>&gt;&gt; = <span class=\"title class_\">Symbol</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> store = createStore&lt;<span class=\"title class_\">IState</span>&gt;(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;),</span><br><span class=\"line\">    <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">someGetter</span>(<span class=\"params\">state</span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">someMutation</span>(<span class=\"params\">state, payload</span>) &#123; &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">someAction</span>(<span class=\"params\">&#123; state, dispatch &#125;, payload</span>) &#123; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">useStore</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">baseUseStore</span>(key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Add in <code>src/main.ts</code>: <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; key, store &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./store&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    .<span class=\"title function_\">use</span>(store, key)</span><br><span class=\"line\">    .<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"v-model\">v-model</h2>\n<p>Via setup computed. <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">&#x27;ts&#x27;</span> setup&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> value = <span class=\"title function_\">computed</span>(&#123;</span><br><span class=\"line\">    <span class=\"title function_\">get</span>(<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> <span class=\"built_in\">string</span> &#125;</span><br><span class=\"line\">    <span class=\"title function_\">set</span>(<span class=\"params\">newValue: <span class=\"built_in\">string</span></span>) &#123;store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setValue&#x27;</span>, value)&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"element-plus\">Element Plus</h1>\n<h2 id=\"setup-2\">Setup</h2>\n<blockquote>\n<p>It seems that element-plus@2.0.1 depends on vue-router@4</p>\n</blockquote>\n<p>Install by <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add element-plus</span><br><span class=\"line\">yarn add -D unplugin-vue-components unplugin-auto-import</span><br></pre></td></tr></table></figure></p>\n<p>Configure \"vite.config.ts\" <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">AutoImport</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Components</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">ElementPlusResolver</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">        <span class=\"title class_\">AutoImport</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">resolvers</span>: [<span class=\"title class_\">ElementPlusResolver</span>()],</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"title class_\">Components</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">resolvers</span>: [<span class=\"title class_\">ElementPlusResolver</span>()],</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"vue-router\">Vue Router</h1>\n<h2 id=\"setup-3\">Setup</h2>\n<p>Install by <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add vue-router@4</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"template\">Template</h2>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHashHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;../views/Home.vue&#x27;</span>),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">    routes,</span><br><span class=\"line\">    <span class=\"title function_\">scrollBehavior</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, savedPosition</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to.<span class=\"property\">hash</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">el</span>: to.<span class=\"property\">hash</span>,</span><br><span class=\"line\">                <span class=\"attr\">behavior</span>: <span class=\"string\">&#x27;smooth&#x27;</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure>\n<h1 id=\"vite\">Vite</h1>\n<h2 id=\"set-base-for-subsites\">Set \"base\" for subsites</h2>\n<p>If your app is an subsite, set <code>base</code> to be <code>\"\"</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">base</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"set-proxy\">Set proxy</h2>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">server</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;/api/&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">target</span>: <span class=\"string\">&#x27;https://www.somesite.com/api/v1&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                <span class=\"attr\">rewrite</span>: <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> path.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^\\/api/</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"set-alias\">Set alias \"@\"</h2>\n<p>Install dependencies: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add @types/node -D</span><br></pre></td></tr></table></figure></p>\n<p>Modify \"vite.config.js\": <figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; resolve &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;path&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> defineConfig &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@&quot;</span>: <span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;src&#x27;</span>), <span class=\"comment\">// 路径别名</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Modify \"tsconfig.json\" <figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;compilerOptions&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;baseUrl&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;paths&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;@/*&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;src/*&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>Use yarn, vite, vue, vue-router, vuex, typescript, sass etc. to write an modern web app sufer fast.</p>","more":"<h1 id=\"vue\">Vue</h1>\n<h2 id=\"setup\">setup</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn create vite my-vue-app --template vue-ts</span><br></pre></td></tr></table></figure>\n<h2 id=\"event\">$event</h2>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">vue-component</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handle(someArg, $event)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"watch-props-in-composition-api\">Watch props in Composition API</h2>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(<span class=\"function\">() =&gt;</span> props.<span class=\"property\">someProp</span>, <span class=\"function\">(<span class=\"params\">value, preValue</span>) =&gt;</span> &#123;&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"use-element-ref-in-composition-api\">Use element ref in Composition API</h2>\n<p>In setup function: <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> refDiv = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>)</span><br></pre></td></tr></table></figure> In HTML template: <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;refDiv&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"scss\">SCSS</h1>\n<p>Install: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add sass</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"register-global-variables-and-mixins\">Register global variables and mixins:</h2>\n<p>Configure vite.config.js: <figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">css</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">preprocessorOptions</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">scss</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">additionalData</span>: <span class=\"string\">`@use &quot;./src/style/global.scss&quot; as *;`</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"vuex\">Vuex</h1>\n<h2 id=\"setup-1\">Setup</h2>\n<p>Install by <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add vuex@4</span><br></pre></td></tr></table></figure></p>\n<p>Create <code>src/store/index.ts</code>, content: <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">InjectionKey</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, useStore <span class=\"keyword\">as</span> baseUseStore, <span class=\"title class_\">Store</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IState</span> &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"attr\">key</span>: <span class=\"title class_\">InjectionKey</span>&lt;<span class=\"title class_\">Store</span>&lt;<span class=\"title class_\">IState</span>&gt;&gt; = <span class=\"title class_\">Symbol</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> store = createStore&lt;<span class=\"title class_\">IState</span>&gt;(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;),</span><br><span class=\"line\">    <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">someGetter</span>(<span class=\"params\">state</span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">someMutation</span>(<span class=\"params\">state, payload</span>) &#123; &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">someAction</span>(<span class=\"params\">&#123; state, dispatch &#125;, payload</span>) &#123; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">useStore</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">baseUseStore</span>(key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Add in <code>src/main.ts</code>: <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; key, store &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./store&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    .<span class=\"title function_\">use</span>(store, key)</span><br><span class=\"line\">    .<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"v-model\">v-model</h2>\n<p>Via setup computed. <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">&#x27;ts&#x27;</span> setup&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> value = <span class=\"title function_\">computed</span>(&#123;</span><br><span class=\"line\">    <span class=\"title function_\">get</span>(<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> <span class=\"built_in\">string</span> &#125;</span><br><span class=\"line\">    <span class=\"title function_\">set</span>(<span class=\"params\">newValue: <span class=\"built_in\">string</span></span>) &#123;store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setValue&#x27;</span>, value)&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"element-plus\">Element Plus</h1>\n<h2 id=\"setup-2\">Setup</h2>\n<blockquote>\n<p>It seems that element-plus@2.0.1 depends on vue-router@4</p>\n</blockquote>\n<p>Install by <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add element-plus</span><br><span class=\"line\">yarn add -D unplugin-vue-components unplugin-auto-import</span><br></pre></td></tr></table></figure></p>\n<p>Configure \"vite.config.ts\" <figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">AutoImport</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Components</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">ElementPlusResolver</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">        <span class=\"title class_\">AutoImport</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">resolvers</span>: [<span class=\"title class_\">ElementPlusResolver</span>()],</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"title class_\">Components</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">resolvers</span>: [<span class=\"title class_\">ElementPlusResolver</span>()],</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"vue-router\">Vue Router</h1>\n<h2 id=\"setup-3\">Setup</h2>\n<p>Install by <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add vue-router@4</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"template\">Template</h2>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHashHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;../views/Home.vue&#x27;</span>),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">    routes,</span><br><span class=\"line\">    <span class=\"title function_\">scrollBehavior</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, savedPosition</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to.<span class=\"property\">hash</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">el</span>: to.<span class=\"property\">hash</span>,</span><br><span class=\"line\">                <span class=\"attr\">behavior</span>: <span class=\"string\">&#x27;smooth&#x27;</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure>\n<h1 id=\"vite\">Vite</h1>\n<h2 id=\"set-base-for-subsites\">Set \"base\" for subsites</h2>\n<p>If your app is an subsite, set <code>base</code> to be <code>\"\"</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">base</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"set-proxy\">Set proxy</h2>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">server</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;/api/&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">target</span>: <span class=\"string\">&#x27;https://www.somesite.com/api/v1&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                <span class=\"attr\">rewrite</span>: <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> path.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^\\/api/</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"set-alias\">Set alias \"@\"</h2>\n<p>Install dependencies: <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add @types/node -D</span><br></pre></td></tr></table></figure></p>\n<p>Modify \"vite.config.js\": <figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; resolve &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;path&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> defineConfig &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@&quot;</span>: <span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;src&#x27;</span>), <span class=\"comment\">// 路径别名</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Modify \"tsconfig.json\" <figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;compilerOptions&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;baseUrl&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;paths&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;@/*&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;src/*&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></p>"},{"title":"Barren Plateau (TBD)","date":"2022-03-26T07:25:53.000Z","updated":"2022-03-26T07:25:53.000Z","_content":"\nVQA may fail when cost function landscape is extremely flat, a phenomenon\ncalled Barren Plateaus. In this note, I list latest progress on this topic.\n\n<!-- more -->\n\n# Introduction\n\nVariational quantum algorithms (VQA) utilize an ansatz (or parameterized\nquantum circuits, PQC) $U( \\theta )$ to optimize a cost function\n$C( \\theta )$. The optimization iteration is performed by classical\noptimizors such as GD, BFGS, ADAM, etc. Gradient based optimizors have\nto query gradients at each iteration, which is done by measuring ansatz.\nOne possible reason this algorithm fail is cost function landscape being\nextremely flat. By Chernov bound it implies unacceptable number of\nmeasurements for evaluating a single gradients. To make it precise, we\nsay the cost function exhibits barren plateau (BP) for a parameter if\nvariance of respective partial derivative is exponentially small.\n\nA cost function $C( \\theta )$ of a $n$-qudit ansatz $U( \\theta )$ is\nsaid to have a barren plateau when training $\\theta _{i} \\in \\theta$, if\n$$\\underset{\\theta }{\\operatorname{Var}}[ \\partial _{\\theta _{i}} C( \\theta )] =\\frac{1}{\\exp( \\Omega ( n))}$$\n\nWe make a few remarks here:\n\n1.  In some text, BP is more strictly defined with respect to\n    $\\| \\nabla C\\|$.\n\n2.  By Chebyshev inequality, the probability of finding a point outside\n    of the BP area is exponentially small, which means random parameter\n    initialization is basically inapplicable.\n\nWe now make some conventions and give some simple insights. We may\nassume ansatz to consists of parameterized gates and unparameterized\ngates, and each parameterized gate takes the form  $\\exp( -i\\theta A)$,\nwhere $A$ is a Hermitian. Parameterized gates are assumed to be\nperiodical and smooth, with period $2\\pi$. Unless specially specified,\ncost function takes the form\n$\\operatorname{Tr}\\left( OU\\rho U^{\\dagger }\\right)$, and\n$\\mathbb{E}_{\\theta }[ C] =0$.\n\n**Lemma 1** For each $\\theta _{i} \\in \\theta$,\n$$\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =0$$\n\n*proof*. We decompose periodical real-valued function $C$ as Fourier\nseries\n$\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\exp( i\\theta \\cdotp \\mathbf{n})$. As\na consequence,\n\n$$\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\underset{\\theta }{\\mathbb{E}}\\left[ e^{i\\theta \\cdotp \\mathbf{n}}\\right]( in_{i}) =0\n\\tag*{$\\square$}$$\n\n\n# Scaling result\n\n# Mitigation algorithms\n\n# Appendix I: Integration on the unitary group\n\n## Monomial integration formula\n\nA general formula[^Col02] of integral of a $( t,t)$-order monomial over the\nunitary group $U( d)$ of dimension $d$ can be represented by Weingarten\nfunction\n$\\operatorname{Wg}$:\n\n$$\n\\int _{U( d)} U_{i_{1} j_{1}} \\cdots U_{i_{t} j_{t}} U_{i'_{1} j'_{1}}^{*} \\cdots U_{i'_{t} j'_{t}}^{*} dU=\\sum _{\\sigma ,\\tau \\in S( t)} \\delta _{i_{1} i'_{\\sigma ( 1)}} \\cdots \\delta _{i_{t} i'_{\\sigma ( t)}} \\delta _{j_{1} j'_{\\tau ( 1)}} \\cdots \\delta _{j_{t} j'_{\\tau ( t)}}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)\n$$\n\nThe exact form of Weingarten function is\n$$\\operatorname{Wg}_{d}^{t}( \\pi ) =\\frac{1}{t!^{2}}\\sum _{\\lambda \\vdash t}\\frac{\\chi ^{\\lambda }( 1)^{2} \\chi ^{\\lambda }( \\pi )}{s_{\\lambda ,d}( 1)}$$\nwhere the sum is over all integer partition $\\lambda$ of $q$,\n$\\chi ^{\\lambda }$ is the character of $S( t)$ indexed by $\\lambda$, and\n$s_{\\lambda ,d}$ is the Schur function.\n\nThere are a few remarks on this formula:\n\n1.  Here we follow convention in the quantum mechanics and $U^{*}$\n    represents conjugate of $U$, not conjugate transpose. The latter is\n    written as $U^{\\dagger }$.\n\n2.  The value of Weingarten function only depends on the conjugacy class\n    of a permutation, thus the term\n    $\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)$ in (1)\n    can be replaced with\n    $\\operatorname{Wg}_{d}^{t}\\left( \\sigma ^{-1} \\tau \\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau \\sigma ^{-1}\\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau ^{-1} \\sigma \\right)$.\n\n3.  The measure of $U( d)$ is the unique normalized Haar measure. In\n    this sense, such integrals can be identified as expectation:\n    $\\int _{U( d)} f( U) dU=\\mathbb{E}_{U}[ f( U)]$. It also implies\n    that (1) is in fact a $( t,t)$th (or simply $t$th) moment.\n\n4.  The integral vanishes if the order $( t,t')$ is not balanced.\n\n5.  The integral vanishes if row (column) indices and conjugate row\n    (column) indices do not pair up.\n\nPackages and softwares:\n\n1.  IntU[^PM17]: symbolic inegration, on Mathematica.\n\n## Useful identities\n\n**First moment**\n$$\\int _{U( d)} U_{i_{1} j_{1}} U_{i'_{1} j'_{1}}^{*} dU=\\frac{\\delta _{i_{1} i'_{1}} \\delta _{j_{1} j'_{1}}}{d}$$\n\n**Second moment**\n$$\\begin{gathered}\n\\int _{U( d)} U_{i_{1} j_{1}} U_{i_{2} j_{2}} U_{i'_{1} j'_{1}}^{*} U_{i'_{2} j'_{2}}^{*} dU\\\\\n=\\frac{\\delta _{i_{1} i'_{1}} \\delta _{i_{2} i'_{2}} \\delta _{j_{1} j'_{1}} \\delta _{j_{2} j'_{2}} +\\delta _{i_{1} i'_{2}} \\delta _{i_{2} i'_{1}} \\delta _{j_{1} j'_{2}} \\delta _{j_{2} j'_{1}}}{d^{2} -1} -\\frac{\\delta _{i_{1} i'_{1}} \\delta _{i_{2} i'_{2}} \\delta _{j_{1} j'_{2}} \\delta _{j_{2} j'_{1}} +\\delta _{i_{1} i'_{2}} \\delta _{i_{2} i'_{1}} \\delta _{j_{1} j'_{1}} \\delta _{j_{2} j'_{2}}}{d\\left( d^{2} -1\\right)}\\end{gathered}$$\n\n**Equivalent form of** (1)\n$$\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU=\\sum _{\\sigma ,\\tau \\in S( t)}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right) |\\sigma _{d}^{t} \\rangle \\langle \\tau _{d}^{t} |$$\nwhere $|\\pi _{d}^{t} \\rangle$ is the non-normalized *permutation state*\n$$|\\pi _{d}^{t} \\rangle =\\sum _{i_{1} ,\\dotsc ,i_{t} \\in [ d]} |i_{\\pi ( 1)} ,\\dotsc ,i_{\\pi ( t)} \\rangle |i_{1} ,\\dotsc ,i_{t} \\rangle$$\n\n# Appendix II: Quantum desgin\n\n## Definition\n\n**Definition 2** A **unitary t-design** is an ensamble of unitaries $\\{V_{i} ,p_{i}\\}$\nwhich is indistinguishable from Haar measure, by observing up to $t$th\nmoment. Precisely, for any $( t,t)$-polynomial $P$,\n$$\\sum _{i} p_{i} P( V_{i}) =\\int _{U( d)} P( U) dU$$\nor equivalently\n$$\\sum _{i} p_{i} V_{i}^{\\otimes t} \\otimes \\left( V_{i}^{*}\\right)^{\\otimes t} =\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU$$\n\nWe remark that $M^{\\otimes t} \\otimes \\left( M^{*}\\right)^{\\otimes t}$\nis refered to as $t$**th moment superoperator**, sending\n$\\rho ^{\\otimes t}$ to $\\left( M\\rho M^{\\dagger }\\right)^{\\otimes t}$.\n\nQuantum design share the same name with block design. In fact, they are\nsimilar in the sense of randomness. A **block t-design** is an\nassignment of blocks ($k$-subsets) in $[ N]$, such that for all\n$i=1,2,\\dotsc ,t$, every two $i$-tuples lie in the same number of\nblocks. It turn out that, if machine A randomly output $k$ different\nnumbers from $[ N]$ while machine B randomly output a block from a block\nt-design, these two machine is indistinguishable if observer is only\nallowed to read $t$ elements from outputs.\n\n[^Col02]: Collins, B. (2002). Moments and Cumulants of Polynomial random variables on unitary groups, the Itzykson-Zuber integral and free probability. ArXiv. https://doi.org/10.48550/ARXIV.MATH-PH/0205010\n[^PM17]: Puchała, Z., & Miszczak, J. A. (2017). Symbolic integration with respect to the Haar measure on the unitary groups. Bulletin of the Polish Academy of Sciences Technical Sciences, 65(1), 21–27. https://doi.org/10.1515/bpasts-2017-0003","source":"_posts/barren-plateau.md","raw":"---\ntitle: Barren Plateau (TBD)\ndate: 2022-03-26 15:25:53\nupdated: 2022-03-26 15:25:53\ncategories:\n- Science\ntags:\n- Quantum\n---\n\nVQA may fail when cost function landscape is extremely flat, a phenomenon\ncalled Barren Plateaus. In this note, I list latest progress on this topic.\n\n<!-- more -->\n\n# Introduction\n\nVariational quantum algorithms (VQA) utilize an ansatz (or parameterized\nquantum circuits, PQC) $U( \\theta )$ to optimize a cost function\n$C( \\theta )$. The optimization iteration is performed by classical\noptimizors such as GD, BFGS, ADAM, etc. Gradient based optimizors have\nto query gradients at each iteration, which is done by measuring ansatz.\nOne possible reason this algorithm fail is cost function landscape being\nextremely flat. By Chernov bound it implies unacceptable number of\nmeasurements for evaluating a single gradients. To make it precise, we\nsay the cost function exhibits barren plateau (BP) for a parameter if\nvariance of respective partial derivative is exponentially small.\n\nA cost function $C( \\theta )$ of a $n$-qudit ansatz $U( \\theta )$ is\nsaid to have a barren plateau when training $\\theta _{i} \\in \\theta$, if\n$$\\underset{\\theta }{\\operatorname{Var}}[ \\partial _{\\theta _{i}} C( \\theta )] =\\frac{1}{\\exp( \\Omega ( n))}$$\n\nWe make a few remarks here:\n\n1.  In some text, BP is more strictly defined with respect to\n    $\\| \\nabla C\\|$.\n\n2.  By Chebyshev inequality, the probability of finding a point outside\n    of the BP area is exponentially small, which means random parameter\n    initialization is basically inapplicable.\n\nWe now make some conventions and give some simple insights. We may\nassume ansatz to consists of parameterized gates and unparameterized\ngates, and each parameterized gate takes the form  $\\exp( -i\\theta A)$,\nwhere $A$ is a Hermitian. Parameterized gates are assumed to be\nperiodical and smooth, with period $2\\pi$. Unless specially specified,\ncost function takes the form\n$\\operatorname{Tr}\\left( OU\\rho U^{\\dagger }\\right)$, and\n$\\mathbb{E}_{\\theta }[ C] =0$.\n\n**Lemma 1** For each $\\theta _{i} \\in \\theta$,\n$$\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =0$$\n\n*proof*. We decompose periodical real-valued function $C$ as Fourier\nseries\n$\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\exp( i\\theta \\cdotp \\mathbf{n})$. As\na consequence,\n\n$$\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\underset{\\theta }{\\mathbb{E}}\\left[ e^{i\\theta \\cdotp \\mathbf{n}}\\right]( in_{i}) =0\n\\tag*{$\\square$}$$\n\n\n# Scaling result\n\n# Mitigation algorithms\n\n# Appendix I: Integration on the unitary group\n\n## Monomial integration formula\n\nA general formula[^Col02] of integral of a $( t,t)$-order monomial over the\nunitary group $U( d)$ of dimension $d$ can be represented by Weingarten\nfunction\n$\\operatorname{Wg}$:\n\n$$\n\\int _{U( d)} U_{i_{1} j_{1}} \\cdots U_{i_{t} j_{t}} U_{i'_{1} j'_{1}}^{*} \\cdots U_{i'_{t} j'_{t}}^{*} dU=\\sum _{\\sigma ,\\tau \\in S( t)} \\delta _{i_{1} i'_{\\sigma ( 1)}} \\cdots \\delta _{i_{t} i'_{\\sigma ( t)}} \\delta _{j_{1} j'_{\\tau ( 1)}} \\cdots \\delta _{j_{t} j'_{\\tau ( t)}}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)\n$$\n\nThe exact form of Weingarten function is\n$$\\operatorname{Wg}_{d}^{t}( \\pi ) =\\frac{1}{t!^{2}}\\sum _{\\lambda \\vdash t}\\frac{\\chi ^{\\lambda }( 1)^{2} \\chi ^{\\lambda }( \\pi )}{s_{\\lambda ,d}( 1)}$$\nwhere the sum is over all integer partition $\\lambda$ of $q$,\n$\\chi ^{\\lambda }$ is the character of $S( t)$ indexed by $\\lambda$, and\n$s_{\\lambda ,d}$ is the Schur function.\n\nThere are a few remarks on this formula:\n\n1.  Here we follow convention in the quantum mechanics and $U^{*}$\n    represents conjugate of $U$, not conjugate transpose. The latter is\n    written as $U^{\\dagger }$.\n\n2.  The value of Weingarten function only depends on the conjugacy class\n    of a permutation, thus the term\n    $\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)$ in (1)\n    can be replaced with\n    $\\operatorname{Wg}_{d}^{t}\\left( \\sigma ^{-1} \\tau \\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau \\sigma ^{-1}\\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau ^{-1} \\sigma \\right)$.\n\n3.  The measure of $U( d)$ is the unique normalized Haar measure. In\n    this sense, such integrals can be identified as expectation:\n    $\\int _{U( d)} f( U) dU=\\mathbb{E}_{U}[ f( U)]$. It also implies\n    that (1) is in fact a $( t,t)$th (or simply $t$th) moment.\n\n4.  The integral vanishes if the order $( t,t')$ is not balanced.\n\n5.  The integral vanishes if row (column) indices and conjugate row\n    (column) indices do not pair up.\n\nPackages and softwares:\n\n1.  IntU[^PM17]: symbolic inegration, on Mathematica.\n\n## Useful identities\n\n**First moment**\n$$\\int _{U( d)} U_{i_{1} j_{1}} U_{i'_{1} j'_{1}}^{*} dU=\\frac{\\delta _{i_{1} i'_{1}} \\delta _{j_{1} j'_{1}}}{d}$$\n\n**Second moment**\n$$\\begin{gathered}\n\\int _{U( d)} U_{i_{1} j_{1}} U_{i_{2} j_{2}} U_{i'_{1} j'_{1}}^{*} U_{i'_{2} j'_{2}}^{*} dU\\\\\n=\\frac{\\delta _{i_{1} i'_{1}} \\delta _{i_{2} i'_{2}} \\delta _{j_{1} j'_{1}} \\delta _{j_{2} j'_{2}} +\\delta _{i_{1} i'_{2}} \\delta _{i_{2} i'_{1}} \\delta _{j_{1} j'_{2}} \\delta _{j_{2} j'_{1}}}{d^{2} -1} -\\frac{\\delta _{i_{1} i'_{1}} \\delta _{i_{2} i'_{2}} \\delta _{j_{1} j'_{2}} \\delta _{j_{2} j'_{1}} +\\delta _{i_{1} i'_{2}} \\delta _{i_{2} i'_{1}} \\delta _{j_{1} j'_{1}} \\delta _{j_{2} j'_{2}}}{d\\left( d^{2} -1\\right)}\\end{gathered}$$\n\n**Equivalent form of** (1)\n$$\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU=\\sum _{\\sigma ,\\tau \\in S( t)}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right) |\\sigma _{d}^{t} \\rangle \\langle \\tau _{d}^{t} |$$\nwhere $|\\pi _{d}^{t} \\rangle$ is the non-normalized *permutation state*\n$$|\\pi _{d}^{t} \\rangle =\\sum _{i_{1} ,\\dotsc ,i_{t} \\in [ d]} |i_{\\pi ( 1)} ,\\dotsc ,i_{\\pi ( t)} \\rangle |i_{1} ,\\dotsc ,i_{t} \\rangle$$\n\n# Appendix II: Quantum desgin\n\n## Definition\n\n**Definition 2** A **unitary t-design** is an ensamble of unitaries $\\{V_{i} ,p_{i}\\}$\nwhich is indistinguishable from Haar measure, by observing up to $t$th\nmoment. Precisely, for any $( t,t)$-polynomial $P$,\n$$\\sum _{i} p_{i} P( V_{i}) =\\int _{U( d)} P( U) dU$$\nor equivalently\n$$\\sum _{i} p_{i} V_{i}^{\\otimes t} \\otimes \\left( V_{i}^{*}\\right)^{\\otimes t} =\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU$$\n\nWe remark that $M^{\\otimes t} \\otimes \\left( M^{*}\\right)^{\\otimes t}$\nis refered to as $t$**th moment superoperator**, sending\n$\\rho ^{\\otimes t}$ to $\\left( M\\rho M^{\\dagger }\\right)^{\\otimes t}$.\n\nQuantum design share the same name with block design. In fact, they are\nsimilar in the sense of randomness. A **block t-design** is an\nassignment of blocks ($k$-subsets) in $[ N]$, such that for all\n$i=1,2,\\dotsc ,t$, every two $i$-tuples lie in the same number of\nblocks. It turn out that, if machine A randomly output $k$ different\nnumbers from $[ N]$ while machine B randomly output a block from a block\nt-design, these two machine is indistinguishable if observer is only\nallowed to read $t$ elements from outputs.\n\n[^Col02]: Collins, B. (2002). Moments and Cumulants of Polynomial random variables on unitary groups, the Itzykson-Zuber integral and free probability. ArXiv. https://doi.org/10.48550/ARXIV.MATH-PH/0205010\n[^PM17]: Puchała, Z., & Miszczak, J. A. (2017). Symbolic integration with respect to the Haar measure on the unitary groups. Bulletin of the Polish Academy of Sciences Technical Sciences, 65(1), 21–27. https://doi.org/10.1515/bpasts-2017-0003","slug":"barren-plateau","published":1,"_id":"cl17jfzn700005fff5q5h3ky4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>VQA may fail when cost function landscape is extremely flat, a phenomenon called Barren Plateaus. In this note, I list latest progress on this topic.</p>\n<span id=\"more\"></span>\n<h1 id=\"introduction\">Introduction</h1>\n<p>Variational quantum algorithms (VQA) utilize an ansatz (or parameterized quantum circuits, PQC) <span class=\"math inline\">\\(U( \\theta )\\)</span> to optimize a cost function <span class=\"math inline\">\\(C( \\theta )\\)</span>. The optimization iteration is performed by classical optimizors such as GD, BFGS, ADAM, etc. Gradient based optimizors have to query gradients at each iteration, which is done by measuring ansatz. One possible reason this algorithm fail is cost function landscape being extremely flat. By Chernov bound it implies unacceptable number of measurements for evaluating a single gradients. To make it precise, we say the cost function exhibits barren plateau (BP) for a parameter if variance of respective partial derivative is exponentially small.</p>\n<p>A cost function <span class=\"math inline\">\\(C( \\theta )\\)</span> of a <span class=\"math inline\">\\(n\\)</span>-qudit ansatz <span class=\"math inline\">\\(U( \\theta )\\)</span> is said to have a barren plateau when training <span class=\"math inline\">\\(\\theta _{i} \\in \\theta\\)</span>, if <span class=\"math display\">\\[\\underset{\\theta }{\\operatorname{Var}}[ \\partial _{\\theta _{i}} C( \\theta )] =\\frac{1}{\\exp( \\Omega ( n))}\\]</span></p>\n<p>We make a few remarks here:</p>\n<ol type=\"1\">\n<li><p>In some text, BP is more strictly defined with respect to <span class=\"math inline\">\\(\\| \\nabla C\\|\\)</span>.</p></li>\n<li><p>By Chebyshev inequality, the probability of finding a point outside of the BP area is exponentially small, which means random parameter initialization is basically inapplicable.</p></li>\n</ol>\n<p>We now make some conventions and give some simple insights. We may assume ansatz to consists of parameterized gates and unparameterized gates, and each parameterized gate takes the form  <span class=\"math inline\">\\(\\exp( -i\\theta A)\\)</span>, where <span class=\"math inline\">\\(A\\)</span> is a Hermitian. Parameterized gates are assumed to be periodical and smooth, with period <span class=\"math inline\">\\(2\\pi\\)</span>. Unless specially specified, cost function takes the form <span class=\"math inline\">\\(\\operatorname{Tr}\\left( OU\\rho U^{\\dagger }\\right)\\)</span>, and <span class=\"math inline\">\\(\\mathbb{E}_{\\theta }[ C] =0\\)</span>.</p>\n<p><strong>Lemma 1</strong> For each <span class=\"math inline\">\\(\\theta _{i} \\in \\theta\\)</span>, <span class=\"math display\">\\[\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =0\\]</span></p>\n<p><em>proof</em>. We decompose periodical real-valued function <span class=\"math inline\">\\(C\\)</span> as Fourier series <span class=\"math inline\">\\(\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\exp( i\\theta \\cdotp \\mathbf{n})\\)</span>. As a consequence,</p>\n<p><span class=\"math display\">\\[\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\underset{\\theta }{\\mathbb{E}}\\left[ e^{i\\theta \\cdotp \\mathbf{n}}\\right]( in_{i}) =0\n\\tag*{$\\square$}\\]</span></p>\n<h1 id=\"scaling-result\">Scaling result</h1>\n<h1 id=\"mitigation-algorithms\">Mitigation algorithms</h1>\n<h1 id=\"appendix-i-integration-on-the-unitary-group\">Appendix I: Integration on the unitary group</h1>\n<h2 id=\"monomial-integration-formula\">Monomial integration formula</h2>\n<p>A general formula<a href=\"#fn1\" class=\"footnote-ref\" id=\"fnref1\"><sup>1</sup></a> of integral of a <span class=\"math inline\">\\(( t,t)\\)</span>-order monomial over the unitary group <span class=\"math inline\">\\(U( d)\\)</span> of dimension <span class=\"math inline\">\\(d\\)</span> can be represented by Weingarten function <span class=\"math inline\">\\(\\operatorname{Wg}\\)</span>:</p>\n<p><span class=\"math display\">\\[\n\\int _{U( d)} U_{i_{1} j_{1}} \\cdots U_{i_{t} j_{t}} U_{i&#39;_{1} j&#39;_{1}}^{*} \\cdots U_{i&#39;_{t} j&#39;_{t}}^{*} dU=\\sum _{\\sigma ,\\tau \\in S( t)} \\delta _{i_{1} i&#39;_{\\sigma ( 1)}} \\cdots \\delta _{i_{t} i&#39;_{\\sigma ( t)}} \\delta _{j_{1} j&#39;_{\\tau ( 1)}} \\cdots \\delta _{j_{t} j&#39;_{\\tau ( t)}}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)\n\\]</span></p>\n<p>The exact form of Weingarten function is <span class=\"math display\">\\[\\operatorname{Wg}_{d}^{t}( \\pi ) =\\frac{1}{t!^{2}}\\sum _{\\lambda \\vdash t}\\frac{\\chi ^{\\lambda }( 1)^{2} \\chi ^{\\lambda }( \\pi )}{s_{\\lambda ,d}( 1)}\\]</span> where the sum is over all integer partition <span class=\"math inline\">\\(\\lambda\\)</span> of <span class=\"math inline\">\\(q\\)</span>, <span class=\"math inline\">\\(\\chi ^{\\lambda }\\)</span> is the character of <span class=\"math inline\">\\(S( t)\\)</span> indexed by <span class=\"math inline\">\\(\\lambda\\)</span>, and <span class=\"math inline\">\\(s_{\\lambda ,d}\\)</span> is the Schur function.</p>\n<p>There are a few remarks on this formula:</p>\n<ol type=\"1\">\n<li><p>Here we follow convention in the quantum mechanics and <span class=\"math inline\">\\(U^{*}\\)</span> represents conjugate of <span class=\"math inline\">\\(U\\)</span>, not conjugate transpose. The latter is written as <span class=\"math inline\">\\(U^{\\dagger }\\)</span>.</p></li>\n<li><p>The value of Weingarten function only depends on the conjugacy class of a permutation, thus the term <span class=\"math inline\">\\(\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)\\)</span> in (1) can be replaced with <span class=\"math inline\">\\(\\operatorname{Wg}_{d}^{t}\\left( \\sigma ^{-1} \\tau \\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau \\sigma ^{-1}\\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau ^{-1} \\sigma \\right)\\)</span>.</p></li>\n<li><p>The measure of <span class=\"math inline\">\\(U( d)\\)</span> is the unique normalized Haar measure. In this sense, such integrals can be identified as expectation: <span class=\"math inline\">\\(\\int _{U( d)} f( U) dU=\\mathbb{E}_{U}[ f( U)]\\)</span>. It also implies that (1) is in fact a <span class=\"math inline\">\\(( t,t)\\)</span>th (or simply <span class=\"math inline\">\\(t\\)</span>th) moment.</p></li>\n<li><p>The integral vanishes if the order <span class=\"math inline\">\\(( t,t&#39;)\\)</span> is not balanced.</p></li>\n<li><p>The integral vanishes if row (column) indices and conjugate row (column) indices do not pair up.</p></li>\n</ol>\n<p>Packages and softwares:</p>\n<ol type=\"1\">\n<li>IntU<a href=\"#fn2\" class=\"footnote-ref\" id=\"fnref2\"><sup>2</sup></a>: symbolic inegration, on Mathematica.</li>\n</ol>\n<h2 id=\"useful-identities\">Useful identities</h2>\n<p><strong>First moment</strong> <span class=\"math display\">\\[\\int _{U( d)} U_{i_{1} j_{1}} U_{i&#39;_{1} j&#39;_{1}}^{*} dU=\\frac{\\delta _{i_{1} i&#39;_{1}} \\delta _{j_{1} j&#39;_{1}}}{d}\\]</span></p>\n<p><strong>Second moment</strong> <span class=\"math display\">\\[\\begin{gathered}\n\\int _{U( d)} U_{i_{1} j_{1}} U_{i_{2} j_{2}} U_{i&#39;_{1} j&#39;_{1}}^{*} U_{i&#39;_{2} j&#39;_{2}}^{*} dU\\\\\n=\\frac{\\delta _{i_{1} i&#39;_{1}} \\delta _{i_{2} i&#39;_{2}} \\delta _{j_{1} j&#39;_{1}} \\delta _{j_{2} j&#39;_{2}} +\\delta _{i_{1} i&#39;_{2}} \\delta _{i_{2} i&#39;_{1}} \\delta _{j_{1} j&#39;_{2}} \\delta _{j_{2} j&#39;_{1}}}{d^{2} -1} -\\frac{\\delta _{i_{1} i&#39;_{1}} \\delta _{i_{2} i&#39;_{2}} \\delta _{j_{1} j&#39;_{2}} \\delta _{j_{2} j&#39;_{1}} +\\delta _{i_{1} i&#39;_{2}} \\delta _{i_{2} i&#39;_{1}} \\delta _{j_{1} j&#39;_{1}} \\delta _{j_{2} j&#39;_{2}}}{d\\left( d^{2} -1\\right)}\\end{gathered}\\]</span></p>\n<p><strong>Equivalent form of</strong> (1) <span class=\"math display\">\\[\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU=\\sum _{\\sigma ,\\tau \\in S( t)}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right) |\\sigma _{d}^{t} \\rangle \\langle \\tau _{d}^{t} |\\]</span> where <span class=\"math inline\">\\(|\\pi _{d}^{t} \\rangle\\)</span> is the non-normalized <em>permutation state</em> <span class=\"math display\">\\[|\\pi _{d}^{t} \\rangle =\\sum _{i_{1} ,\\dotsc ,i_{t} \\in [ d]} |i_{\\pi ( 1)} ,\\dotsc ,i_{\\pi ( t)} \\rangle |i_{1} ,\\dotsc ,i_{t} \\rangle\\]</span></p>\n<h1 id=\"appendix-ii-quantum-desgin\">Appendix II: Quantum desgin</h1>\n<h2 id=\"definition\">Definition</h2>\n<p><strong>Definition 2</strong> A <strong>unitary t-design</strong> is an ensamble of unitaries <span class=\"math inline\">\\(\\{V_{i} ,p_{i}\\}\\)</span> which is indistinguishable from Haar measure, by observing up to <span class=\"math inline\">\\(t\\)</span>th moment. Precisely, for any <span class=\"math inline\">\\(( t,t)\\)</span>-polynomial <span class=\"math inline\">\\(P\\)</span>, <span class=\"math display\">\\[\\sum _{i} p_{i} P( V_{i}) =\\int _{U( d)} P( U) dU\\]</span> or equivalently <span class=\"math display\">\\[\\sum _{i} p_{i} V_{i}^{\\otimes t} \\otimes \\left( V_{i}^{*}\\right)^{\\otimes t} =\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU\\]</span></p>\n<p>We remark that <span class=\"math inline\">\\(M^{\\otimes t} \\otimes \\left( M^{*}\\right)^{\\otimes t}\\)</span> is refered to as <span class=\"math inline\">\\(t\\)</span><strong>th moment superoperator</strong>, sending <span class=\"math inline\">\\(\\rho ^{\\otimes t}\\)</span> to <span class=\"math inline\">\\(\\left( M\\rho M^{\\dagger }\\right)^{\\otimes t}\\)</span>.</p>\n<p>Quantum design share the same name with block design. In fact, they are similar in the sense of randomness. A <strong>block t-design</strong> is an assignment of blocks (<span class=\"math inline\">\\(k\\)</span>-subsets) in <span class=\"math inline\">\\([ N]\\)</span>, such that for all <span class=\"math inline\">\\(i=1,2,\\dotsc ,t\\)</span>, every two <span class=\"math inline\">\\(i\\)</span>-tuples lie in the same number of blocks. It turn out that, if machine A randomly output <span class=\"math inline\">\\(k\\)</span> different numbers from <span class=\"math inline\">\\([ N]\\)</span> while machine B randomly output a block from a block t-design, these two machine is indistinguishable if observer is only allowed to read <span class=\"math inline\">\\(t\\)</span> elements from outputs.</p>\n<section class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn1\"><p>Collins, B. (2002). Moments and Cumulants of Polynomial random variables on unitary groups, the Itzykson-Zuber integral and free probability. ArXiv. https://doi.org/10.48550/ARXIV.MATH-PH/0205010<a href=\"#fnref1\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn2\"><p>Puchała, Z., &amp; Miszczak, J. A. (2017). Symbolic integration with respect to the Haar measure on the unitary groups. Bulletin of the Polish Academy of Sciences Technical Sciences, 65(1), 21–27. https://doi.org/10.1515/bpasts-2017-0003<a href=\"#fnref2\" class=\"footnote-back\">↩</a></p></li>\n</ol>\n</section>\n","site":{"data":{}},"excerpt":"<p>VQA may fail when cost function landscape is extremely flat, a phenomenon called Barren Plateaus. In this note, I list latest progress on this topic.</p>","more":"<h1 id=\"introduction\">Introduction</h1>\n<p>Variational quantum algorithms (VQA) utilize an ansatz (or parameterized quantum circuits, PQC) <span class=\"math inline\">\\(U( \\theta )\\)</span> to optimize a cost function <span class=\"math inline\">\\(C( \\theta )\\)</span>. The optimization iteration is performed by classical optimizors such as GD, BFGS, ADAM, etc. Gradient based optimizors have to query gradients at each iteration, which is done by measuring ansatz. One possible reason this algorithm fail is cost function landscape being extremely flat. By Chernov bound it implies unacceptable number of measurements for evaluating a single gradients. To make it precise, we say the cost function exhibits barren plateau (BP) for a parameter if variance of respective partial derivative is exponentially small.</p>\n<p>A cost function <span class=\"math inline\">\\(C( \\theta )\\)</span> of a <span class=\"math inline\">\\(n\\)</span>-qudit ansatz <span class=\"math inline\">\\(U( \\theta )\\)</span> is said to have a barren plateau when training <span class=\"math inline\">\\(\\theta _{i} \\in \\theta\\)</span>, if <span class=\"math display\">\\[\\underset{\\theta }{\\operatorname{Var}}[ \\partial _{\\theta _{i}} C( \\theta )] =\\frac{1}{\\exp( \\Omega ( n))}\\]</span></p>\n<p>We make a few remarks here:</p>\n<ol type=\"1\">\n<li><p>In some text, BP is more strictly defined with respect to <span class=\"math inline\">\\(\\| \\nabla C\\|\\)</span>.</p></li>\n<li><p>By Chebyshev inequality, the probability of finding a point outside of the BP area is exponentially small, which means random parameter initialization is basically inapplicable.</p></li>\n</ol>\n<p>We now make some conventions and give some simple insights. We may assume ansatz to consists of parameterized gates and unparameterized gates, and each parameterized gate takes the form  <span class=\"math inline\">\\(\\exp( -i\\theta A)\\)</span>, where <span class=\"math inline\">\\(A\\)</span> is a Hermitian. Parameterized gates are assumed to be periodical and smooth, with period <span class=\"math inline\">\\(2\\pi\\)</span>. Unless specially specified, cost function takes the form <span class=\"math inline\">\\(\\operatorname{Tr}\\left( OU\\rho U^{\\dagger }\\right)\\)</span>, and <span class=\"math inline\">\\(\\mathbb{E}_{\\theta }[ C] =0\\)</span>.</p>\n<p><strong>Lemma 1</strong> For each <span class=\"math inline\">\\(\\theta _{i} \\in \\theta\\)</span>, <span class=\"math display\">\\[\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =0\\]</span></p>\n<p><em>proof</em>. We decompose periodical real-valued function <span class=\"math inline\">\\(C\\)</span> as Fourier series <span class=\"math inline\">\\(\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\exp( i\\theta \\cdotp \\mathbf{n})\\)</span>. As a consequence,</p>\n<p><span class=\"math display\">\\[\\underset{\\theta }{\\mathbb{E}}[ \\partial _{\\theta _{i}} C] =\\sum _{\\mathbf{n}} c_{\\mathbf{n}}\\underset{\\theta }{\\mathbb{E}}\\left[ e^{i\\theta \\cdotp \\mathbf{n}}\\right]( in_{i}) =0\n\\tag*{$\\square$}\\]</span></p>\n<h1 id=\"scaling-result\">Scaling result</h1>\n<h1 id=\"mitigation-algorithms\">Mitigation algorithms</h1>\n<h1 id=\"appendix-i-integration-on-the-unitary-group\">Appendix I: Integration on the unitary group</h1>\n<h2 id=\"monomial-integration-formula\">Monomial integration formula</h2>\n<p>A general formula<a href=\"#fn1\" class=\"footnote-ref\" id=\"fnref1\"><sup>1</sup></a> of integral of a <span class=\"math inline\">\\(( t,t)\\)</span>-order monomial over the unitary group <span class=\"math inline\">\\(U( d)\\)</span> of dimension <span class=\"math inline\">\\(d\\)</span> can be represented by Weingarten function <span class=\"math inline\">\\(\\operatorname{Wg}\\)</span>:</p>\n<p><span class=\"math display\">\\[\n\\int _{U( d)} U_{i_{1} j_{1}} \\cdots U_{i_{t} j_{t}} U_{i&#39;_{1} j&#39;_{1}}^{*} \\cdots U_{i&#39;_{t} j&#39;_{t}}^{*} dU=\\sum _{\\sigma ,\\tau \\in S( t)} \\delta _{i_{1} i&#39;_{\\sigma ( 1)}} \\cdots \\delta _{i_{t} i&#39;_{\\sigma ( t)}} \\delta _{j_{1} j&#39;_{\\tau ( 1)}} \\cdots \\delta _{j_{t} j&#39;_{\\tau ( t)}}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)\n\\]</span></p>\n<p>The exact form of Weingarten function is <span class=\"math display\">\\[\\operatorname{Wg}_{d}^{t}( \\pi ) =\\frac{1}{t!^{2}}\\sum _{\\lambda \\vdash t}\\frac{\\chi ^{\\lambda }( 1)^{2} \\chi ^{\\lambda }( \\pi )}{s_{\\lambda ,d}( 1)}\\]</span> where the sum is over all integer partition <span class=\"math inline\">\\(\\lambda\\)</span> of <span class=\"math inline\">\\(q\\)</span>, <span class=\"math inline\">\\(\\chi ^{\\lambda }\\)</span> is the character of <span class=\"math inline\">\\(S( t)\\)</span> indexed by <span class=\"math inline\">\\(\\lambda\\)</span>, and <span class=\"math inline\">\\(s_{\\lambda ,d}\\)</span> is the Schur function.</p>\n<p>There are a few remarks on this formula:</p>\n<ol type=\"1\">\n<li><p>Here we follow convention in the quantum mechanics and <span class=\"math inline\">\\(U^{*}\\)</span> represents conjugate of <span class=\"math inline\">\\(U\\)</span>, not conjugate transpose. The latter is written as <span class=\"math inline\">\\(U^{\\dagger }\\)</span>.</p></li>\n<li><p>The value of Weingarten function only depends on the conjugacy class of a permutation, thus the term <span class=\"math inline\">\\(\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right)\\)</span> in (1) can be replaced with <span class=\"math inline\">\\(\\operatorname{Wg}_{d}^{t}\\left( \\sigma ^{-1} \\tau \\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau \\sigma ^{-1}\\right) =\\operatorname{Wg}_{d}^{t}\\left( \\tau ^{-1} \\sigma \\right)\\)</span>.</p></li>\n<li><p>The measure of <span class=\"math inline\">\\(U( d)\\)</span> is the unique normalized Haar measure. In this sense, such integrals can be identified as expectation: <span class=\"math inline\">\\(\\int _{U( d)} f( U) dU=\\mathbb{E}_{U}[ f( U)]\\)</span>. It also implies that (1) is in fact a <span class=\"math inline\">\\(( t,t)\\)</span>th (or simply <span class=\"math inline\">\\(t\\)</span>th) moment.</p></li>\n<li><p>The integral vanishes if the order <span class=\"math inline\">\\(( t,t&#39;)\\)</span> is not balanced.</p></li>\n<li><p>The integral vanishes if row (column) indices and conjugate row (column) indices do not pair up.</p></li>\n</ol>\n<p>Packages and softwares:</p>\n<ol type=\"1\">\n<li>IntU<a href=\"#fn2\" class=\"footnote-ref\" id=\"fnref2\"><sup>2</sup></a>: symbolic inegration, on Mathematica.</li>\n</ol>\n<h2 id=\"useful-identities\">Useful identities</h2>\n<p><strong>First moment</strong> <span class=\"math display\">\\[\\int _{U( d)} U_{i_{1} j_{1}} U_{i&#39;_{1} j&#39;_{1}}^{*} dU=\\frac{\\delta _{i_{1} i&#39;_{1}} \\delta _{j_{1} j&#39;_{1}}}{d}\\]</span></p>\n<p><strong>Second moment</strong> <span class=\"math display\">\\[\\begin{gathered}\n\\int _{U( d)} U_{i_{1} j_{1}} U_{i_{2} j_{2}} U_{i&#39;_{1} j&#39;_{1}}^{*} U_{i&#39;_{2} j&#39;_{2}}^{*} dU\\\\\n=\\frac{\\delta _{i_{1} i&#39;_{1}} \\delta _{i_{2} i&#39;_{2}} \\delta _{j_{1} j&#39;_{1}} \\delta _{j_{2} j&#39;_{2}} +\\delta _{i_{1} i&#39;_{2}} \\delta _{i_{2} i&#39;_{1}} \\delta _{j_{1} j&#39;_{2}} \\delta _{j_{2} j&#39;_{1}}}{d^{2} -1} -\\frac{\\delta _{i_{1} i&#39;_{1}} \\delta _{i_{2} i&#39;_{2}} \\delta _{j_{1} j&#39;_{2}} \\delta _{j_{2} j&#39;_{1}} +\\delta _{i_{1} i&#39;_{2}} \\delta _{i_{2} i&#39;_{1}} \\delta _{j_{1} j&#39;_{1}} \\delta _{j_{2} j&#39;_{2}}}{d\\left( d^{2} -1\\right)}\\end{gathered}\\]</span></p>\n<p><strong>Equivalent form of</strong> (1) <span class=\"math display\">\\[\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU=\\sum _{\\sigma ,\\tau \\in S( t)}\\operatorname{Wg}_{d}^{t}\\left( \\sigma \\tau ^{-1}\\right) |\\sigma _{d}^{t} \\rangle \\langle \\tau _{d}^{t} |\\]</span> where <span class=\"math inline\">\\(|\\pi _{d}^{t} \\rangle\\)</span> is the non-normalized <em>permutation state</em> <span class=\"math display\">\\[|\\pi _{d}^{t} \\rangle =\\sum _{i_{1} ,\\dotsc ,i_{t} \\in [ d]} |i_{\\pi ( 1)} ,\\dotsc ,i_{\\pi ( t)} \\rangle |i_{1} ,\\dotsc ,i_{t} \\rangle\\]</span></p>\n<h1 id=\"appendix-ii-quantum-desgin\">Appendix II: Quantum desgin</h1>\n<h2 id=\"definition\">Definition</h2>\n<p><strong>Definition 2</strong> A <strong>unitary t-design</strong> is an ensamble of unitaries <span class=\"math inline\">\\(\\{V_{i} ,p_{i}\\}\\)</span> which is indistinguishable from Haar measure, by observing up to <span class=\"math inline\">\\(t\\)</span>th moment. Precisely, for any <span class=\"math inline\">\\(( t,t)\\)</span>-polynomial <span class=\"math inline\">\\(P\\)</span>, <span class=\"math display\">\\[\\sum _{i} p_{i} P( V_{i}) =\\int _{U( d)} P( U) dU\\]</span> or equivalently <span class=\"math display\">\\[\\sum _{i} p_{i} V_{i}^{\\otimes t} \\otimes \\left( V_{i}^{*}\\right)^{\\otimes t} =\\int _{U( d)} U^{\\otimes t} \\otimes \\left( U^{*}\\right)^{\\otimes t} dU\\]</span></p>\n<p>We remark that <span class=\"math inline\">\\(M^{\\otimes t} \\otimes \\left( M^{*}\\right)^{\\otimes t}\\)</span> is refered to as <span class=\"math inline\">\\(t\\)</span><strong>th moment superoperator</strong>, sending <span class=\"math inline\">\\(\\rho ^{\\otimes t}\\)</span> to <span class=\"math inline\">\\(\\left( M\\rho M^{\\dagger }\\right)^{\\otimes t}\\)</span>.</p>\n<p>Quantum design share the same name with block design. In fact, they are similar in the sense of randomness. A <strong>block t-design</strong> is an assignment of blocks (<span class=\"math inline\">\\(k\\)</span>-subsets) in <span class=\"math inline\">\\([ N]\\)</span>, such that for all <span class=\"math inline\">\\(i=1,2,\\dotsc ,t\\)</span>, every two <span class=\"math inline\">\\(i\\)</span>-tuples lie in the same number of blocks. It turn out that, if machine A randomly output <span class=\"math inline\">\\(k\\)</span> different numbers from <span class=\"math inline\">\\([ N]\\)</span> while machine B randomly output a block from a block t-design, these two machine is indistinguishable if observer is only allowed to read <span class=\"math inline\">\\(t\\)</span> elements from outputs.</p>\n<section class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn1\"><p>Collins, B. (2002). Moments and Cumulants of Polynomial random variables on unitary groups, the Itzykson-Zuber integral and free probability. ArXiv. https://doi.org/10.48550/ARXIV.MATH-PH/0205010<a href=\"#fnref1\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn2\"><p>Puchała, Z., &amp; Miszczak, J. A. (2017). Symbolic integration with respect to the Haar measure on the unitary groups. Bulletin of the Polish Academy of Sciences Technical Sciences, 65(1), 21–27. https://doi.org/10.1515/bpasts-2017-0003<a href=\"#fnref2\" class=\"footnote-back\">↩</a></p></li>\n</ol>\n</section>"},{"title":"Documenting my experience with Ubuntu","date":"2022-05-04T08:45:37.000Z","_content":"\nDocumenting my experience with UbuntuLog my usage on Ubuntu, what I configured, what I installed, what I experienced.\n\n<!-- more -->\n\n# Shortcuts\n\n## Screenshot\n\n* `Print`: Take a screenshot of the desktop.\n* `Alt+Print`: Take a screenshot of a window.\n* `Shift+Print`: Take a screenshot of an area you select.\n* `Ctrl+Print`: Same but save to clipboard.\n* `Ctrl+Alt+Print`: Same but save to clipboard.\n* `Ctrl+Shift+Print`: Same but save to clipboard.\n\n# VLC\n\nAlthough [VLC](https://www.videolan.org/) is most recommanded, my experience\nwith it sucks. Its last century style UI is unbearable. The most bizarre thing\nis that every time you open it, there is a high probability that the audio and\npicture will be separated: one window for video and one window for audio.\n\nAfter searching for a long time, I finally found a solution\n[here](https://askubuntu.com/a/1384279).\n\nYou have to change two settings in **Preference** (`Ctrl-P` to open it).\n\n![](/attach/g81lo.png)\n\n![](/attach/bvm92.png)","source":"_posts/ubuntu-log-md.md","raw":"---\ntitle: Documenting my experience with Ubuntu\ndate: 2022-05-04 16:45:37\ncategories:\n- Tech\ntags:\n- Ubuntu\n- Linux\n- Log\n---\n\nDocumenting my experience with UbuntuLog my usage on Ubuntu, what I configured, what I installed, what I experienced.\n\n<!-- more -->\n\n# Shortcuts\n\n## Screenshot\n\n* `Print`: Take a screenshot of the desktop.\n* `Alt+Print`: Take a screenshot of a window.\n* `Shift+Print`: Take a screenshot of an area you select.\n* `Ctrl+Print`: Same but save to clipboard.\n* `Ctrl+Alt+Print`: Same but save to clipboard.\n* `Ctrl+Shift+Print`: Same but save to clipboard.\n\n# VLC\n\nAlthough [VLC](https://www.videolan.org/) is most recommanded, my experience\nwith it sucks. Its last century style UI is unbearable. The most bizarre thing\nis that every time you open it, there is a high probability that the audio and\npicture will be separated: one window for video and one window for audio.\n\nAfter searching for a long time, I finally found a solution\n[here](https://askubuntu.com/a/1384279).\n\nYou have to change two settings in **Preference** (`Ctrl-P` to open it).\n\n![](/attach/g81lo.png)\n\n![](/attach/bvm92.png)","slug":"ubuntu-log-md","published":1,"updated":"2022-05-04T09:18:24.429Z","_id":"cl2rc5jbn00006offhamp9aqr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Documenting my experience with UbuntuLog my usage on Ubuntu, what I configured, what I installed, what I experienced.</p>\n<span id=\"more\"></span>\n<h1 id=\"shortcuts\">Shortcuts</h1>\n<h2 id=\"screenshot\">Screenshot</h2>\n<ul>\n<li><code>Print</code>: Take a screenshot of the desktop.</li>\n<li><code>Alt+Print</code>: Take a screenshot of a window.</li>\n<li><code>Shift+Print</code>: Take a screenshot of an area you select.</li>\n<li><code>Ctrl+Print</code>: Same but save to clipboard.</li>\n<li><code>Ctrl+Alt+Print</code>: Same but save to clipboard.</li>\n<li><code>Ctrl+Shift+Print</code>: Same but save to clipboard.</li>\n</ul>\n<h1 id=\"vlc\">VLC</h1>\n<p>Although <a href=\"https://www.videolan.org/\">VLC</a> is most recommanded, my experience with it sucks. Its last century style UI is unbearable. The most bizarre thing is that every time you open it, there is a high probability that the audio and picture will be separated: one window for video and one window for audio.</p>\n<p>After searching for a long time, I finally found a solution <a href=\"https://askubuntu.com/a/1384279\">here</a>.</p>\n<p>You have to change two settings in <strong>Preference</strong> (<code>Ctrl-P</code> to open it).</p>\n<p><img src=\"/attach/g81lo.png\" /></p>\n<p><img src=\"/attach/bvm92.png\" /></p>\n","site":{"data":{}},"excerpt":"<p>Documenting my experience with UbuntuLog my usage on Ubuntu, what I configured, what I installed, what I experienced.</p>","more":"<h1 id=\"shortcuts\">Shortcuts</h1>\n<h2 id=\"screenshot\">Screenshot</h2>\n<ul>\n<li><code>Print</code>: Take a screenshot of the desktop.</li>\n<li><code>Alt+Print</code>: Take a screenshot of a window.</li>\n<li><code>Shift+Print</code>: Take a screenshot of an area you select.</li>\n<li><code>Ctrl+Print</code>: Same but save to clipboard.</li>\n<li><code>Ctrl+Alt+Print</code>: Same but save to clipboard.</li>\n<li><code>Ctrl+Shift+Print</code>: Same but save to clipboard.</li>\n</ul>\n<h1 id=\"vlc\">VLC</h1>\n<p>Although <a href=\"https://www.videolan.org/\">VLC</a> is most recommanded, my experience with it sucks. Its last century style UI is unbearable. The most bizarre thing is that every time you open it, there is a high probability that the audio and picture will be separated: one window for video and one window for audio.</p>\n<p>After searching for a long time, I finally found a solution <a href=\"https://askubuntu.com/a/1384279\">here</a>.</p>\n<p>You have to change two settings in <strong>Preference</strong> (<code>Ctrl-P</code> to open it).</p>\n<p><img src=\"/attach/g81lo.png\" /></p>\n<p><img src=\"/attach/bvm92.png\" /></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl16fwqi800082sff5lx88u3x","category_id":"cl16fwqi300042sfff14qe02x","_id":"cl16fwqic000f2sff03atbezl"},{"post_id":"cl16fwqhy00012sff4h0od4rq","category_id":"cl16fwqi300042sfff14qe02x","_id":"cl16fwqif000j2sfffydxc1r6"},{"post_id":"cl16fwqi900092sff31yc9j4t","category_id":"cl16fwqi300042sfff14qe02x","_id":"cl16fwqig000l2sff694s4ii1"},{"post_id":"cl16fwqib000d2sff8hengg3v","category_id":"cl16fwqia000a2sffa0d268k3","_id":"cl16fwqij000o2sff93qb4eav"},{"post_id":"cl16fwqi100032sff2869abfp","category_id":"cl16fwqia000a2sffa0d268k3","_id":"cl16fwqik000q2sfffrokallv"},{"post_id":"cl16fwqic000e2sff7qozgog4","category_id":"cl16fwqia000a2sffa0d268k3","_id":"cl16fwqil000s2sff3fybh8of"},{"post_id":"cl16fwqie000i2sffe57yhs9p","category_id":"cl16fwqia000a2sffa0d268k3","_id":"cl16fwqil000u2sffami9cqpv"},{"post_id":"cl16fwqi600072sffbwfofwfy","category_id":"cl16fwqia000a2sffa0d268k3","_id":"cl16fwqil000w2sff8sahhrim"},{"post_id":"cl16fwqif000k2sff77byb8fh","category_id":"cl16fwqia000a2sffa0d268k3","_id":"cl16fwqim000z2sffdu8yg7y9"},{"post_id":"cl16fwqii000n2sff3fr36ycu","category_id":"cl16fwqi300042sfff14qe02x","_id":"cl16fwqim00102sffg0r2999w"},{"post_id":"cl16fwqik000p2sffbpwj2lkp","category_id":"cl16fwqi300042sfff14qe02x","_id":"cl16fwqin00132sff46mn3coe"},{"post_id":"cl16fwqiv00202sff8olz808p","category_id":"cl16fwqi300042sfff14qe02x","_id":"cl16fwqiw00222sffe9tjcisy"},{"post_id":"cl17jfzn700005fff5q5h3ky4","category_id":"cl16fwqia000a2sffa0d268k3","_id":"cl17jfzne00025fff3b1a578l"},{"post_id":"cl2rc5jbn00006offhamp9aqr","category_id":"cl16fwqi300042sfff14qe02x","_id":"cl2rc7s2800026off0ih2fbz7"}],"PostTag":[{"post_id":"cl16fwqhy00012sff4h0od4rq","tag_id":"cl16fwqi500052sff1xwmee9d","_id":"cl16fwqib000c2sffe1j1epmo"},{"post_id":"cl16fwqi100032sff2869abfp","tag_id":"cl16fwqia000b2sff8iefh46h","_id":"cl16fwqil000t2sff1uo71diu"},{"post_id":"cl16fwqi100032sff2869abfp","tag_id":"cl16fwqid000h2sffhaot2ifn","_id":"cl16fwqil000v2sff7wpu7m8a"},{"post_id":"cl16fwqi100032sff2869abfp","tag_id":"cl16fwqih000m2sff3xcn1a8y","_id":"cl16fwqim000y2sff4ttz0rr3"},{"post_id":"cl16fwqi600072sffbwfofwfy","tag_id":"cl16fwqil000r2sff07qugakw","_id":"cl16fwqin00122sffb46z4bhn"},{"post_id":"cl16fwqi600072sffbwfofwfy","tag_id":"cl16fwqih000m2sff3xcn1a8y","_id":"cl16fwqin00142sff83n28ihj"},{"post_id":"cl16fwqi800082sff5lx88u3x","tag_id":"cl16fwqim00112sff48lx404q","_id":"cl16fwqin00162sffdpbt8u16"},{"post_id":"cl16fwqi800082sff5lx88u3x","tag_id":"cl16fwqi500052sff1xwmee9d","_id":"cl16fwqin00172sff90htap60"},{"post_id":"cl16fwqi900092sff31yc9j4t","tag_id":"cl16fwqin00152sff2wt85lac","_id":"cl16fwqio001a2sff9hkc1ckg"},{"post_id":"cl16fwqi900092sff31yc9j4t","tag_id":"cl16fwqin00182sff62m957cp","_id":"cl16fwqio001b2sff3eaj30p1"},{"post_id":"cl16fwqi900092sff31yc9j4t","tag_id":"cl16fwqi500052sff1xwmee9d","_id":"cl16fwqip001d2sff3xvo37fy"},{"post_id":"cl16fwqib000d2sff8hengg3v","tag_id":"cl16fwqia000b2sff8iefh46h","_id":"cl16fwqip001f2sff3mnhgp5o"},{"post_id":"cl16fwqib000d2sff8hengg3v","tag_id":"cl16fwqio00192sfffzm6513z","_id":"cl16fwqip001g2sffaxft7yj4"},{"post_id":"cl16fwqib000d2sff8hengg3v","tag_id":"cl16fwqid000h2sffhaot2ifn","_id":"cl16fwqiq001i2sff1f911adh"},{"post_id":"cl16fwqic000e2sff7qozgog4","tag_id":"cl16fwqia000b2sff8iefh46h","_id":"cl16fwqiq001k2sffd7zn1yn0"},{"post_id":"cl16fwqic000e2sff7qozgog4","tag_id":"cl16fwqih000m2sff3xcn1a8y","_id":"cl16fwqiq001l2sffc9u4dgxv"},{"post_id":"cl16fwqic000e2sff7qozgog4","tag_id":"cl16fwqid000h2sffhaot2ifn","_id":"cl16fwqir001n2sffdnhnel1x"},{"post_id":"cl16fwqie000i2sffe57yhs9p","tag_id":"cl16fwqiq001j2sff04qffcqv","_id":"cl16fwqir001p2sffh6xlddei"},{"post_id":"cl16fwqie000i2sffe57yhs9p","tag_id":"cl16fwqih000m2sff3xcn1a8y","_id":"cl16fwqir001q2sff5bhh6tk8"},{"post_id":"cl16fwqif000k2sff77byb8fh","tag_id":"cl16fwqil000r2sff07qugakw","_id":"cl16fwqis001t2sffe2mfamev"},{"post_id":"cl16fwqif000k2sff77byb8fh","tag_id":"cl16fwqih000m2sff3xcn1a8y","_id":"cl16fwqis001u2sff5bbo1hkc"},{"post_id":"cl16fwqii000n2sff3fr36ycu","tag_id":"cl16fwqis001s2sfffurh21st","_id":"cl16fwqit001w2sff5t8db4po"},{"post_id":"cl16fwqik000p2sffbpwj2lkp","tag_id":"cl16fwqis001v2sff1412cey5","_id":"cl16fwqit001y2sff1xtndlow"},{"post_id":"cl16fwqik000p2sffbpwj2lkp","tag_id":"cl16fwqit001x2sff5ujc9zt9","_id":"cl16fwqit001z2sff2xy0hija"},{"post_id":"cl16fwqiv00202sff8olz808p","tag_id":"cl16fwqis001v2sff1412cey5","_id":"cl16fwqiw00232sff3xlkd4x1"},{"post_id":"cl16fwqiv00202sff8olz808p","tag_id":"cl16fwqiv00212sffdx8e1t6q","_id":"cl16fwqiw00242sffdl5h04wa"},{"post_id":"cl17jfzn700005fff5q5h3ky4","tag_id":"cl16fwqia000b2sff8iefh46h","_id":"cl17jfznd00015fff99sob56y"},{"post_id":"cl2rc5jbn00006offhamp9aqr","tag_id":"cl2rc7s2500016off404ich9a","_id":"cl2rc7s2b00046offcok68m8q"},{"post_id":"cl2rc5jbn00006offhamp9aqr","tag_id":"cl16fwqim00112sff48lx404q","_id":"cl2rc7s2b00056offh1lofd7p"},{"post_id":"cl2rc5jbn00006offhamp9aqr","tag_id":"cl2rc7s2900036offhrn2hvaf","_id":"cl2rc7s2b00066offdhvl8zfn"}],"Tag":[{"name":"Software","_id":"cl16fwqi500052sff1xwmee9d"},{"name":"Quantum","_id":"cl16fwqia000b2sff8iefh46h"},{"name":"Paper","_id":"cl16fwqid000h2sffhaot2ifn"},{"name":"Note","_id":"cl16fwqih000m2sff3xcn1a8y"},{"name":"Math","_id":"cl16fwqil000r2sff07qugakw"},{"name":"Linux","_id":"cl16fwqim00112sff48lx404q"},{"name":"ML","_id":"cl16fwqin00152sff2wt85lac"},{"name":"Python","_id":"cl16fwqin00182sff62m957cp"},{"name":"Collection","_id":"cl16fwqio00192sfffzm6513z"},{"name":"Statistics","_id":"cl16fwqiq001j2sff04qffcqv"},{"name":"collection","_id":"cl16fwqis001s2sfffurh21st"},{"name":"Web","_id":"cl16fwqis001v2sff1412cey5"},{"name":"Server","_id":"cl16fwqit001x2sff5ujc9zt9"},{"name":"Vue","_id":"cl16fwqiv00212sffdx8e1t6q"},{"name":"Ubuntu","_id":"cl2rc7s2500016off404ich9a"},{"name":"Log","_id":"cl2rc7s2900036offhrn2hvaf"}]}}